{"meta":{"title":"HUI BLOG","subtitle":null,"description":null,"author":"HUI","url":"https://aclihui.com"},"pages":[{"title":"About me","date":"2018-08-06T02:36:36.000Z","updated":"2018-08-06T02:53:54.188Z","comments":true,"path":"about/index.html","permalink":"https://aclihui.com/about/index.html","excerpt":"","text":"本科在读，计算机专业，18年暑假正式开始学习前端。 知识无边无界,如果说擅长的有下面的几种： 熟悉C,熟悉Java,了解HTML,会使用Linux。"},{"title":"archives","date":"2018-07-18T16:00:00.000Z","updated":"2018-07-19T06:18:12.452Z","comments":true,"path":"archives/index.html","permalink":"https://aclihui.com/archives/index.html","excerpt":"","text":""},{"title":"分类页面","date":"2018-12-02T08:33:15.000Z","updated":"2018-12-02T08:33:56.840Z","comments":false,"path":"categories/index.html","permalink":"https://aclihui.com/categories/index.html","excerpt":"","text":""},{"title":"links","date":"2018-08-08T00:17:48.000Z","updated":"2018-08-08T01:58:52.863Z","comments":true,"path":"links/index.html","permalink":"https://aclihui.com/links/index.html","excerpt":"","text":"友人名称 友人LOGO 友人宣言 hojun hojun 一个好奇的人"},{"title":"标签云","date":"2018-12-02T08:31:53.000Z","updated":"2018-12-02T08:32:33.542Z","comments":false,"path":"tags/index.html","permalink":"https://aclihui.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"android_see","slug":"android-see","date":"2019-01-04T14:33:14.000Z","updated":"2019-01-04T14:33:14.078Z","comments":true,"path":"android-see/","link":"","permalink":"https://aclihui.com/android-see/","excerpt":"","text":"","categories":[{"name":"占位分类","slug":"占位分类","permalink":"https://aclihui.com/categories/占位分类/"}],"tags":[{"name":"占位标签","slug":"占位标签","permalink":"https://aclihui.com/tags/占位标签/"}]},{"title":"docker 集群","slug":"docker-jiqun","date":"2019-01-02T15:06:46.000Z","updated":"2019-01-16T16:02:58.420Z","comments":true,"path":"docker-jiqun/","link":"","permalink":"https://aclihui.com/docker-jiqun/","excerpt":"","text":"","categories":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/categories/docker/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/tags/docker/"}]},{"title":"异步","slug":"yibu","date":"2018-12-31T14:43:50.000Z","updated":"2018-12-31T14:44:34.913Z","comments":true,"path":"yibu/","link":"","permalink":"https://aclihui.com/yibu/","excerpt":"","text":"","categories":[{"name":"后台","slug":"后台","permalink":"https://aclihui.com/categories/后台/"}],"tags":[{"name":"后台","slug":"后台","permalink":"https://aclihui.com/tags/后台/"}]},{"title":"list_search","slug":"list-search","date":"2018-12-30T15:32:12.000Z","updated":"2018-12-30T15:32:51.645Z","comments":true,"path":"list-search/","link":"","permalink":"https://aclihui.com/list-search/","excerpt":"","text":"","categories":[{"name":"Android","slug":"Android","permalink":"https://aclihui.com/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://aclihui.com/tags/Android/"}]},{"title":"使用jenkins","slug":"try-jenkins","date":"2018-12-29T15:23:54.000Z","updated":"2018-12-29T15:24:52.311Z","comments":true,"path":"try-jenkins/","link":"","permalink":"https://aclihui.com/try-jenkins/","excerpt":"","text":"","categories":[{"name":"jenkins","slug":"jenkins","permalink":"https://aclihui.com/categories/jenkins/"}],"tags":[{"name":"jenkins","slug":"jenkins","permalink":"https://aclihui.com/tags/jenkins/"}]},{"title":"docker_prime","slug":"docker-prime","date":"2018-12-28T14:54:48.000Z","updated":"2018-12-28T14:54:48.174Z","comments":true,"path":"docker-prime/","link":"","permalink":"https://aclihui.com/docker-prime/","excerpt":"","text":"","categories":[{"name":"占位分类","slug":"占位分类","permalink":"https://aclihui.com/categories/占位分类/"}],"tags":[{"name":"占位标签","slug":"占位标签","permalink":"https://aclihui.com/tags/占位标签/"}]},{"title":"早睡早起","slug":"zaosuizaoqi","date":"2018-12-27T14:54:31.000Z","updated":"2018-12-27T14:55:17.971Z","comments":true,"path":"zaosuizaoqi/","link":"","permalink":"https://aclihui.com/zaosuizaoqi/","excerpt":"","text":"","categories":[{"name":"日志","slug":"日志","permalink":"https://aclihui.com/categories/日志/"}],"tags":[{"name":"日志","slug":"日志","permalink":"https://aclihui.com/tags/日志/"}]},{"title":"Android列表","slug":"android-list","date":"2018-12-26T14:58:54.000Z","updated":"2018-12-26T14:59:58.781Z","comments":true,"path":"android-list/","link":"","permalink":"https://aclihui.com/android-list/","excerpt":"","text":"今天开源了简单了列表","categories":[{"name":"Android","slug":"Android","permalink":"https://aclihui.com/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://aclihui.com/tags/Android/"}]},{"title":"docker安装PHP环境","slug":"dockerer-install-php","date":"2018-12-25T14:58:18.000Z","updated":"2018-12-25T14:59:44.938Z","comments":true,"path":"dockerer-install-php/","link":"","permalink":"https://aclihui.com/dockerer-install-php/","excerpt":"","text":"前言Docker来配置PHP+mysql环境,使其简单化。","categories":[{"name":"Docker","slug":"Docker","permalink":"https://aclihui.com/categories/Docker/"},{"name":"PHP","slug":"Docker/PHP","permalink":"https://aclihui.com/categories/Docker/PHP/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://aclihui.com/tags/Docker/"},{"name":"PHP","slug":"PHP","permalink":"https://aclihui.com/tags/PHP/"}]},{"title":"C语言的引用","slug":"C-code","date":"2018-12-24T14:56:11.000Z","updated":"2018-12-24T14:57:38.394Z","comments":true,"path":"C-code/","link":"","permalink":"https://aclihui.com/C-code/","excerpt":"","text":"前言今天学到的最深刻的就是C++的引用","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"https://aclihui.com/tags/C/"}]},{"title":"五分钟创建WordPress","slug":"quick-to-build-wp","date":"2018-12-23T13:29:15.000Z","updated":"2018-12-23T13:52:16.099Z","comments":true,"path":"quick-to-build-wp/","link":"","permalink":"https://aclihui.com/quick-to-build-wp/","excerpt":"","text":"起因docker实例 快速创建wp 第一步输入命令12docker run --name db --env MYSQL_ROOT_PASSWORD=example -d mariadbdocker run --name MyWordPress --link db:mysql -p 8080:80 -d wordpress 下载中 下载完成打开 http://192.168.99.100:8080开始安装 填写必要的信息 安装完成 撒花 内部更新也可以使用","categories":[{"name":"WordPress","slug":"WordPress","permalink":"https://aclihui.com/categories/WordPress/"},{"name":"Docker","slug":"WordPress/Docker","permalink":"https://aclihui.com/categories/WordPress/Docker/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://aclihui.com/tags/Docker/"},{"name":"WordPress","slug":"WordPress","permalink":"https://aclihui.com/tags/WordPress/"}]},{"title":"window10家庭版尝试安装docker","slug":"try-docker-in-windows","date":"2018-12-23T12:51:43.000Z","updated":"2018-12-23T13:19:16.597Z","comments":true,"path":"try-docker-in-windows/","link":"","permalink":"https://aclihui.com/try-docker-in-windows/","excerpt":"","text":"起因一直以来发现官网上说Docker支持window10 PRO及商业版,没有商业版的我一直也没有尝试，一直使用虚拟机来做Docker，非常的不方便，今天尝试用windows家庭版尝试安装 第一步 检查是否支持虚拟化 看来我的机器是支持的 第二步去下载Docker网址: https://hub.docker.com/editions/community/docker-ce-desktop-windows发现好像不支持 因此采用 循序渐进学docker的书中的dockertoolboxhttps://docs.docker.com/docker-for-windows/install/开始漫长的等待 第三步 经典的windows 下一步，下一步，下一步 此处我按照默认的选择 强行vbox (haha) 第四步 下载前置的东西打开 quickStart开始下载 获取IP我这里有一点点点点点点点点点点点慢 丑鲸鱼显示成功（逃 第五步 拉去hello-world 成功。","categories":[{"name":"Docker","slug":"Docker","permalink":"https://aclihui.com/categories/Docker/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"https://aclihui.com/tags/Docker/"}]},{"title":"退出qemu虚拟机","slug":"qemu-exit","date":"2018-12-23T07:41:29.000Z","updated":"2018-12-23T07:46:14.282Z","comments":true,"path":"qemu-exit/","link":"","permalink":"https://aclihui.com/qemu-exit/","excerpt":"","text":"前言介绍qemu的退出 命令首先按下ctrl+a 再放手 按a退出即可。","categories":[{"name":"qumu","slug":"qumu","permalink":"https://aclihui.com/categories/qumu/"}],"tags":[{"name":"qemu","slug":"qemu","permalink":"https://aclihui.com/tags/qemu/"}]},{"title":"更换网站程序","slug":"change-web-software","date":"2018-12-23T05:10:54.000Z","updated":"2018-12-23T05:13:22.292Z","comments":true,"path":"change-web-software/","link":"","permalink":"https://aclihui.com/change-web-software/","excerpt":"","text":"起因考虑到hexo 上面很多东西都没有对应的插件（eg:邮件回复插件等等）可能在不久的将来会换回去。提前告知。","categories":[{"name":"日志","slug":"日志","permalink":"https://aclihui.com/categories/日志/"}],"tags":[{"name":"日志","slug":"日志","permalink":"https://aclihui.com/tags/日志/"}]},{"title":"octave入门","slug":"octave-rumen","date":"2018-12-22T15:16:08.000Z","updated":"2018-12-22T15:35:22.972Z","comments":true,"path":"octave-rumen/","link":"","permalink":"https://aclihui.com/octave-rumen/","excerpt":"","text":"前言基础入门知识 首先是简单的运算1+1 内建函数exp(1)函数 解释1exp，高等数学里以自然常数e为底的指数函数，它同时又是航模名词，全称Exponential(指数曲线)。 sin (1/2*pi) 函数和sin(pi) 此时发现sin(pi)的数值极其小。 变量定义","categories":[{"name":"octave","slug":"octave","permalink":"https://aclihui.com/categories/octave/"}],"tags":[{"name":"octave","slug":"octave","permalink":"https://aclihui.com/tags/octave/"}]},{"title":"tensorflow_install","slug":"tensorflow-install","date":"2018-12-21T14:29:39.000Z","updated":"2018-12-21T15:29:15.588Z","comments":true,"path":"tensorflow-install/","link":"","permalink":"https://aclihui.com/tensorflow-install/","excerpt":"","text":"第一步 安装Anaconda 3同时获得 安装完成 设置环境变量安装CPU版1pip install --upgrade --ignore-installed tensorflow 安装GPU版本1pip install --upgrade --ignore-installed tensorflow-gpu","categories":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://aclihui.com/categories/TensorFlow/"}],"tags":[{"name":"TensorFlow","slug":"TensorFlow","permalink":"https://aclihui.com/tags/TensorFlow/"}]},{"title":"automation_think","slug":"automation-think","date":"2018-12-21T03:00:36.000Z","updated":"2018-12-21T03:00:36.425Z","comments":true,"path":"automation-think/","link":"","permalink":"https://aclihui.com/automation-think/","excerpt":"","text":"","categories":[{"name":"占位分类","slug":"占位分类","permalink":"https://aclihui.com/categories/占位分类/"}],"tags":[{"name":"占位标签","slug":"占位标签","permalink":"https://aclihui.com/tags/占位标签/"}]},{"title":"js总结","slug":"js-code","date":"2018-12-20T13:50:48.000Z","updated":"2018-12-20T13:54:06.944Z","comments":true,"path":"js-code/","link":"","permalink":"https://aclihui.com/js-code/","excerpt":"","text":"原文地址 https://www.aclihui.com js网页代码总结为什么写 当下的网页js有很多，但是总结起来的非常的少，于是乎此文就是为总结js网页代码的一片文章。 代码区域标题栏切换特效1234567891011121314151617181920&lt;!--标题栏切换特效 start--&gt;&lt;script type=\"text/javascript\"&gt;var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function() &#123;if (document.hidden) &#123;$('[rel=\"shortcut icon\"]').attr('href', \"//www.hzv5.cn/logo.jpg\");document.title = '(⊙_⊙) 哎呀！崩溃啦~ •' + OriginTitile;clearTimeout(titleTime);&#125;else &#123;$('[rel=\"shortcut icon\"]').attr('href', \"//hzv5.cn/logo.jpg\");document.title = '๑乛◡乛๑ 又好啦，嘿嘿~ •' + OriginTitile;titleTime = setTimeout(function() &#123;document.title = OriginTitile;&#125;, 1500);&#125;&#125;);&lt;/script&gt;&lt;!--标题栏切换特效 end--&gt; 给复制内容增加版权信息12345678910111213141516171819202122232425262728293031323334353637&lt;!--给复制内容增加版权信息 start--&gt;&lt;script&gt; $(\"body\").on('copy', function (e) &#123; if (typeof window.getSelection == \"undefined\") return; var body_element = document.getElementsByTagName('body')[0]; var selection = window.getSelection(); if ((\"\" + selection).length &lt; 30) return; var newdiv = document.createElement('div'); newdiv.style.position = 'absolute'; newdiv.style.left = '-99999px'; body_element.appendChild(newdiv); newdiv.appendChild(selection.getRangeAt(0).cloneContents()); //提示复制成功代码start if(window.getSelection)&#123; selection = window.getSelection(); alert(\"复制成功~\\n若转载请注明出处：\"+document.location.href); //document.write(\"复制成功~\\n转载请注明出处：\"+document.location.href); &#125;else if(document.getSelection)&#123;//IE10 selection= document.getSelection(); alert(\"复制成功~\\n若转载请注明出处：\"+document.location.href); &#125;else if(document.selection)&#123;//IE6+10- selection= document.selection.createRange().text; alert(\"复制成功~\\n若转载请注明出处：\"+document.location.href); &#125;else&#123; selection= \"\"; alert(\"浏览器兼容问题导致复制失败！\"); &#125; //提示复制成功代码end if (selection.getRangeAt(0).commonAncestorContainer.nodeName == \"PRE\") &#123; newdiv.innerHTML = \"&lt;pre&gt;\" + newdiv.innerHTML + \"&lt;/pre&gt;\"; &#125; newdiv.innerHTML += \"&lt;/br&gt;&lt;/br&gt;若转载请注明出处: &lt;a href='\" + document.location.href + \"'&gt;\" + document.location.href + \"&lt;/a&gt; &amp;copy; hzv5.cn\"; selection.selectAllChildren(newdiv); window.setTimeout(function () &#123; body_element.removeChild(newdiv); &#125;, 200);&#125;);&lt;/script&gt;&lt;!--给复制内容增加版权信息 end--&gt; 鼠标点击出现随机数字123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596&lt;!--鼠标点击出现随机数字 start--&gt;&lt;script type=\"text/javascript\"&gt;var a_idx = 0;jQuery(document).ready(function($) &#123; $(\"body\").click(function(e) &#123; var a = new Array(\"天真\",\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\" ,\"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\"); var $i = $(\"&lt;span/&gt;\").text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css(&#123; \"z-index\": 99999, \"top\": y - 20, \"left\": x, \"position\": \"absolute\", \"font-weight\": \"bold\", \"color\": \"#ff0000\" &#125;); $(\"body\").append($i); $i.animate(&#123; \"top\": y - 180, \"opacity\": 0 &#125;, 1800, function() &#123; $i.remove(); &#125;); &#125;);&#125;);(function(window, document, undefined) &#123; var hearts = []; window.requestAnimationFrame = (function() &#123; return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) &#123; setTimeout(callback, 1000 / 60); &#125; &#125;)(); init(); function init() &#123; css(\".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;\"); attachEvent(); gameloop(); &#125; function gameloop() &#123; for (var i = 0; i &lt; hearts.length; i++) &#123; if (hearts[i].alpha &lt;= 0) &#123; document.body.removeChild(hearts[i].el); hearts.splice(i, 1); continue; &#125; hearts[i].y-= 1.6; hearts[i].scale += 0.01; hearts[i].alpha -= 0.01; hearts[i].el.style.cssText = \"left:\" + hearts[i].x + \"px;top:\" + hearts[i].y + \"px;opacity:\" + hearts[i].alpha + \";transform:scale(\" + hearts[i].scale + \",\" + hearts[i].scale + \") rotate(45deg);background:\" + hearts[i].color; &#125; requestAnimationFrame(gameloop); &#125; function attachEvent() &#123; var old = typeof window.onclick === \"function\" &amp;&amp; window.onclick; window.onclick = function(event) &#123; old &amp;&amp; old(); createHeart(event); &#125; &#125; function createHeart(event) &#123; var d = document.createElement(\"div\"); d.className = \"heart\"; hearts.push(&#123; el: d, x: event.clientX - 2, y: event.clientY - 2, scale: 1, alpha: 1, color: randomColor() &#125;); document.body.appendChild(d); &#125; function css(css) &#123; var style = document.createElement(\"style\"); style.type = \"text/css\"; try &#123; style.appendChild(document.createTextNode(css)); &#125; catch (ex) &#123; style.styleSheet.cssText = css; &#125; document.getElementsByTagName('head')[0].appendChild(style); &#125; function randomColor() &#123; return \"rgb(\" + (~~ (Math.random() * 255)) + \",\" + (~~ (Math.random() * 255)) + \",\" + (~~ (Math.random() * 255)) + \")\"; &#125;&#125;)(window, document);&lt;/script&gt;&lt;!--鼠标点击出现随机数字 end--&gt; 来源: http://www.hzv5.cn 的源代码","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://aclihui.com/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://aclihui.com/tags/JavaScript/"}]},{"title":"安卓相机拍照返回","slug":"android-photo","date":"2018-12-19T13:58:04.000Z","updated":"2018-12-19T14:14:04.134Z","comments":true,"path":"android-photo/","link":"","permalink":"https://aclihui.com/android-photo/","excerpt":"","text":"前言此次安卓是对于android拍照片后返回到前端的imageView的程序 问题Android 7.0对于文件的权限报错问题还是一个大问题,尚且有点问题，本程序兼容安卓前面的版本 布局问价（xml文件）123456789101112131415161718192021&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:orientation=\"vertical\" android:layout_width=\"fill_parent\" android:layout_height=\"fill_parent\"&gt; &lt;ImageView android:id=\"@+id/imageView\" android:adjustViewBounds=\"true\" android:layout_gravity=\"center\" android:minWidth=\"150dip\" android:minHeight=\"150dip\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"/&gt; &lt;Button android:id=\"@+id/btnPhone\" android:layout_width=\"fill_parent\" android:layout_height=\"wrap_content\" android:text=\"相册\" /&gt; &lt;Button android:id=\"@+id/btnTakePicture\" android:layout_height=\"wrap_content\" android:layout_width=\"fill_parent\" android:text=\"拍照\" /&gt;&lt;/LinearLayout&gt; Java文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111package com.aclihui.takeaphoto;import java.io.ByteArrayOutputStream;import java.io.File;import android.app.Activity;import android.content.Intent;import android.graphics.Bitmap;import android.net.Uri;import android.os.Bundle;import android.os.Environment;import android.provider.MediaStore;import android.view.View;import android.widget.Button;import android.widget.ImageView;public class MainActivity extends Activity &#123; private static final int NONE = 0; private static final int PHOTO_GRAPH = 1;// 拍照 private static final int PHOTO_ZOOM = 2; // 缩放 private static final int PHOTO_RESOULT = 3;// 结果 private static final String IMAGE_UNSPECIFIED = \"image/*\"; private ImageView imageView = null; private Button btnPhone = null; private Button btnTakePicture = null; @Override public void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); imageView = (ImageView) findViewById(R.id.imageView); btnPhone = (Button) findViewById(R.id.btnPhone); btnPhone.setOnClickListener(onClickListener); btnTakePicture = (Button) findViewById(R.id.btnTakePicture); btnTakePicture.setOnClickListener(onClickListener); &#125; private final View.OnClickListener onClickListener = new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; if(v==btnPhone)&#123; //从相册获取图片 Intent intent = new Intent(Intent.ACTION_PICK, null); intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, IMAGE_UNSPECIFIED); startActivityForResult(intent, PHOTO_ZOOM); &#125;else if(v==btnTakePicture)&#123; //从拍照获取图片 Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE); intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(new File(Environment .getExternalStorageDirectory(),\"temp.jpg\"))); startActivityForResult(intent, PHOTO_GRAPH); &#125; &#125; &#125;; @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) &#123; if (resultCode == NONE) return; // 拍照 if (requestCode == PHOTO_GRAPH) &#123; // 设置文件保存路径 File picture = new File(Environment.getExternalStorageDirectory() + \"/temp.jpg\"); startPhotoZoom(Uri.fromFile(picture)); &#125; if (data == null) return; // 读取相册缩放图片 if (requestCode == PHOTO_ZOOM) &#123; startPhotoZoom(data.getData()); &#125; // 处理结果 if (requestCode == PHOTO_RESOULT) &#123; Bundle extras = data.getExtras(); if (extras != null) &#123; Bitmap photo = extras.getParcelable(\"data\"); ByteArrayOutputStream stream = new ByteArrayOutputStream(); photo.compress(Bitmap.CompressFormat.JPEG, 75, stream);// (0-100)压缩文件 //此处可以把Bitmap保存到sd卡中，具体请看：http://www.cnblogs.com/linjiqin/archive/2011/12/28/2304940.html imageView.setImageBitmap(photo); //把图片显示在ImageView控件上 &#125; &#125; super.onActivityResult(requestCode, resultCode, data); &#125; public void startPhotoZoom(Uri uri) &#123; Intent intent = new Intent(\"com.android.camera.action.CROP\");//调用Android系统自带的一个图片剪裁页面, intent.setDataAndType(uri, IMAGE_UNSPECIFIED); intent.putExtra(\"crop\", \"true\");//进行修剪 // aspectX aspectY 是宽高的比例 intent.putExtra(\"aspectX\", 1); intent.putExtra(\"aspectY\", 1); // outputX outputY 是裁剪图片宽高 intent.putExtra(\"outputX\", 300); intent.putExtra(\"outputY\", 500); intent.putExtra(\"return-data\", true); startActivityForResult(intent, PHOTO_RESOULT); &#125;&#125; 兼容性问题兼容性问题是一个很大的问题。对于7.0以下的文件比较好解决。","categories":[{"name":"android","slug":"android","permalink":"https://aclihui.com/categories/android/"}],"tags":[{"name":"android","slug":"android","permalink":"https://aclihui.com/tags/android/"}]},{"title":"Windows安装docker","slug":"docker-install-windows","date":"2018-12-18T12:28:01.000Z","updated":"2018-12-18T14:58:34.115Z","comments":true,"path":"docker-install-windows/","link":"","permalink":"https://aclihui.com/docker-install-windows/","excerpt":"","text":"前言此问题还是有点问题，毕竟一般的系统是win10 Home版本，不是windows 10 pro 或商业版，所以暂时有些问题。","categories":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/categories/docker/"},{"name":"windows","slug":"docker/windows","permalink":"https://aclihui.com/categories/docker/windows/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/tags/docker/"},{"name":"windows","slug":"windows","permalink":"https://aclihui.com/tags/windows/"}]},{"title":"docker基本命令","slug":"docker-base-commend","date":"2018-12-17T14:44:34.000Z","updated":"2018-12-17T14:58:00.408Z","comments":true,"path":"docker-base-commend/","link":"","permalink":"https://aclihui.com/docker-base-commend/","excerpt":"","text":"前言忽然发现这么多日子，又在重新学习docker的基本指令，真是很让人头皮发麻啊。QAQ开始啦 查看镜像文件docker images123456789101112sudo docker images``` | 表格名称 | 中文译名 | 中文译名 |备注|| ------ | ------ | ------ |------|| REPOSITORY | 仓库 | 来自于哪个仓库 |无|| TAG | 标签 | 标签信息 |无|| IMAGE | ID | 镜像ID |唯一标示镜像|| CREATED | 镜像创建的时间 | 镜像ID |标记的是原镜像创建的时间，和自身什么时候下载没关系|| SIZE | 大小 | 镜像ID |镜像的大小|# 查询镜像信息 sudo docker inspect ubuntu:18.04```bashsudo docker inspect ubuntu:18.04 特定类型1sudo docker inspect -f &#123;&#123;\".Architecture\"&#125;&#125; ubuntu:18.04 寻找镜像docker search1sudo docker search nginx 删除镜像 docker rmi这个比较容易理解 docker rm（删除）i(镜像)1sudo docker rmi NAME:TAG 比如12sudo docker rmi ubuntu:18.04 查看正在运行的容器1sudo docker ps 删除容器1docker rm 容器ID","categories":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/categories/docker/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/tags/docker/"}]},{"title":"安卓简单登录界面","slug":"android-login","date":"2018-12-17T10:14:05.000Z","updated":"2018-12-17T10:18:57.390Z","comments":true,"path":"android-login/","link":"","permalink":"https://aclihui.com/android-login/","excerpt":"","text":"概括安卓登录简单登录界面（用户名密码本地保存）时需要注意,校对的时候最好是先定义一个String类型的账号密码，在校对。不会出错。核心代码12String name_word=\"123456\",password_word=\"123456\";!et_name.getText().toString().trim().equals(name_word)&amp;&amp;et_password.getText().toString().trim().equals(password_word) 详细代码java文件1234567891011121314151617181920212223242526272829303132333435363738394041424344package com.aclihui.six;import android.content.Intent;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;public class MainActivity extends AppCompatActivity &#123; Button btlogin; Button btcancle; EditText et_name; EditText et_password; String name_word=\"123456\",password_word=\"123456\"; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); btlogin = (Button) findViewById(R.id.bt_login); btcancle = (Button) findViewById(R.id.bt_cancle); et_name = findViewById(R.id.et_name); et_password = findViewById(R.id.et_password); btcancle.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; et_password.setText(\"123456\"); et_name.setText(\"123456\"); &#125; &#125;); btlogin.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; if(!et_name.getText().toString().trim().equals(name_word)&amp;&amp;et_password.getText().toString().trim().equals(password_word)); &#123; Toast.makeText(getApplicationContext(),\"账号密码正确\",Toast.LENGTH_SHORT).show(); Intent intent=new Intent(MainActivity.this,front.class); startActivity(intent); &#125; &#125; &#125;); &#125;&#125; 界面xml文件1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" tools:context=\".MainActivity\"&gt; &lt;EditText android:id=\"@+id/et_name\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignParentStart=\"true\" android:layout_alignParentTop=\"true\" android:layout_marginStart=\"141dp\" android:layout_marginTop=\"195dp\" android:ems=\"10\" android:inputType=\"textPersonName\" android:text=\"请输入用户名\" /&gt; &lt;Button android:id=\"@+id/bt_cancle\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignTop=\"@+id/et_name\" android:layout_alignParentEnd=\"true\" android:layout_marginTop=\"143dp\" android:layout_marginEnd=\"229dp\" android:text=\"取消\" /&gt; &lt;Button android:id=\"@+id/bt_login\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignStart=\"@+id/bt_cancle\" android:layout_alignParentTop=\"true\" android:layout_marginStart=\"145dp\" android:layout_marginTop=\"333dp\" android:text=\"登录\" /&gt; &lt;ImageView android:id=\"@+id/imageView\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignParentStart=\"true\" android:layout_alignParentTop=\"true\" android:layout_marginStart=\"130dp\" android:layout_marginTop=\"31dp\" tools:srcCompat=\"@tools:sample/avatars[2]\" /&gt; &lt;TextView android:id=\"@+id/textView\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignParentStart=\"true\" android:layout_alignParentTop=\"true\" android:layout_marginStart=\"42dp\" android:layout_marginTop=\"205dp\" android:text=\"用户名\" /&gt; &lt;TextView android:id=\"@+id/textView2\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignStart=\"@+id/textView\" android:layout_alignParentBottom=\"true\" android:layout_marginBottom=\"218dp\" android:text=\"密码\" /&gt; &lt;EditText android:id=\"@+id/et_password\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignStart=\"@+id/et_name\" android:layout_alignParentBottom=\"true\" android:layout_marginBottom=\"200dp\" android:ems=\"10\" android:inputType=\"textPassword\" android:text=\"请输入密码\" /&gt;&lt;/RelativeLayout&gt;","categories":[{"name":"安卓","slug":"安卓","permalink":"https://aclihui.com/categories/安卓/"},{"name":"登录界面","slug":"安卓/登录界面","permalink":"https://aclihui.com/categories/安卓/登录界面/"}],"tags":[{"name":"安卓","slug":"安卓","permalink":"https://aclihui.com/tags/安卓/"}]},{"title":"MVC和MMVC架构","slug":"mvc-and-mmvc","date":"2018-12-16T12:11:52.000Z","updated":"2018-12-16T12:51:31.927Z","comments":true,"path":"mvc-and-mmvc/","link":"","permalink":"https://aclihui.com/mvc-and-mmvc/","excerpt":"","text":"初因原文地址：https://www.aclihui.com深入了解MVV 架构和MMVC架构,为以后软件设计打下基础。 MVC架构M:Model模型 V: View视图 C:Controller控制器 模型（来自维基百科的解释,注1）M:用于封装与应用程序的业务逻辑相关的数据以及对数据的处理方法。“ Model ”有对数据直接访问的权力，例如对数据库的访问。“Model”不依赖“View”和“Controller”，也就是说， Model 不关心它会被如何显示或是如何被操作。但是 Model 中数据的变化一般会通过一种刷新机制被公布。为了实现这种机制，那些用于监视此 Model 的 View 必须事先在此 Model 上注册，从而，View 可以了解在数据 Model 上发生的改变。（比如：观察者模式（软件设计模式）） 视图V:能够实现数据有目的的显示（理论上，这不是必需的）。在 View 中一般没有程序上的逻辑。为了实现 View 上的刷新功能，View 需要访问它监视的数据模型（Model），因此应该事先在被它监视的数据那里注册。 控制器起到不同层面间的组织作用，用于控制应用程序的流程。它处理事件并作出响应。“事件”包括用户的行为和数据 Model 上的改变。展示图: 此时我们发现，相互关系如图所示。M负责控制View的显示，V需要时刻监视M的情况，而C则为相事件对M进行处理。 总结MVC架构是一种业务逻辑和数据分离的方法，这个方法假设前提是如果业务逻辑被聚集到一个部件里面，而且页面和用户围绕数据的交互能被改进和个性化而不需要重新编写业务逻辑。MVC被独特的发展起来用于映射传统的输入，处理和输出功能在一个逻辑的图形化界面结构中。(注2) MMVCMMVC是在MVC中间加入一层ViewModel起到适配（一些Model建模为了与其他系统实现完全隔离，存储的只是id，此处需要根据id去组装起所需的数据）,隔离扩展。 M完全隔离的Model只会被引用（监视），不会引用外部的东西，通常只会对需要的数据进行建模（比如id），不需要的数据则不需要进行建模。 View承担各种界面事件交互逻辑，其核心关键词是：数据展示、操作。其中除了特定的操作、交互功能外，最为重要的三个功能点，即是初始化、刷新、返回值、事件。 ViewModle网站上没有多少介绍 C和MVC架构基本相同。 引用1.2.https://www.cnblogs.com/suriyel/articles/3332408.html MVC实现MFC微软所推出的MFC Document/View架构是早期对于MVC模式的实现，MFC将程序分成CView以及CDocument两大类别，其中的Document对应MVC中的 Model ，View 相当于MVC中的 View＋Controller，再加上CWinApp类别，合成三大项。但是基本上MFC是一个失败的MVC模式作品。 由于MFC之下的Document/View 定义过于模糊，未将Controller（MessageMap）部分取出，因此 Controller 可以置入 View 或Document，但不管置入哪一方面，都会与View或Document绑死，没有弹性。 JavaJava 平台企业版 (J2EE)和其他的各种框架不一样，J2EE为模型对象（Model Objects）定义了一个规范。 视图(View)在J2EE应用程序中，视图（View）可能由Java Server Page(JSP)担任。生成 View 的代码则可能是一个servlet的一部分，特别是在客户端服务端交互的时候。控制器（Controller）J2EE应用中，Controller 可能是一个servlet。除了可直接以J2EE来撰写外，亦可用其他框架来撰写，常见的有Struts2、Spring Framework……等等。模型（Model）Model 则是由一个实体Bean来实现。Java SwingSwing是一个标准的MVC结构. ComponentUI代表 View, 负责描画组件. 组件尤其 Model 层, 比如JTextField的Document, JTable的TableModel, JTree的TreeModel等等. 而Control可能不是很明显, 我们或许可以简单的将其Event机制看作一个Swing团队开发给开发者的 Controller。 作为Java开发者, 如果想理解MVC的结构, 学习Swing的确是个不错的选择. .NETASP.NET在ASP.NET中，针对视图（View）和控制器（Controller）的模式没有被很好地定义。而模型（Model）则留给开发者去设计。 视图（View）ASPX和ASCX文件被用来处理 View 的职责。在这个设计中 View 实际上是从 Controller 继承而来。这个和Smalltalk的实施有所不同，在Smalltalk中不同的类都有指针互相指向对方.控制器（Controllers）Controller 的职责被分割成两部分。事件（Event）的产生和传输是框架的一部分，更明确的说是Page和Control两个类。而事件的处理则在分离的代码中实现。模型（Model）ASP.NET 不严格需要一个 Model。开发者可以自行选择创建一个 Model 类，但是很多人选择放弃这一步，直接把事件处理放在 Controller 里处理任何计算、数据保存等等。但用 Model 来包含商业逻辑和数据访问是可实现的。ASP.NET MVCASP.NET MVC，在2013年10月17日稳定版本已到5.0版。[3]此外，在ASP.NET MVC中，一般情况下Model通常搭配LINQ to SQL类别（使用O/R Designer工具所制作而成的DBML档）或ADO.NET实体数据模型（Entity Data Model，使用ADO.NET Entity Framework制作出的EDMX档）来实现。 Windows Forms在WinForms中，这个针对视图（View）和控制器（Controller）的模式已经很好的定义。而模型（Model）则留给开发者去设计。 视图（View）由Form或者Control类继承来的一个类处理 View 的职责。在WinForm这个例子中 View 和 Controller 被编译在同一个类中，这个和ASP.NET不同。控制器（Controller）Controller 的职责被分割成三部分。事件（Event）的产生和传输是操作系统的一部分。在.Net框架中Form和Control类将不同的事件转发给相应的事件处理器。而事件的处理则在分离的代码中实现。模型（Model）就像ASP.NET一样，WinForm不严格需要一个 Model。开发者可以自行选择创建一个 Model 类，但是很多人选择放弃这一步，直接把事件处理放在 Controller 里处理任何计算、数据保存等等。也就是说用Model来包含商业逻辑和数据访问。 PerlCatalyst和Jifty是透过Perl语言所开发出来的Web Framework，都采用Model-View-Controller 架构。Catalyst 本身只是做了 Controller，View 和 Model 让开发者自由选用 CPAN 上的模块开发，例如 Template 和 Template Declare 都可用来产生视图。Jifty 将 MVC 完全实做完成，View 的部分在早期版本使用 Mason 实做，较新版本使用 Template Declare。 Ruby on RailsRuby on Rails是透过Ruby语言所开发出来的 Web Framework，也是采用 Model-View-Controller 架构。Model 部分使用 Active Record 概念实做，加上 Migration 机制，使得其 Model 结构非常容易控制。 PythonPython 有许多的 MVC 架构。最常用的有 Django 和 TurboGears。 JavaScriptBackbone.jsAngular.jsEmber.jsJavaScriptMVCModel-View-Controller (MVC) with JavaScript PHPCakePHPCodeIgniterpradosymfonyYii FrameworkZend FrameworkPhalconLaravelThinkPHP ActionScript 3PureMVC Standard for ActionScript 3","categories":[{"name":"架构","slug":"架构","permalink":"https://aclihui.com/categories/架构/"}],"tags":[{"name":"架构","slug":"架构","permalink":"https://aclihui.com/tags/架构/"}]},{"title":"第一次安装docker","slug":"docker-first-install","date":"2018-12-15T14:56:56.000Z","updated":"2018-12-15T15:26:32.262Z","comments":true,"path":"docker-first-install/","link":"","permalink":"https://aclihui.com/docker-first-install/","excerpt":"","text":"这是第一次安装docker原文地址：https://www.aclihui.com之所以是第一次安装docker就是因为docker的安装确实消耗一些时间，这次直接采用在外网进行安装，加速安装的进程。下面正式开始。 安装过程第一步，开新的服务器此步骤比较的简单，我使用服务器是digitalOcean的服务器。随开随用，随关随停。置如下: centos7.5 首先检查内核版本号（必须在3.10以上）1uname -r 将yum包更新到最新版本1sudo yum update 卸载旧版本（因为我是首次安装不存在旧版本）卸载旧版本代码1sudo yum remove docker docker-common docker-selinux docker-engine 安装所需要的依赖包1sudo yum install -y yum-utils device-mapper-persistent-data lvm2 配置docker源首先检查docker源存不存在此时我发现我的centos7.5的docker源是存在的，因此直接安装就好。 若果不存在 就先添加docker源1sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 检查版本号（因为直接安装和加源安装并不相同，因此我的此步骤省略了）1yum list docker-ce --showduplicates | sort -r 此时检查版本号（验证是否安装成功）1docker version 设置开机启动12sudo systemctl start dockersudo systemctl enable docker 此时启动完毕。安装流程结束。","categories":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/categories/docker/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/tags/docker/"}]},{"title":"类似于微信下拉菜单","slug":"Android_XiaLaMenu","date":"2018-12-15T14:37:57.000Z","updated":"2018-12-15T14:48:16.152Z","comments":true,"path":"Android_XiaLaMenu/","link":"","permalink":"https://aclihui.com/Android_XiaLaMenu/","excerpt":"","text":"安卓第一个demo 下拉菜单第一步新建项目 第二步 选择api 第三步 选择空白模板 第四步 保持默认 剩下的核心代码 明天补全。","categories":[{"name":"Android","slug":"Android","permalink":"https://aclihui.com/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://aclihui.com/tags/Android/"}]},{"title":"去除教务处时间去除","slug":"web-pinggu-time","date":"2018-12-09T03:51:15.000Z","updated":"2018-12-09T04:27:13.477Z","comments":true,"path":"web-pinggu-time/","link":"","permalink":"https://aclihui.com/web-pinggu-time/","excerpt":"","text":"转载请注明来源(https://www.aclihui.com) 效果 前言教务处网站对教学评估的时间做了限制，每一个必须等两分钟的限制，而且不可以打开多个界面进行评估，因此对于学过js的我来说想去掉这个限制。如果想直接解决问题，请直接翻到最后解决方案。 路径首先是看代码 代码显示id为RemainM的显示的是时间，相对应的也是控制的一个控件，从RemainM入手，首先开始在html代码中搜RemainM的相关代码 从代码 可以看出来1234if (flag) &#123; var before_html = $(\"#buttonSubmit\").html(); //window.document.StDaForm.submit(); var pageConditions = $(document.StDaForm).serialize(); if flag是关键所在 解决方案打开chrome console1var flag=1 回车提交解决(^▽^)","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://aclihui.com/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://aclihui.com/tags/JavaScript/"}]},{"title":"网页JavaScript函数重写--解决JS代码时间限制","slug":"web-console-code","date":"2018-12-07T14:49:08.000Z","updated":"2018-12-07T14:52:15.343Z","comments":true,"path":"web-console-code/","link":"","permalink":"https://aclihui.com/web-console-code/","excerpt":"","text":"占位–明天补上(╹▽╹)。","categories":[{"name":"WEB","slug":"WEB","permalink":"https://aclihui.com/categories/WEB/"},{"name":"JavaScript","slug":"WEB/JavaScript","permalink":"https://aclihui.com/categories/WEB/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://aclihui.com/tags/JavaScript/"},{"name":"WEB","slug":"WEB","permalink":"https://aclihui.com/tags/WEB/"}]},{"title":"寻找丢失的友链","slug":"find-friend","date":"2018-12-03T07:30:55.000Z","updated":"2018-12-06T14:31:29.666Z","comments":true,"path":"find-friend/","link":"","permalink":"https://aclihui.com/find-friend/","excerpt":"","text":"因为更换了主题，友链找不到了，各位大佬补链请发邮件到i#aclihui.com 或者直接留言。","categories":[{"name":"公告","slug":"公告","permalink":"https://aclihui.com/categories/公告/"}],"tags":[{"name":"公告","slug":"公告","permalink":"https://aclihui.com/tags/公告/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-12-01T12:22:54.750Z","updated":"2018-12-03T01:25:56.100Z","comments":true,"path":"hello-world/","link":"","permalink":"https://aclihui.com/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"安卓菜单","slug":"android-menu","date":"2018-11-23T04:54:45.000Z","updated":"2018-12-03T00:55:55.886Z","comments":true,"path":"android-menu/","link":"","permalink":"https://aclihui.com/android-menu/","excerpt":"","text":"安卓菜单有点重要，在这里记录一下 main.xml12345678910111213141516171819202122&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:id=\"@+id/customStyle\" tools:context=\".MainActivity\"&gt; &lt;TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_alignParentTop=\"true\" android:layout_centerHorizontal=\"true\" android:layout_marginTop=\"191dp\" android:text=\"Hello World!\" app:layout_constraintBottom_toBottomOf=\"parent\" app:layout_constraintLeft_toLeftOf=\"parent\" app:layout_constraintRight_toRightOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" /&gt;&lt;/RelativeLayout&gt; java 代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950package com.aclihui.menu;import android.graphics.Color;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.Menu;import android.view.MenuItem;import android.widget.RelativeLayout;public class MainActivity extends AppCompatActivity &#123; RelativeLayout customStyle; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); &#125; final static int MENU_00=Menu.FIRST; final static int MENU_01=Menu.FIRST+1; final static int MENU_02=Menu.FIRST+2; @Override public boolean onCreateOptionsMenu(Menu menu) &#123; menu.add(0,MENU_00,1,\"红色\"); menu.add(0,MENU_01,2,\"灰色\"); menu.add(0,MENU_02,3,\"黑色\"); return true; &#125; @Override public boolean onOptionsItemSelected(MenuItem item) &#123; customStyle=(RelativeLayout)findViewById(R.id.customStyle); switch (item.getItemId()) &#123; case 1: customStyle.setBackgroundColor(Color.RED); break; case 2: customStyle.setBackgroundColor(Color.GRAY); break; case 3: customStyle.setBackgroundColor(Color.BLACK); break; &#125; return true; &#125;&#125;","categories":[{"name":"Android","slug":"Android","permalink":"https://aclihui.com/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://aclihui.com/tags/Android/"}]},{"title":"主题","slug":"newtheme","date":"2018-11-03T14:58:00.000Z","updated":"2018-12-03T01:43:36.088Z","comments":true,"path":"newtheme/","link":"","permalink":"https://aclihui.com/newtheme/","excerpt":"","text":"2018-12-1 使用indigo主题修改版作为网站主题2018-11-03 22:58:43 星期六挖坑写主题，在新主题写完发布前暂不更新QAQ.","categories":[{"name":"主题","slug":"主题","permalink":"https://aclihui.com/categories/主题/"}],"tags":[{"name":"主题","slug":"主题","permalink":"https://aclihui.com/tags/主题/"}]},{"title":"嘿嘿，生快哦。","slug":"bdg","date":"2018-10-05T07:51:00.000Z","updated":"2018-12-03T01:41:24.302Z","comments":true,"path":"bdg/","link":"","permalink":"https://aclihui.com/bdg/","excerpt":"","text":"","categories":[{"name":"节日","slug":"节日","permalink":"https://aclihui.com/categories/节日/"}],"tags":[{"name":"节日","slug":"节日","permalink":"https://aclihui.com/tags/节日/"}]},{"title":"LeetCode-628. Maximum Product of Three Numbers","slug":"leetcode-628-maximum-product-of-three-numbers","date":"2018-09-04T13:12:00.000Z","updated":"2018-12-03T01:39:14.762Z","comments":true,"path":"leetcode-628-maximum-product-of-three-numbers/","link":"","permalink":"https://aclihui.com/leetcode-628-maximum-product-of-three-numbers/","excerpt":"","text":"题目Given an integer array, find three numbers whose product is maximum and output the maximum product. Example 1:12Input: [1,2,3]Output: 6 Example 2:12Input: [1,2,3,4]Output: 24 Note:12The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000]. Multiplication of any three numbers in the input won&apos;t exceed the range of 32-bit signed integer. 分析这是一道读题的题目，这是第二次出现快速排序，分析在注释中。 代码+注释12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394/* * 设计知识点： 快速排序（减少时间复杂度，减少时间） * 错误用例 * Input: [-4,-3,-2,-1,60] Output: 120 Expected: 720 * 错误： * 1. 测试用例中出现了负数导致产品的值出现了比较错误，使实际的输出值不是最大 * 解决方案 * 1.采用将全部的数值转换成整数的方案 * 缺点 * 1.会使得最后的结果出错(错误无法避免，切换解决方案) *方案2： * 分别判断，分别返回 * * 错误用例 * [722,634,-504,-379,163,-613,-842,-578,750,951,-158,30,-238,-392,-487,-797,-157,-374,999,-5,-521,-879,-858,382,626,803,-347,903,-205,57,-342,186,-736,17,83,726,-960,343,-984,937,-758,-122,577,-595,-544,-559,903,-183,192,825,368,-674,57,-959,884,29,-681,-339,582,969,-95,-455,-275,205,-548,79,258,35,233,203,20,-936,878,-868,-458,-882,867,-664,-892,-687,322,844,-745,447,-909,-586,69,-88,88,445,-553,-666,130,-640,-918,-7,-420,-368,250,-786] *错误2 ： * 低估了数组的大小 *解决方案: * 扩充int到long * 看了下大佬的还真是棒 而且简单的很 site:http://www.cnblogs.com/grandyang/p/7084957.html * */#include &lt;stdio.h&gt;void quiksort(int a[],int low,int high)&#123; int i = low; int j = high; int temp = a[i]; if( low &gt; high) &#123; return ; &#125; while(i &lt; j) &#123; while((a[j] &gt;= temp) &amp;&amp; (i &lt; j)) &#123; j--; &#125; a[i] = a[j]; while((a[i] &lt;= temp) &amp;&amp; (i &lt; j)) &#123; i++; &#125; a[j]= a[i]; &#125; a[i] = temp; quiksort(a,low,i-1); quiksort(a,j+1,high);&#125;int maximumProduct(int* nums, int numsSize) &#123; quiksort(nums,0,numsSize-1);// 当nums[numsSize-1]&lt;=0 即全部均小于零 则 nums[0]*nums[1]*nums[numsSize-1]最大 /*if(nums[numsSize-1]&lt;=0) &#123; return nums[0]*nums[1]*nums[numsSize-1]; &#125; else if(nums[numsSize-2]&lt;0) &#123;// 此时 nums[numsSize-1]&gt;0 &amp;&amp;nums[numsSize-2]&lt;0] 此时返回nums[0]*nums[1]*nums[numsSize-1] return nums[0]*nums[1]*nums[numsSize-1]; &#125; else if(nums[numsSize-2]==0) &#123;// 此时直接返回0 return 0; &#125;else if(nums[numsSize-3]&lt;=0) &#123; return nums[numsSize-1]*nums[numsSize-2]*nums[numsSize-3]; &#125; return nums[numsSize-3]*nums[numsSize-2]*nums[numsSize-1];*/ int max=0,max1; max=nums[numsSize-1]*nums[0]*nums[1]; max1=nums[numsSize-1]*nums[numsSize-2]*nums[numsSize-3]; if(max&gt;max1) &#123; return max; &#125; else &#123; return max1; &#125;&#125;int main()&#123; int nums[]=&#123;722,634,-504,-379,163,-613,-842,-578,750,951,-158,30,-238,-392,-487,-797,-157,-374,999,-5,-521,-879,-858,382,626,803,-347,903,-205,57,-342,186,-736,17,83,726,-960,343,-984,937,-758,-122,577,-595,-544,-559,903,-183,192,825,368,-674,57,-959,884,29,-681,-339,582,969,-95,-455,-275,205,-548,79,258,35,233,203,20,-936,878,-868,-458,-882,867,-664,-892,-687,322,844,-745,447,-909,-586,69,-88,88,445,-553,-666,130,-640,-918,-7,-420,-368,250,-786&#125;; int numsSize= sizeof(nums)/ sizeof(int); printf(\"%d\",maximumProduct(nums,numsSize)); return 0;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-268. Missing Number","slug":"leetcode-268-missing-number","date":"2018-09-03T13:11:00.000Z","updated":"2018-12-03T01:38:07.792Z","comments":true,"path":"leetcode-268-missing-number/","link":"","permalink":"https://aclihui.com/leetcode-268-missing-number/","excerpt":"","text":"题目Given an array containing n distinct numbers taken from 0, 1, 2, …, n, find the one that is missing from the array. Example 1:12Input: [3,0,1]Output: 2 Example 2:12Input: [9,6,4,2,3,5,7,0,1]Output: 8 Note:1Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity? 分析思路： 找出最大值，进行判断,看那一位数字缺少。 C语言代码123456789101112131415161718192021222324252627282930313233343536373839#include &lt;stdio.h&gt;int missingNumber(int* nums, int numsSize) &#123; int n=numsSize+1;// 计算出相对应的n for(int i=0;i&lt;numsSize;i++) &#123; if(n&lt;nums[i]) &#123; n=nums[i]; &#125; &#125;// 求所缺少的数值是那个 for(int i=0;i&lt;n;i++) &#123; int flag=0; int j=0; for(;j&lt;numsSize;j++) &#123;// 若存在 相对应的数值则 flag=1 if(i==nums[j]) &#123; flag=1; &#125; &#125; if(flag==0&amp;&amp;j==numsSize) &#123; return i; &#125; &#125; return 0;&#125;int main()&#123; int nums[]=&#123;0&#125;; int numsSize= sizeof(nums)/ sizeof(int); printf(\"%d\\n\",missingNumber(nums,numsSize)); return 0;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-217. Contains Duplicate","slug":"leetcode-217-contains-duplicate","date":"2018-09-01T13:57:00.000Z","updated":"2018-12-03T01:36:56.878Z","comments":true,"path":"leetcode-217-contains-duplicate/","link":"","permalink":"https://aclihui.com/leetcode-217-contains-duplicate/","excerpt":"","text":"题目Given an array of integers, find if the array contains any duplicates. Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct. Example 1:12Input: [1,2,3,1]Output: true Example 2:12Input: [1,2,3,4]Output: false Example 3:12Input: [1,1,1,3,3,4,3,2,4,2]Output: true 分析这是一个基础的问题 分析比较简单只要，当前的数组中的数值和后面的有相等的就返回true 知道最后一个都没有相同的返回false C语言代码1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;bool containsDuplicate(int* nums, int numsSize) &#123; if(numsSize==1) &#123; return false; &#125; for(int i=0;i&lt;numsSize;i++) &#123; for(int j=i+1;j&lt;numsSize;j++) &#123; if(nums[i]==nums[j]) &#123; return true; &#125; &#125; &#125; return false;&#125;int main()&#123; int nums[]=&#123;3,1&#125;; int numsSize= sizeof(nums)/sizeof(int); printf(\"%d\",containsDuplicate(nums,numsSize)); return 0;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"leetcode-231-power-of-two","slug":"leetcode-231-power-of-two","date":"2018-09-01T13:57:00.000Z","updated":"2018-12-03T01:35:53.752Z","comments":true,"path":"leetcode-231-power-of-two/","link":"","permalink":"https://aclihui.com/leetcode-231-power-of-two/","excerpt":"","text":"题目Given an integer, write a function to determine if it is a power of two. Example 1:123Input: 1Output: true Explanation: 20 = 1 Example 2:123Input: 16Output: trueExplanation: 24 = 16 Example 3:12Input: 218Output: false 分析这是一个求2的N次方的题目，较为基础.第一种解题方法：直接求是不是即可（暴力判断）；第二种解法：位运算，判断所有位数上仅有一位是1其他的是0即可求得。 C语言1234567891011121314151617181920212223242526#include&lt;stdio.h&gt;bool isPowerOfTwo(int n) &#123; if(n&lt;=0) &#123; return false; &#125; else if(n==1||n==2) &#123; return true; &#125; while(n&gt;1) &#123; if(n%2==1) &#123; return false; &#125; else n=n/2; &#125; return true;&#125;int main()&#123; int n=218; printf(&quot;%d&quot;,isPowerOfTwo(n)); return 0;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-283. Move Zeroes","slug":"leetcode-283-move-zeroes","date":"2018-08-30T12:51:00.000Z","updated":"2018-12-03T01:31:46.229Z","comments":true,"path":"leetcode-283-move-zeroes/","link":"","permalink":"https://aclihui.com/leetcode-283-move-zeroes/","excerpt":"","text":"题目Given an array nums, write a function to move all 0’s to the end of it while maintaining the relative order of the non-zero elements. Example:12Input: [0,1,0,3,12]Output: [1,3,12,0,0] Note:12You must do this in-place without making a copy of the array.Minimize the total number of operations. 分析此题比较基础，这就是冒泡排序的变形版，题目的要求不能新开辟新的数组空间，将所有的操作的的操作步数最小化。 C语言代码12345678910111213141516171819202122232425262728293031#include &lt;stdio.h&gt;void moveZeroes(int* nums, int numsSize) &#123; for(int i=0;i&lt;numsSize;i++) &#123; for (int j = i; j &lt;numsSize ; ++j) &#123; if(nums[i]==0) &#123; int temp=nums[i]; nums[i]=nums[j]; nums[j]=temp; &#125; &#125; &#125;&#125;int main()&#123; int nums[]=&#123;4,2,4,0,0,3,0,5,1,0&#125;; int numsSize=sizeof(nums)/ sizeof(int);// 输出为[1,3,12,0,0]// 执行函数 moveZeroes(nums,numsSize);// 输出每个数 for(int i=0;i&lt;numsSize;i++) &#123; printf(\"%d,\",nums[i]); &#125;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-258. Add Digits","slug":"leetcode-258-add-digits","date":"2018-08-30T12:51:00.000Z","updated":"2018-12-03T01:34:18.302Z","comments":true,"path":"leetcode-258-add-digits/","link":"","permalink":"https://aclihui.com/leetcode-258-add-digits/","excerpt":"","text":"题目Given a non-negative integer num, repeatedly add all its digits until the result has only one digit. Example:1234Input: 38Output: 2 Explanation: The process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it. Follow up:1Could you do it without any loop/recursion in O(1) runtime? 分析这是一个数字根的问题，此题的解法其实有很多，但是最后一句换你能在时间复杂度为1的qiang","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-292. Nim Game","slug":"leetcode-292-nim-game","date":"2018-08-29T14:45:00.000Z","updated":"2018-12-03T01:29:37.853Z","comments":true,"path":"leetcode-292-nim-game/","link":"","permalink":"https://aclihui.com/leetcode-292-nim-game/","excerpt":"","text":"题目You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones. Both of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap. Example:123456Input: 4Output: false Explanation: If there are 4 stones in the heap, then you will never win the game; No matter 1, 2, or 3 stones you remove, the last stone will always be removed by your friend. 分析此题目中的问题的解释可分为当问题可以被4整除的时候都无法赢得游戏，如果不能被4整除的时候只要最后将数字归的4以下就可以赢。 C语言代码12345678bool canWinNim(int n) &#123; bool canWinNim(int n) &#123; if(n%4==0) return false; else return true; &#125;&#125; 相关内容小游戏","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-191. Number of 1 Bits","slug":"leetcode-191-number-of-1-bits","date":"2018-08-28T13:48:00.000Z","updated":"2018-12-03T01:27:15.234Z","comments":true,"path":"leetcode-191-number-of-1-bits/","link":"","permalink":"https://aclihui.com/leetcode-191-number-of-1-bits/","excerpt":"","text":"题目Write a function that takes an unsigned integer and returns the number of ‘1’ bits it has (also known as the Hamming weight). Example 1:123Input: 11Output: 3Explanation: Integer 11 has binary representation 00000000000000000000000000001011 Example 2:123Input: 128Output: 1Explanation: Integer 128 has binary representation 00000000000000000000000010000000 分析这是一个明显的位运算的问题，尤其是实例中的解释的问题，尤其显示为对位进行的操作，因此这里有一个简单的方法，时间复杂度比较的低，对最后一位进行按位与运算。 C语言代码123456789101112131415int hammingWeight(uint32_t n) &#123; int normal=0; while(n) &#123;// 对n和1求位运算 指定最后一位为1的位运算 if(n &amp; 1) &#123; ++normal; &#125;// 对n进行向右移动 n&gt;&gt;=1; &#125; return normal;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-169. Majority Element","slug":"leetcode-169-majority-element","date":"2018-08-27T06:57:00.000Z","updated":"2018-12-03T01:25:47.862Z","comments":true,"path":"leetcode-169-majority-element/","link":"","permalink":"https://aclihui.com/leetcode-169-majority-element/","excerpt":"","text":"题目Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times. You may assume that the array is non-empty and the majority element always exist in the array. Example 1:12Input: [3,2,3]Output: 3 Example 2:12Input: [2,2,1,1,1,2,2]Output: 2 思路本来想强行暴力，解决问题，但无奈时间超限 暴力法 run time error123456789101112131415161718192021 int *num= (int *) malloc(sizeof(int)); for (int i=0;i&lt;numsSize;i++)&#123; for(int j=0;j&lt;numsSize;j++) &#123; if(nums[i]==nums[j]) &#123; num[i]++; &#125; //end if &#125; //end for &#125;// end for// 判断最大值输出 int max=0; int imax=0; for(int i=0;i&lt;numsSize;i++) &#123; if(max&lt;num[i]) &#123; max = num[i]; imax = i; &#125; &#125; return nums[imax]; 时间简短版123456789int cmpfunc (const void * a, const void * b)&#123; return ( *(int*)a - *(int*)b );&#125;int majorityElement(int* nums, int numsSize) &#123; qsort(nums,numsSize,sizeof(int),cmpfunc); return nums[numsSize/2];&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-167. Two Sum II - Input array is sorted","slug":"leetcode-167-two-sum-ii-input-array-is-sorted","date":"2018-08-26T13:29:00.000Z","updated":"2018-12-03T01:23:56.075Z","comments":true,"path":"leetcode-167-two-sum-ii-input-array-is-sorted/","link":"","permalink":"https://aclihui.com/leetcode-167-two-sum-ii-input-array-is-sorted/","excerpt":"","text":"题目Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number. The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2. Note: Your returned answers (both index1 and index2) are not zero-based.You may assume that each input would have exactly one solution and you may not use the same element twice.Example:123Input: numbers = [2,7,11,15], target = 9Output: [1,2]Explanation: The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2. 分析较为简单此题目只需保证 前后的两个目标值不重复，且后边的角标大于前面的，且从1开始计数。 C代码123456789101112131415161718int* twoSum(int* numbers, int numbersSize, int target, int* returnSize) &#123; int *re=(int*)malloc(2*sizeof(int));for(int i=0;i&lt;numbersSize;i++)&#123; for(int j=i+1;j&lt;numbersSize;j++) &#123; if(numbers[i]+numbers[j]==target) &#123; re[0]=i+1; re[1]=j+1; &#125; &#125;&#125;*returnSize=2; return re;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"leetcode-136-single-number","slug":"leetcode-136-single-number","date":"2018-08-25T15:23:00.000Z","updated":"2018-12-03T01:22:40.141Z","comments":true,"path":"leetcode-136-single-number/","link":"","permalink":"https://aclihui.com/leetcode-136-single-number/","excerpt":"","text":"题目Given a non-empty array of integers, every element appears twice except for one. Find that single one. Note: Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory? Example 1:12Input: [2,2,1]Output: 1 Example 2:12Input: [4,1,2,1,2]Output: 4 分析此处为二维的表格构造在开辟一个数组判定当i!=j 的时候 在判定是否有相等元素C代码如下12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152//// Created by YUGE on 2018/8/25.//#include \"stdio.h\"#include \"stdlib.h\"int singleNumber(int* nums, int numsSize) &#123;// int num[numsSize];// 动态开辟数组 int *num=(int*)malloc(numsSize* sizeof(int)) ; for(int i=0;i&lt;numsSize;i++) &#123;// 赋值给另一个数组，是两个数组一致 num[i]=nums[i]; //printf(\"%d-%d\\n\",nums[i],num[i]); &#125; for(int i=0;i&lt;numsSize;i++) &#123; for(int j=0;j&lt;numsSize;j++) &#123;// if(i==j)// &#123;//// 如果相等则跳过不判断// continue;// &#125;// 两个数相等则这个数出现了两次 直接跳出下面的循环 if(nums[i]==num[j]&amp;&amp;i!=j) &#123; break; &#125; if(j==(numsSize-1)) &#123;// 到最后如果没有找到相等的元素则直接可以返回值 //printf(\"%d\\n\",nums[i]); return nums[i]; &#125; //end if &#125;//end for &#125; //end for return 0;&#125;int main() &#123; int nums[] =&#123;2,2,1,1,3&#125;; int numsSize = 0; numsSize= sizeof(nums)/ sizeof(int); printf(\"%d\\n\",numsSize); singleNumber(nums,numsSize); printf(\"%d\\n\",singleNumber(nums,numsSize)); return 0;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-58. Length of Last Word求最后的单词的长度","slug":"leetcode-58-length-of-last-word","date":"2018-08-24T14:28:00.000Z","updated":"2018-12-03T01:21:35.864Z","comments":true,"path":"leetcode-58-length-of-last-word/","link":"","permalink":"https://aclihui.com/leetcode-58-length-of-last-word/","excerpt":"","text":"题目Given a string s consists of upper/lower-case alphabets and empty space characters ‘ ‘, return the length of last word in the string. If the last word does not exist, return 0. Note: A word is defined as a character sequence consists of non-space characters only. Example:12Input: &quot;Hello World&quot;Output: 5 分析由题目知道，这是求最后一个单词长度的问题 ，但是要考虑的为题是最后一个单词后面可能有无数的空格，因此如果只用空格判断单词之间间隔的话，会造成，最后一个单词不好进行判断。 正确思路 判断最后一个是不是空格，如果是空格，直接遍历前面一个，直到找到最后一个单词位置。 对每个此时的单词进行技术，我这里因为只用了做下标的i计数，显得略带繁琐 C语言代码123456789101112131415161718192021222324252627282930313233#include \"stdio.h\"int lengthOfLastWord(char* s) &#123; int sSize = 0; for (sSize = 0; s[sSize] != '\\0'; sSize++); int i = sSize - 1; int space = 0; int flag = 0; for (; i &gt;= 0; i--) &#123; if(s[i]!=' ') &#123; flag = 1; &#125; if (s[i] == ' ' &amp;&amp; flag == 0) &#123;// 最后边的空格的个数 space++; continue; &#125; else &#123; if (s[i] == ' ') &#123; break; &#125; &#125; &#125; return sSize-1-space-i;&#125;int main()&#123; char s[]=\"man is \"; printf(\"%d\\n\",lengthOfLastWord(s)); return 0;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"笔记","slug":"note","date":"2018-08-24T06:24:00.000Z","updated":"2018-12-03T01:20:28.948Z","comments":true,"path":"note/","link":"","permalink":"https://aclihui.com/note/","excerpt":"","text":"Linuxlinux vi遇到 Press ENTER or type command to continue怎么办1解决方案:在命令行窗口输入q!退出即可","categories":[{"name":"笔记","slug":"笔记","permalink":"https://aclihui.com/categories/笔记/"}],"tags":[{"name":"笔记","slug":"笔记","permalink":"https://aclihui.com/tags/笔记/"}]},{"title":"leetcode-53-maximum-subarray","slug":"leetcode-53-maximum-subarray","date":"2018-08-23T14:28:00.000Z","updated":"2018-12-03T01:19:02.682Z","comments":true,"path":"leetcode-53-maximum-subarray/","link":"","permalink":"https://aclihui.com/leetcode-53-maximum-subarray/","excerpt":"","text":"题目Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum. Example:123Input: [-2,1,-3,4,-1,2,1,-5,4],Output: 6Explanation: [4,-1,2,1] has the largest sum = 6. Follow up: If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle. 分析这道题一开始的时候太大意了，忽略了很多的问题，当然这个 错误分析 错误的理解题目的意思是求数组中的最大的和，因而答案就有点微妙了。123456789101112131415161718192021222324252627282930313233343536#include \"stdio.h\"int maxSubArray(int* nums, int numsSize) &#123; int temp=0; int sum=0; if(numsSize==1) &#123; return nums[0]; &#125; else &#123; for(int i=0;i&lt;numsSize;i++) &#123; for(int j=i;j&lt;numsSize;j++) &#123; if(nums[i]&lt;nums[j]) temp=nums[i]; nums[i]=nums[j]; nums[j]=temp; &#125; &#125; //end for for(int i=0;i&lt;numsSize;i++) &#123; if(nums[i]&gt;0) &#123; sum+=nums[i]; &#125; &#125; //end for return sum; &#125;&#125;int main()&#123; int nums[]=[-2,1,-3,4,-1,2,1,-5,4]; int numsSize=9; printf(\"%d\",maxSubArray(nums,numsSize)); return 0;&#125; 正确的题解123456789101112131415161718192021int maxSubArray(int* nums, int numsSize) &#123; int i,j; if(numsSize&lt;=0) return 0; int sum=0; int realSum=nums[0]; for(i = 0;i&lt;numsSize;i++)&#123; sum+=nums[i];// if sum is less than zero if(sum&lt;0)&#123; realSum = (realSum&gt;sum)?realSum:sum; sum = 0; continue; &#125;// sum&gt;0 判断当前数值和sum的大小，如果realSum 大则选择realSum 否则想下一个延伸 realSum = (realSum&gt;sum)?realSum:sum; &#125; return realSum;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"常见的正则表达式","slug":"regular-expression","date":"2018-08-23T00:39:00.000Z","updated":"2018-12-03T01:17:11.930Z","comments":true,"path":"regular-expression/","link":"","permalink":"https://aclihui.com/regular-expression/","excerpt":"","text":"常见的正则表达式不知道是从哪里下载的了，如有侵权请直接留言。 一、校验数字的表达式 1 数字：^[0-9]$ 2 n位的数字：^\\d{n}$ 3 至少n位的数字：^\\d{n,}$ 4 m-n位的数字：^\\d{m,n}$ 5 零和非零开头的数字：^(0|[1-9][0-9])$ 6 非零开头的最多带两位小数的数字：^([1-9][0-9])+(.[0-9]{1,2})?$ 7 带1-2位小数的正数或负数：^(-)?\\d+(.\\d{1,2})?$ 8 正数、负数、和小数：^(-|+)?\\d+(.\\d+)?$ 9 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$10 有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$11 非零的正整数：^[1-9]\\d$ 或 ^([1-9][0-9]){1,3}$ 或 ^+?[1-9][0-9]$12 非零的负整数：^-[1-9][]0-9”$ 或 ^-[1-9]\\d$13 非负整数：^\\d+$ 或 ^[1-9]\\d|0$14 非正整数：^-[1-9]\\d|0$ 或 ^((-\\d+)|(0+))$15 非负浮点数：^\\d+(.\\d+)?$ 或 ^[1-9]\\d.\\d|0.\\d[1-9]\\d|0?.0+|0$16 非正浮点数：^((-\\d+(.\\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\\d.\\d|0.\\d[1-9]\\d))|0?.0+|0$17 正浮点数：^[1-9]\\d.\\d|0.\\d[1-9]\\d$ 或 ^(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9]))$18 负浮点数：^-([1-9]\\d.\\d|0.\\d[1-9]\\d)$ 或 ^(-(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9])))$19 浮点数：^(-?\\d+)(.\\d+)?$ 或 ^-?([1-9]\\d.\\d|0.\\d[1-9]\\d|0?.0+|0)$ 二、校验字符的表达式 1 汉字：^[\\u4e00-\\u9fa5]{0,}$ 2 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$ 3 长度为3-20的所有字符：^.{3,20}$ 4 由26个英文字母组成的字符串：^[A-Za-z]+$ 5 由26个大写英文字母组成的字符串：^[A-Z]+$ 6 由26个小写英文字母组成的字符串：^[a-z]+$ 7 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$ 8 由数字、26个英文字母或者下划线组成的字符串：^\\w+$ 或 ^\\w{3,20}$ 9 中文、英文、数字包括下划线：^[\\u4E00-\\u9FA5A-Za-z0-9_]+$10 中文、英文、数字但不包括下划线等符号：^ [\\u4E00-\\u9FA5A-Za-z0-9]+$ 或 ^[\\u4E00-\\u9FA5A-Za-z0-9]{2,20}$11 可以输入含有^%&amp;’,;=?$\\”等字符：[^%&amp;’,;=?$\\x22]+12 禁止输入含有~的字符：[^~\\x22]+ 三、特殊需求表达式 1 Email地址：^\\w+([-+.]\\w+)@\\w+([-.]\\w+).\\w+([-.]\\w+)$ 2 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.? 3 InternetURL：[a-zA-z]+://[^\\s] 或 ^http://([\\w-]+.)+[\\w-]+(/[\\w-./?%&amp;=])?$ 4 手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$ 5 电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^((\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$ 6 国内电话号码(0511-4405222、021-87888822)：\\d{3}-\\d{8}|\\d{4}-\\d{7} 7 身份证号： 15或18位身份证：^\\d{15}|\\d{18}$ 15位身份证：^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$ 18位身份证：^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{4}$ 8 短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$ 9 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$10 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\\w{5,17}$11 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.\\d)(?=.[a-z])(?=.[A-Z]).{8,10}$12 日期格式：^\\d{4}-\\d{1,2}-\\d{1,2}13 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$14 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$15 钱的输入格式：16 1.有四种钱的表示形式我们可以接受:”10000.00” 和 “10,000.00”, 和没有 “分” 的 “10000” 和 “10,000”：^[1-9][0-9]$17 2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符”0”不通过,所以我们采用下面的形式：^(0|[1-9][0-9])$18 3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9])$19 4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$20 5.必须说明的是,小数点后面至少应该有1位数,所以”10.”是不通过的,但是 “10” 和 “10.2” 是通过的：^[0-9]+(.[0-9]{2})?$21 6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$22 7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})(.[0-9]{1,2})?$23 8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3}))(.[0-9]{1,2})?$24 备注：这就是最终结果了,别忘了”+”可以用”“替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里25 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$26 中文字符的正则表达式：[\\u4e00-\\u9fa5]27 双字节字符：[^\\x00-\\xff] (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))28 空白行的正则表达式：\\n\\s\\r (可以用来删除空白行)29 HTML标记的正则表达式：&lt;(\\S?)[^&gt;]&gt;.?&lt;/\\1&gt;|&lt;.? /&gt; (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)30 首尾空白字符的正则表达式：^\\s|\\s$或(^\\s)|(\\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)31 腾讯QQ号：[1-9][0-9]{4,} (腾讯QQ号从10000开始)32 中国邮政编码：[1-9]\\d{5}(?!\\d) (中国邮政编码为6位数字)33 IP地址：\\d+.\\d+.\\d+.\\d+ (提取IP地址时有用)","categories":[{"name":"正则表达式","slug":"正则表达式","permalink":"https://aclihui.com/categories/正则表达式/"},{"name":"其他","slug":"正则表达式/其他","permalink":"https://aclihui.com/categories/正则表达式/其他/"}],"tags":[{"name":"正则表达式","slug":"正则表达式","permalink":"https://aclihui.com/tags/正则表达式/"},{"name":"其他","slug":"其他","permalink":"https://aclihui.com/tags/其他/"}]},{"title":"leetcode-70-climbing-stairs爬楼梯","slug":"leetcode-70-climbing-stairs","date":"2018-08-22T14:15:00.000Z","updated":"2018-12-03T01:40:10.455Z","comments":true,"path":"leetcode-70-climbing-stairs/","link":"","permalink":"https://aclihui.com/leetcode-70-climbing-stairs/","excerpt":"","text":"题目You are climbing a stair case. It takes n steps to reach to the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top? Note: Given n will be a positive integer. Example 1:12345Input: 2Output: 2Explanation: There are two ways to climb to the top.1. 1 step + 1 step2. 2 steps Example 2:123456Input: 3Output: 3Explanation: There are three ways to climb to the top.1. 1 step + 1 step + 1 step2. 1 step + 2 steps3. 2 steps + 1 step 分析这道题是利用了递归的一道问题，如果单纯的使用递归进行求解就会时间超限。因此必须用其他的方法求解。在CPP中可以用vector动态的开辟数组，是一个比较好用的模板，用其解题可事半功倍。 第一种，递归123456789int climbStairs(int n) &#123;// 第一种解法递归 if (n==1) return 1; else if(n==2) return 2; else return climbStairs(n-1)+climbStairs(n-2);&#125; 第二种，vector方法1234567891011int climbStairs(int n) &#123; // 第二种解法 vector&lt;int&gt; res(n+1); res[0]=1; res[1]=1; for(int i=2;i&lt;=n;i++) &#123; res[i]=res[i-1]+res[i-2]; &#125; return res[n];&#125; 注意要使用using namespace std 和#include&lt; vector &gt;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"JS通过实例调用自建排序方法","slug":"js-self-Sequence","date":"2018-08-22T02:17:00.000Z","updated":"2018-12-03T01:18:57.738Z","comments":true,"path":"js-self-Sequence/","link":"","permalink":"https://aclihui.com/js-self-Sequence/","excerpt":"","text":"通过实例自建排序方法123456789101112131415161718192021222324252627282930313233&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Title&lt;/title&gt; &lt;script&gt; function MyArray() &#123; this.mySort=function (arr) &#123; for(var i=0;i&lt;arr.length;i++) &#123; for(var j=i;j&lt;arr.length;j++) &#123; if(arr[i]&gt;arr[j]) &#123; var temp=arr[i]; arr[i]=arr[j]; arr[j]=temp; &#125;//end if &#125; // end for &#125; // end for &#125; // end fun mySort &#125; // end fun arr=[123,12,123,33]; var myArray= new MyArray(); myArray.mySort(arr); console.log(arr); &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://aclihui.com/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://aclihui.com/tags/JavaScript/"}]},{"title":"nodejs安装最新版","slug":"nodejs-install","date":"2018-08-21T16:00:00.000Z","updated":"2018-12-03T01:08:57.723Z","comments":true,"path":"nodejs-install/","link":"","permalink":"https://aclihui.com/nodejs-install/","excerpt":"","text":"为什么在网上查资料的时候发现，node安装的资料相对来说比较的少，而且比较零散，想将零散的资料统一起来，以便以后的时候查询。 CENTOS1.获取最新版的bash当前稳定版为8.11.41curl --silent --location https://rpm.nodesource.com/setup_8.x | bash - 获取其他的版本1curl --silent --location https://rpm.nodesource.com/setup_10.x | bash - 2.执行安装1yum install -y nodejs -y 为answer yes for all questions 对每一个回答回答是 3.检测版本号12node -vnpm -v","categories":[{"name":"NodeJS","slug":"NodeJS","permalink":"https://aclihui.com/categories/NodeJS/"}],"tags":[{"name":"NodeJS","slug":"NodeJS","permalink":"https://aclihui.com/tags/NodeJS/"}]},{"title":"leetcode-83-remove-duplicates-from-sorted-list","slug":"leetcode-83-remove-duplicates-from-sorted-list","date":"2018-08-21T14:31:00.000Z","updated":"2018-12-03T07:33:15.147Z","comments":true,"path":"leetcode-83-remove-duplicates-from-sorted-list/","link":"","permalink":"https://aclihui.com/leetcode-83-remove-duplicates-from-sorted-list/","excerpt":"","text":"题目Given a sorted linked list, delete all duplicates such that each element appear only once. Example 1:12Input: 1-&gt;1-&gt;2Output: 1-&gt;2 Example 2:12Input: 1-&gt;1-&gt;2-&gt;3-&gt;3Output: 1-&gt;2-&gt;3 分析这也算一道简单的题目吧，设计的知识有 链表节点的申请 判断链表空与非空 链表结束的判断 C code123456789101112131415161718struct ListNode * p; p=head; if(!head) &#123; return NULL; &#125; while(p&amp;&amp;p-&gt;next) &#123; if(p-&gt;val==p-&gt;next-&gt;val) &#123; p-&gt;next=p-&gt;next-&gt;next; &#125; else &#123; p=p-&gt;next; &#125; &#125; return head; 这次感受还算颇丰，链表的节点判断还是比较重要的一个方面的。","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"js_random_color","slug":"js-random-color","date":"2018-08-20T16:00:00.000Z","updated":"2018-12-03T01:03:32.072Z","comments":true,"path":"js-random-color/","link":"","permalink":"https://aclihui.com/js-random-color/","excerpt":"","text":"JS生成随机十六位的颜色的数值1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Title&lt;/title&gt; &lt;script&gt; function getColor() &#123; var str=\"#\"; var co=[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"]; for (var j=0;j&lt;6;j++) &#123; colors=co[parseInt(Math.random()*15)]; str+=colors; &#125; return str; &#125; console.log(getColor()); &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://aclihui.com/categories/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://aclihui.com/tags/JavaScript/"}]},{"title":"LeetCode-27. Remove Element 移除元素","slug":"leetcode-27-remove-element","date":"2018-08-20T00:58:00.000Z","updated":"2018-12-03T01:18:47.900Z","comments":true,"path":"leetcode-27-remove-element/","link":"","permalink":"https://aclihui.com/leetcode-27-remove-element/","excerpt":"","text":"题目Given an array nums and a value val, remove all instances of that value in-place and return the new length. Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory. The order of elements can be changed. It doesn’t matter what you leave beyond the new length. Example 1:12345Given nums = [3,2,2,3], val = 3,Your function should return length = 2, with the first two elements of nums being 2.It doesn&apos;t matter what you leave beyond the returned length. Example 2:1234567Given nums = [0,1,2,2,3,0,4,2], val = 2,Your function should return length = 5, with the first five elements of nums containing 0, 1, 3, 0, and 4.Note that the order of those five elements can be arbitrary.It doesn&apos;t matter what values are set beyond the returned length. Clarification: Confused why the returned value is an integer but your answer is an array? Note that the input array is passed in by reference, which means modification to the input array will be known to the caller as well. Internally you can think of this:12345678// nums is passed in by reference. (i.e., without making a copy)int len = removeElement(nums, val);// any modification to nums in your function would be known by the caller.// using the length returned by your function, it prints the first len elements.for (int i = 0; i &lt; len; i++) &#123; print(nums[i]);&#125; 分析这又是一道水题目，移除与目标相同的元素，返回数组中剩余后的数值即可。C code123456789101112131415161718int removeElement(int* nums, int numsSize, int val) &#123; int same=0; for(int i=0;i&lt;numsSize-same;i++) &#123; if(nums[i]==val) &#123;// numsSize-same减去后边的于其相同的部分 -1减去当最后一个的时候下标的变化 for(int j=i;j&lt;numsSize-same-1;j++) &#123; nums[j]=nums[j+1]; &#125; same++; i=i-1; &#125; &#125; return numsSize-same;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"LeetCode-35. Search Insert Position 查找插入位置","slug":"leetcode-35-search-insert-position","date":"2018-08-19T13:14:00.000Z","updated":"2018-12-03T01:18:32.334Z","comments":true,"path":"leetcode-35-search-insert-position/","link":"","permalink":"https://aclihui.com/leetcode-35-search-insert-position/","excerpt":"","text":"题目Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order. You may assume no duplicates in the array. Example 1:12Input: [1,3,5,6], 5Output: 2 Example 2:12Input: [1,3,5,6], 2Output: 1 Example 3:12Input: [1,3,5,6], 7Output: 4 Example 4:12Input: [1,3,5,6], 0Output: 0 分析此题比较简单 分成两种情况 目标数在最后边 目标数在数组中某位的前边或者相等 1. 目标数在最后边这种简单，直接返回数组的大小就好。2. 目标数在数组中某位的前边或者相等这种也相对简单，返回当前比较的数即可。 12345678910111213141516171819int searchInsert(int* nums, int numsSize, int target) &#123; int i=0; if(target&gt;nums[numsSize-1]) &#123; return numsSize; &#125; else &#123; for(i=0;i&lt;numsSize;i++) &#123; if(target&lt;=nums[i]) &#123; return i; &#125; &#125; &#125; return 0;&#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"leetcode-9-palindrome-number 回文数","slug":"leetcode-9-palindrome-number","date":"2018-08-19T12:25:00.000Z","updated":"2018-12-03T01:18:55.582Z","comments":true,"path":"leetcode-9-palindrome-number/","link":"","permalink":"https://aclihui.com/leetcode-9-palindrome-number/","excerpt":"","text":"题目Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward. Example 1:12Input: 121Output: true Example 2:1234Input: -121Output: falseExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome. Example 3:123Input: 10Output: falseExplanation: Reads 01 from right to left. Therefore it is not a palindrome. Follow up:1Coud you solve it without converting the integer to a string? 分析这是一道比较简单的题目只要分析出来三个判断就可以 等于零 小于零 大于零等于零等于零肯定成立，因为零无论正着念，倒着读都是零小于零有题目知等于零的时候不成立大于零这是相对来说比较复杂的地方了，设置参数将x倒置比较即可123456789101112131415161718192021222324252627282930313233bool isPalindrome(int x) &#123; if(x==0) &#123; return true; &#125; else if(x&lt;0) &#123; return false; &#125; else &#123; int x1=x; int y=0; int tmp=0; while(x1!=0) &#123; tmp=x1%10; x1=x1/10; y=y*10+tmp; &#125; if(x==y) &#123; return true; &#125; else &#123; return false; &#125; &#125; &#125;","categories":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/categories/LeetCode/"},{"name":"ACM","slug":"LeetCode/ACM","permalink":"https://aclihui.com/categories/LeetCode/ACM/"}],"tags":[{"name":"LeetCode","slug":"LeetCode","permalink":"https://aclihui.com/tags/LeetCode/"},{"name":"ACM","slug":"ACM","permalink":"https://aclihui.com/tags/ACM/"}]},{"title":"Fibonacci","slug":"Fibonacci","date":"2018-08-19T09:41:37.000Z","updated":"2018-12-03T00:57:31.310Z","comments":true,"path":"Fibonacci/","link":"","permalink":"https://aclihui.com/Fibonacci/","excerpt":"","text":"今天恰好学到斐波那契数列js实现斐波那契数列12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849// 第三个月 //前置条件 var day1=1; var day2=1; var sum=day1+day2; var day3=0; //第三月 day3=day1+day2; sum=sum+day3; /* * 第四个月 * */ var day1=day2; var day2=day3; day3=day1+day2; var sum =sum+day3; //第五个月 var day1=day2; day2=day3; day3=day1+day2; sum+=day3; //综上可得 /* * 重复的部分为 * day1=day2 * day2=day3 * day3=day1+day2; * sum+=day3 * */ //借助for循环 //前置条件 var day1=1; var day2=1; var sum=day1+day2; var day3=day1+day2; var tar=parseInt(prompt(\"请输入斐波那契的月份信息(且月份大约三)\")); for(i=3;i&lt;tar;i++) &#123; day1=day2; day2=day3; day3=day1+day2; sum+=day3; &#125; console.log(sum) 由前三个总结出 最后在第N天的时候拥有兔子的数量","categories":[{"name":"Javascript","slug":"Javascript","permalink":"https://aclihui.com/categories/Javascript/"}],"tags":[{"name":"Javascript","slug":"Javascript","permalink":"https://aclihui.com/tags/Javascript/"}]},{"title":"half-year","slug":"half-year","date":"2018-08-19T00:59:00.000Z","updated":"2018-12-03T00:54:43.257Z","comments":true,"path":"half-year/","link":"","permalink":"https://aclihui.com/half-year/","excerpt":"","text":"建站半年恍恍惚惚，网站建造已经有半年了，虽然中间也有放弃此网站的想法，但是，忽然发现这个网站对我的作用还是蛮大的，做为我的一个重要的站点，半年的纪念是一个伟大的日子啊。半年了，回想半年前建站的的时候拥有的雄心壮志，和一些东西，以及网站的意义不禁涌上心头，为什么域名是AC不是其他的我想你是知道的吧。而且好像含义还是蛮深的呢在半年其中间我也想过放弃这个网站的想法，但是海曙因为其种种还是舍不得，这个比较重要的网站。半年的风霜有很多，有些想法也会随着时间的流逝而逐渐的改变。建站的时间，有点长了，半年间恍恍惚惚，改了好几次的网站名字，改了好多次的网站模板，重新做了好多次的网站，一次次推到重做，一次次的下载文章，还原为文章，数不清了丢失多少个简单的的文章，或许只有Google的搜索引擎知道我改了多少的名字和换了多少的主题吧，把很多的水文都一次次的删除，也是一项小工程吧。（苦笑网站建站初期我记得还是简单的http到后来的https再到后来的全站CDN HTTP （时间最短）在到后来的全站CDN HTTPS 好像过去了太多太多。希望在未来的日子里还有机会去维护这个网站，还能将网站做的更加简洁漂亮。 ---时间2018年8月30号","categories":[{"name":"建站记录","slug":"建站记录","permalink":"https://aclihui.com/categories/建站记录/"}],"tags":[{"name":"建站记录","slug":"建站记录","permalink":"https://aclihui.com/tags/建站记录/"}]},{"title":"docker容器操作","slug":"docker-con-command","date":"2018-08-09T03:25:24.000Z","updated":"2018-08-09T03:40:42.646Z","comments":true,"path":"docker-con-command/","link":"","permalink":"https://aclihui.com/docker-con-command/","excerpt":"","text":"新建并启动容器docker run command is equel to the command12sudo docker createsudo docker start 1sudo docker run ubuntu /bash/echo 'hello world!'","categories":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/categories/docker/"},{"name":"container","slug":"docker/container","permalink":"https://aclihui.com/categories/docker/container/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/tags/docker/"},{"name":"container","slug":"container","permalink":"https://aclihui.com/tags/container/"}]},{"title":"随笔","slug":"2018-8-8-note","date":"2018-08-08T11:10:43.000Z","updated":"2018-08-08T11:20:05.258Z","comments":true,"path":"2018-8-8-note/","link":"","permalink":"https://aclihui.com/2018-8-8-note/","excerpt":"","text":"起因 今天在学习docker的时候忽然发现centos7精简版的许多东西都没有因此自己下载遇到了很多很多不知道的，特此写了份随笔 2018-8-8 想下载一个bash游戏,遇到的坑。 首先是crul下载再是wget下载1sudo yum -y install wget","categories":[],"tags":[]},{"title":"docker基础命令代码","slug":"docker-base-command","date":"2018-08-03T01:57:30.000Z","updated":"2018-08-13T04:04:21.016Z","comments":true,"path":"docker-base-command/","link":"","permalink":"https://aclihui.com/docker-base-command/","excerpt":"","text":"部分未完成 存储和载入镜像上传镜像 docker iamges1sudo docker images 信息解读 表格名称 中文译名 作用解释 备注 REPOSITORY 仓库 来自于哪个仓库 无 TAG 标签 标签信息 无 IMAGE ID 镜像ID 唯一标示镜像 无 CREATED 创建时间 镜像创建的时间 标记的是原镜像创建的时间，和自身什么时候下载没关系 SIZE 大小 镜像的大小 无 镜像的ID唯一标示进行镜像大小信息只是表示镜像的逻辑体积大小，实际上由于相同的镜像层本地只会储存一份，物理上占用的存储空间会小于各镜像的逻辑体积之和 docker images other command-a ,–all=ture|false:列出所有的镜像文件（包括临时文件）,默认为否–digests=true|false:列出所有镜像的数字摘要值，默认为否-f,–filter=[]:过滤列出的镜像，如dangling=true 值显示没有被使用的镜像；也可指定带有特定标注的镜像等；–formal=”TEMPLATE”控制输出格式，如.ID代表ID信息，.Repository代表库信息等–no-trunc=ture|false:对输出结果中 的太长的部分是否进行截断，such as the ID info ,default set is YES;-q,–quiet=true|false:Only output the ID info ,defaut set is no; docker images NOTE其中，对输出结果进行控制的选项如-f,–filter=[],–no-trunc=true|false、-q,–quiet=true|false 等，大部分子命令都支持 docker inspect1sudo docker inspect ubuntu:18.04 docker-inspect-image 因为inspect 返回放数据为json 的类型的，以此可以带餐查询eg:1sudo docker inspect -f &#123;&#123;\".Architecture\"&#125;&#125; ubuntu:18.04 docker search1sudo docker search nginx docker-search-nginx docker search 的命令更新了很多,此处暂时不全部尝试。 为镜像加标签12sudo docker tag 原镜像名称 新镜像名称 such as 1sudo docker tag ubuntu:latest myubuntu:latest 删除镜像1sudo docker rmi NAME:TAG such as1sudo docker rmi ubuntu:18.04 docker 根据ID删除镜像删除步骤 首先找到相对应的ID 在删除对应的镜像如果相对应的正在运行的容器所依赖的镜像 需要先删除响应的容器文件,再继续做 删除容器1docker rm 容器的ID 现在还没有发现有其他的方法去删除容器 例子运行新容器1sudo docker run -it ubuntu:16.04 echo 'hello world!' 注意：此处的i 是让docker分配一个伪终端pseudo-tty t的 查看运行的镜像查看当前运行的容器1sudo docker ps 参数 -a 是查看存在的所有容器（包括停止的）参数 -l 是显示最新启动的一个容器参数 -q 是仅显示容器的ID参数 -s Display total file sizes 删除容器删除单个容器12sudo docker ps -a sudo docker rm 'container ID' 删除多个镜像删除status为退出的container1sudo docker rm $(sudo docker -qf status=exited) 删除镜像1sudo rmi 镜像ID 创建镜像基于已有镜像创建镜像command such as sudo docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]] 存储和载入镜像存储镜像载入镜像上传镜像","categories":[],"tags":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/tags/docker/"},{"name":"docker command","slug":"docker-command","permalink":"https://aclihui.com/tags/docker-command/"}]},{"title":"docker pull 试用","slug":"docker-pull-test","date":"2018-08-03T00:17:27.000Z","updated":"2018-08-03T02:03:06.284Z","comments":true,"path":"docker-pull-test/","link":"","permalink":"https://aclihui.com/docker-pull-test/","excerpt":"","text":"pull image在命令行中输入如下代码1sudo docker pull centos:7 CENTOS 是NAME(镜像名称) : 后面的是版本号 docker run image1sudo docker run centos:7 bash 测试代码1ls 效果图 exit from the imagecode1exit","categories":[],"tags":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/tags/docker/"}]},{"title":"开始学习docker","slug":"docker-start","date":"2018-08-02T09:44:36.000Z","updated":"2018-08-02T12:03:20.651Z","comments":true,"path":"docker-start/","link":"","permalink":"https://aclihui.com/docker-start/","excerpt":"","text":"今天开始学习docker,记一下笔记 运行环境 名称 版本 操作系统 CENTOS centos7-1804 core versionused by uname -a to check itthe core version must update to 3.10非常奇怪的是centOS 我下载的最新的内核版本就是3.10 （或许是3.10 当下最稳定吧 安装docker添加软件源12345678sudo tee /etc/yum.repos.d/docker.repo &lt;&lt;- &apos;EOF&apos; [dockerrepo] name=Docker Repository baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/ enabled=1 gpgcheck=1 gpgkey=https://yum.dockerproject.org/gpg EOF 更新软件源缓存 sudo yum update sudo yum install -y docker-engine docker 大小 看起来蛮小的不是吗 安装成功 安装成功 docker version 版本检测 ###报错 解决方案启动docker 服务以管理员方式运行指令 RUN hello-world","categories":[],"tags":[{"name":"docker","slug":"docker","permalink":"https://aclihui.com/tags/docker/"}]},{"title":"跳转页面","slug":"gonext","date":"2018-07-28T08:21:27.000Z","updated":"2018-07-28T08:24:31.777Z","comments":true,"path":"gonext/","link":"","permalink":"https://aclihui.com/gonext/","excerpt":"","text":"代码如下：12345678910111213141516171819202122232425262728293031323334353637383940&lt;?php$t_url = preg_replace('/^url=(.*)$/i','$1',$_SERVER[\"QUERY_STRING\"]); if(!emptyempty($t_url)) &#123; preg_match('/(http|https):\\/\\//',$t_url,$matches); if($matches)&#123; $url=$t_url; $title='页面加载中,请稍候...'; &#125; else &#123; preg_match('/\\./i',$t_url,$matche); if($matche)&#123; $url='http://'.$t_url; $title='页面加载中,请稍候...'; &#125; else &#123; $url='https://www.yugepower.com/'; $title='参数错误，正在返回首页...'; &#125; &#125; &#125; else &#123; $title='参数缺失，正在返回首页...'; $url='https://www.yugepower.com/';&#125; ?&gt; &lt;html&gt; &lt;head&gt; &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt; &lt;meta http-equiv=\"refresh\" content=\"1;url='&lt;?php echo $url;?&gt;';\"&gt; &lt;title&gt;&lt;?php echo $title;?&gt;&lt;/title&gt; &lt;style&gt; body&#123;background:#000&#125;.loading&#123;-webkit-animation:fadein 2s;-moz-animation:fadein 2s;-o-animation:fadein 2s;animation:fadein 2s&#125;@-moz-keyframes fadein&#123;from&#123;opacity:0&#125;to&#123;opacity:1&#125;&#125;@-webkit-keyframes fadein&#123;from&#123;opacity:0&#125;to&#123;opacity:1&#125;&#125;@-o-keyframes fadein&#123;from&#123;opacity:0&#125;to&#123;opacity:1&#125;&#125;@keyframes fadein&#123;from&#123;opacity:0&#125;to&#123;opacity:1&#125;&#125;.spinner-wrapper&#123;position:absolute;top:0;left:0;z-index:300;height:100%;min-width:100%;min-height:100%;background:rgba(255,255,255,0.93)&#125;.spinner-text&#123;position:absolute;top:50%;left:50%;margin-left:-90px;margin-top: 2px;color:#BBB;letter-spacing:1px;font-weight:700;font-size:36px;font-family:Arial&#125;.spinner&#123;position:absolute;top:50%;left:50%;display:block;margin-left:-160px;width:1px;height:1px;border:25px solid rgba(100,100,100,0.2);-webkit-border-radius:50px;-moz-border-radius:50px;border-radius:50px;border-left-color:transparent;border-right-color:transparent;-webkit-animation:spin 1.5s infinite;-moz-animation:spin 1.5s infinite;animation:spin 1.5s infinite&#125;@-webkit-keyframes spin&#123;0%,100%&#123;-webkit-transform:rotate(0deg) scale(1)&#125;50%&#123;-webkit-transform:rotate(720deg) scale(0.6)&#125;&#125;@-moz-keyframes spin&#123;0%,100%&#123;-moz-transform:rotate(0deg) scale(1)&#125;50%&#123;-moz-transform:rotate(720deg) scale(0.6)&#125;&#125;@-o-keyframes spin&#123;0%,100%&#123;-o-transform:rotate(0deg) scale(1)&#125;50%&#123;-o-transform:rotate(720deg) scale(0.6)&#125;&#125;@keyframes spin&#123;0%,100%&#123;transform:rotate(0deg) scale(1)&#125;50%&#123;transform:rotate(720deg) scale(0.6)&#125;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"loading\"&gt; &lt;div class=\"spinner-wrapper\"&gt; &lt;span class=\"spinner-text\"&gt;页面加载中,请稍候...&lt;/span&gt; &lt;span class=\"spinner\"&gt;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; 代码来源： 张戈博客 zhengge.net","categories":[],"tags":[{"name":"网页素材","slug":"网页素材","permalink":"https://aclihui.com/tags/网页素材/"}]},{"title":"网页素材","slug":"webatom","date":"2018-07-28T07:02:57.000Z","updated":"2018-07-28T08:29:19.356Z","comments":true,"path":"webatom/","link":"","permalink":"https://aclihui.com/webatom/","excerpt":"","text":"显示网站建站时间12345678910111213141516171819&lt;!--显示网站建站的时间 start--&gt;&lt;div id=\"credit\"&gt;٩(๑❛ᴗ❛๑)۶本站已坚持运行了:&lt;script&gt;BirthDay=new Date(\"05,20,2017\");today=new Date();timeold=(today.getTime()-BirthDay.getTime());sectimeold=timeold/1000secondsold=Math.floor(sectimeold);msPerDay=24*60*60*1000e_daysold=timeold/msPerDaydaysold=Math.floor(e_daysold);document.write(daysold+\"天 !\");&lt;/script&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;!--显示网站建站的时间 end--&gt; 来源: http://www.hzv5.cn 的源代码","categories":[],"tags":[{"name":"网页素材","slug":"网页素材","permalink":"https://aclihui.com/tags/网页素材/"},{"name":"素材","slug":"素材","permalink":"https://aclihui.com/tags/素材/"}]},{"title":"js网页代码总结","slug":"js","date":"2018-07-28T06:51:32.000Z","updated":"2018-07-28T07:13:25.911Z","comments":true,"path":"js/","link":"","permalink":"https://aclihui.com/js/","excerpt":"","text":"js网页代码总结为什么写 当下的网页js有很多，但是总结起来的非常的少，于是乎此文就是为总结js网页代码的一片文章。 代码区域标题栏切换特效1234567891011121314151617181920&lt;!--标题栏切换特效 start--&gt;&lt;script type=\"text/javascript\"&gt;var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function() &#123;if (document.hidden) &#123;$('[rel=\"shortcut icon\"]').attr('href', \"//www.hzv5.cn/logo.jpg\");document.title = '(⊙_⊙) 哎呀！崩溃啦~ •' + OriginTitile;clearTimeout(titleTime);&#125;else &#123;$('[rel=\"shortcut icon\"]').attr('href', \"//hzv5.cn/logo.jpg\");document.title = '๑乛◡乛๑ 又好啦，嘿嘿~ •' + OriginTitile;titleTime = setTimeout(function() &#123;document.title = OriginTitile;&#125;, 1500);&#125;&#125;);&lt;/script&gt;&lt;!--标题栏切换特效 end--&gt; 给复制内容增加版权信息12345678910111213141516171819202122232425262728293031323334353637&lt;!--给复制内容增加版权信息 start--&gt;&lt;script&gt; $(\"body\").on('copy', function (e) &#123; if (typeof window.getSelection == \"undefined\") return; var body_element = document.getElementsByTagName('body')[0]; var selection = window.getSelection(); if ((\"\" + selection).length &lt; 30) return; var newdiv = document.createElement('div'); newdiv.style.position = 'absolute'; newdiv.style.left = '-99999px'; body_element.appendChild(newdiv); newdiv.appendChild(selection.getRangeAt(0).cloneContents()); //提示复制成功代码start if(window.getSelection)&#123; selection = window.getSelection(); alert(\"复制成功~\\n若转载请注明出处：\"+document.location.href); //document.write(\"复制成功~\\n转载请注明出处：\"+document.location.href); &#125;else if(document.getSelection)&#123;//IE10 selection= document.getSelection(); alert(\"复制成功~\\n若转载请注明出处：\"+document.location.href); &#125;else if(document.selection)&#123;//IE6+10- selection= document.selection.createRange().text; alert(\"复制成功~\\n若转载请注明出处：\"+document.location.href); &#125;else&#123; selection= \"\"; alert(\"浏览器兼容问题导致复制失败！\"); &#125; //提示复制成功代码end if (selection.getRangeAt(0).commonAncestorContainer.nodeName == \"PRE\") &#123; newdiv.innerHTML = \"&lt;pre&gt;\" + newdiv.innerHTML + \"&lt;/pre&gt;\"; &#125; newdiv.innerHTML += \"&lt;/br&gt;&lt;/br&gt;若转载请注明出处: &lt;a href='\" + document.location.href + \"'&gt;\" + document.location.href + \"&lt;/a&gt; &amp;copy; hzv5.cn\"; selection.selectAllChildren(newdiv); window.setTimeout(function () &#123; body_element.removeChild(newdiv); &#125;, 200);&#125;);&lt;/script&gt;&lt;!--给复制内容增加版权信息 end--&gt; 鼠标点击出现随机数字123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596&lt;!--鼠标点击出现随机数字 start--&gt;&lt;script type=\"text/javascript\"&gt;var a_idx = 0;jQuery(document).ready(function($) &#123; $(\"body\").click(function(e) &#123; var a = new Array(\"天真\",\"富强\", \"民主\", \"文明\", \"和谐\", \"自由\", \"平等\", \"公正\" ,\"法治\", \"爱国\", \"敬业\", \"诚信\", \"友善\"); var $i = $(\"&lt;span/&gt;\").text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; $i.css(&#123; \"z-index\": 99999, \"top\": y - 20, \"left\": x, \"position\": \"absolute\", \"font-weight\": \"bold\", \"color\": \"#ff0000\" &#125;); $(\"body\").append($i); $i.animate(&#123; \"top\": y - 180, \"opacity\": 0 &#125;, 1800, function() &#123; $i.remove(); &#125;); &#125;);&#125;);(function(window, document, undefined) &#123; var hearts = []; window.requestAnimationFrame = (function() &#123; return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) &#123; setTimeout(callback, 1000 / 60); &#125; &#125;)(); init(); function init() &#123; css(\".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;\"); attachEvent(); gameloop(); &#125; function gameloop() &#123; for (var i = 0; i &lt; hearts.length; i++) &#123; if (hearts[i].alpha &lt;= 0) &#123; document.body.removeChild(hearts[i].el); hearts.splice(i, 1); continue; &#125; hearts[i].y-= 1.6; hearts[i].scale += 0.01; hearts[i].alpha -= 0.01; hearts[i].el.style.cssText = \"left:\" + hearts[i].x + \"px;top:\" + hearts[i].y + \"px;opacity:\" + hearts[i].alpha + \";transform:scale(\" + hearts[i].scale + \",\" + hearts[i].scale + \") rotate(45deg);background:\" + hearts[i].color; &#125; requestAnimationFrame(gameloop); &#125; function attachEvent() &#123; var old = typeof window.onclick === \"function\" &amp;&amp; window.onclick; window.onclick = function(event) &#123; old &amp;&amp; old(); createHeart(event); &#125; &#125; function createHeart(event) &#123; var d = document.createElement(\"div\"); d.className = \"heart\"; hearts.push(&#123; el: d, x: event.clientX - 2, y: event.clientY - 2, scale: 1, alpha: 1, color: randomColor() &#125;); document.body.appendChild(d); &#125; function css(css) &#123; var style = document.createElement(\"style\"); style.type = \"text/css\"; try &#123; style.appendChild(document.createTextNode(css)); &#125; catch (ex) &#123; style.styleSheet.cssText = css; &#125; document.getElementsByTagName('head')[0].appendChild(style); &#125; function randomColor() &#123; return \"rgb(\" + (~~ (Math.random() * 255)) + \",\" + (~~ (Math.random() * 255)) + \",\" + (~~ (Math.random() * 255)) + \")\"; &#125;&#125;)(window, document);&lt;/script&gt;&lt;!--鼠标点击出现随机数字 end--&gt; 来源: http://www.hzv5.cn 的源代码","categories":[],"tags":[{"name":"script","slug":"script","permalink":"https://aclihui.com/tags/script/"}]},{"title":"博客起航","slug":"start","date":"2018-07-26T04:00:16.000Z","updated":"2018-07-28T06:48:09.154Z","comments":true,"path":"start/","link":"","permalink":"https://aclihui.com/start/","excerpt":"","text":"博客起航前言博客搭建过很多很多，我也和其他的人走了相同的道路。首先是查找免费的域名，空间等一切免费的东西。然后发现免费的东西限制太多，控制权不在自己手中，其他人想删就删，于是乎自己买服务器，自己买域名，当然也有很多的学费域名。用建站程序建站。到了现在，发现其实我只需要一个安安静静写文字的场所就好，于是乎，此网站就因此成立。 这个网站是干什么的？这个问题其实是最令人深思的，也是最简单的，网站不知道是干什么的开有什么用。网站不知道干什么的，也肯定开的时间不会太长。 这个网站是作为YUGE来写的，写的内容是对知识和生活的感知和思考。 时间：2018-7-28","categories":[],"tags":[{"name":"起航","slug":"起航","permalink":"https://aclihui.com/tags/起航/"}]},{"title":"imgtest","slug":"imgtest","date":"2018-07-21T04:40:42.000Z","updated":"2018-07-27T23:55:08.507Z","comments":true,"path":"imgtest/","link":"","permalink":"https://aclihui.com/imgtest/","excerpt":"","text":"博客启航两天前 YUGE’S BLOG 正式启用，昨天对于BLOG的所有的设置几乎已经完成，今天将图片的测试完成后部署就完成了，下面带上一张图。","categories":[],"tags":[]},{"title":"宝塔面板的内存占用率过高的解决方案","slug":"宝塔面板的内存占用率过高的解决方案","date":"2018-06-22T16:00:00.000Z","updated":"2018-12-03T00:52:13.613Z","comments":true,"path":"宝塔面板的内存占用率过高的解决方案/","link":"","permalink":"https://aclihui.com/宝塔面板的内存占用率过高的解决方案/","excerpt":"","text":"起因昨天晚上想要解决阿里云服务器(为什么是单指阿里云，因为我的另一台服务器（VU），挂了一个WP,和一个DZ占用率都低于20%)内存占用过高的问题但是迟迟没有解决，曾经也发过工单，但是都没有解决，时至今日，终于找到解决的办法于是，这篇文章就因此成型。 过程：经过进程查找 这一个PHP-Fpm 占用的数量甚多，且单个占用的亮比较大，于是猜测是否是这个服务项的影响呢？ 于是乎 去网页搜查，经过不懈的查找终于找到了新技能get的地方（限制并发的数量） 在如下网页找到解决方案 https://www.bt.cn/bbs/thread-1132-1-1.html 找到总控的软件设置-&gt;PHP7.2(因人而异)-&gt;设置-&gt;性能调整，修改成如下图所示： 内存占用率明显下降，降至30%左右（未优化前80%上下）。 遗留问题至于为什么同样的宝塔面板，VU家的内存（1G）占用率低，阿里的内存(2G)占用率高，问题还在调查中，单指猜测，宝塔在1H1G的服务器上限制了PHP的并发的数量，而在1H2G的服务器上减少了对服务器并发数量的限制。 问题拓展如何在命令行下调整呢，在查资料的过程中也有所涉及，相应网址如下: 看云论坛 解决CentOS 7中php-fpm进程数过多导致服务器内存资源消耗较大的问题","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aclihui.com/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://aclihui.com/tags/Linux/"}]},{"title":"four-month","slug":"four-month","date":"2018-06-19T04:35:00.000Z","updated":"2018-12-03T00:55:09.895Z","comments":true,"path":"four-month/","link":"","permalink":"https://aclihui.com/four-month/","excerpt":"","text":"时间： 2018-6-19 12：32起因:今天看来一下时间四个月 2018-02-19—2018-06-19 四个月的感悟四个月内（或者从第一个域名（2017-05-21–2018-05-21）开始）摸索了很久的域名和主题还有服务器的信息，我也相同的经历了他们的过程，从寻找免费域名主机，到寻找","categories":[{"name":"建站记录","slug":"建站记录","permalink":"https://aclihui.com/categories/建站记录/"}],"tags":[{"name":"建站记录","slug":"建站记录","permalink":"https://aclihui.com/tags/建站记录/"}]},{"title":"code-birthday","slug":"code-birthday","date":"2018-06-12T16:18:00.000Z","updated":"2018-12-02T15:05:06.070Z","comments":true,"path":"code-birthday/","link":"","permalink":"https://aclihui.com/code-birthday/","excerpt":"","text":"题目描述每个人对自己的生日肯定是铭记于心，淘淘也不例外，因为生日的时候会有蛋糕、礼物等等等等，想想都那么开心、甜蜜。某一天，范老师给大家出了一个题目，要求每个小朋友算一算今年自己的生日是今年的第几天呢？淘淘想了很久才算出来，你能帮助淘淘快点算出来吗？幸运的是淘淘生日不是2月29日，否则淘淘将至少苦恼4年才轮到一次。## 输入一行，两个整数m和d，分别表示2018年淘淘生日的月份和淘淘生日的日子。## 输出一个整数，输出淘淘2018年第几天过生日。样例输入2 1样例输出32代码：#include&lt;stdio.h&gt;int main(){ int m,d; int sum=0; int i; int month[13]={0,31,28,31,30,31,30,31,31,30,31,30,31}; scanf(“%d%d”,&amp;m,&amp;d); for(i=1;i&lt;m;i++) { sum=sum+month[i]; } sum=sum+d; printf(“%d”,sum); return 0;}","categories":[{"name":"CODE","slug":"CODE","permalink":"https://aclihui.com/categories/CODE/"}],"tags":[{"name":"CODE","slug":"CODE","permalink":"https://aclihui.com/tags/CODE/"}]},{"title":"CODE-淘淘的Q币","slug":"code-qbi","date":"2018-06-12T15:43:00.000Z","updated":"2018-12-02T15:01:11.351Z","comments":true,"path":"code-qbi/","link":"","permalink":"https://aclihui.com/code-qbi/","excerpt":"","text":"题目描述 淘淘使用QQ时总觉得自己的Q币太少不够用，希望谁能送给自己尽量多的Q币，晚上睡觉时还想着这个事情。淘淘梦中来到了一个海岛上，查看了一遍以后，他发现岛上有很多的坑，这些坑呈一直线分布，虚拟的Q币居然变成了可以拿到的圆形金币，第1个坑里面有1枚，第2个坑里面没有，第3个坑里面有3枚，第4个坑里面没有，第5个坑里面有5枚，以此类推。如果岛上有n个坑，你能告诉淘淘能抓到多少枚Q币吗？ 输入 一个整数n，表示有n个坑(1≤n≤10000) 输出 一个整数，表示抓到Q币的总数。 样例输入 3 样例输出 4 代码实现： #include&lt;stdio.h&gt; int main() { int n; int i=1,sum=0; scanf(\"%d\",&amp;n); for(i=1;i&lt;=n;i++) { if(i%2==0) { continue; } else sum=sum+i; } printf(\"%d\",sum); return 0; }","categories":[{"name":"CODE","slug":"CODE","permalink":"https://aclihui.com/categories/CODE/"}],"tags":[{"name":"CODE","slug":"CODE","permalink":"https://aclihui.com/tags/CODE/"}]},{"title":"GitHub官方落实微软收购","slug":"github-and-microsoft","date":"2018-06-04T15:49:00.000Z","updated":"2018-12-03T01:25:58.921Z","comments":true,"path":"github-and-microsoft/","link":"","permalink":"https://aclihui.com/github-and-microsoft/","excerpt":"","text":"合作成功啦大约到现在GitHub已经谈判好了，微软的2014年的开源政策也一直推进GitHub的发展，面对现在GitHub的收购，希望在微软的帮助下GitHub变的更好吧！ 原文 A bright future for GitHub Jun 04, 2018 defunkt I am very excited to announce that Microsoft is acquiring GitHub and expect the agreement to close by the end of the year. While it will still take a few months to finalize, we wanted to share the news as soon as we were able.When GitHub first launched ten years ago, I could have never imagined this headline. Git was a powerful but niche tool, clouds were just things in the sky, and Microsoft was a very different company. Open source and business, people said at the time, mixed as well as oil and water.We disagreed. As developers, we knew this was a false dichotomy—we had been using open source software successfully in a business setting for a long time. What we really needed was an easier way to work with others regardless of whether the code was public, private, or something in-between. We wanted to do it using Git, we wanted anyone in the world to be able to join in, and we didn’t want it to cost a dime if it was open source. So we created GitHub.Now, of course, things are different. Git is far and away the most popular version control system, clouds are mostly computers, and Microsoft is the most active organization on GitHub in the world. Their VS Code project alone is beloved by millions of developers, entirely open source, and built using GitHub’s Electron platform. Beyond that, today major enterprises regularly embrace open source. The world has realized how important happy, productive developers really are. And also, people have smartphones now.What hasn’t changed, however, is our focus on the developer. From the beginning, we have been obsessed with building a product for the people using it. We want to make developers more productive and we want more people to become developers. From “Code to Cloud and Code to Edge”, GitHub’s mission is to help every developer—regardless of experience level—learn, code, and ship software effectively.So as we look to the next decade of software development and beyond, we know it’s all about the developer. And as we’ve gotten to know the team at Microsoft over the past few years through collaborating on projects from Git LFS to Electron, we’ve learned that they agree. Their work on open source has inspired us, the success of the Minecraft and LinkedIn acquisitions has shown us they are serious about growing new businesses well, and the growth of Azure has proven they are an innovative development platform.But more than that, their vision for the future closely matches our own. We both believe GitHub needs to remain an open platform for all developers. No matter your language, stack, platform, cloud, or license, GitHub will continue to be your home—the best place for software creation, collaboration, and discovery.We both believe that software development needs to become easier, more accessible, more intelligent, and more open, so more people can become developers and existing developers can spend more time focusing on the unique problems they’re trying to solve.We both see the growing need for developers and the growing importance of software in all facets of our lives.And, most importantly, we both believe we can do greater things together than alone. Collaboration, after all, is at the heart of everything we do.As part of this change, Nat Friedman will be taking on the role of GitHub’s CEO. We have been searching for a new CEO for some time and found in both Microsoft and Nat a partner we believe will strengthen and grow the GitHub community and company over the next few years. Nat has a ton of experience with software and the open source software community, having co-founded Xamarin and worked on numerous open source projects over the years, and is the perfect person to help GitHub grow and continue to make life better for developers.As for me, I’ll be taking on a new role at Microsoft working closely with Nat and the team, and will share more details on that in the future.I’m extremely proud of what GitHub and our community have accomplished over the past decade, and I can’t wait to see what lies ahead. The future of software development is bright and I’m thrilled to be joining forces with Microsoft to help make it a reality.@defunktCEO &amp; Co-Founder, GitHub机器翻译：GitHub的光明未来 2018年6月4日 德芬克特我很高兴地宣布，微软正在收购GitHub，并预计该协议将在年底前完成。虽然还需要几个月才能完成，但我们希望尽快分享这个消息。当GitHub十年前首次推出时，我从未想到这个标题。Git是一个功能强大但利基的工具，云只是天空中的东西，而微软是一个非常不同的公司。开源和商业，当时人们说，混合以及石油和水。我们不同意。作为开发人员，我们知道这是一种虚假的二分法 - 我们长期以来一直在商业环境中成功地使用开源软件。我们真正需要的是与其他人合作的更简单的方式，无论代码是公开的，私人的还是其他内容。我们希望使用Git来实现，我们希望世界上的任何人都能加入进来，如果它是开源的，我们不希望它花费一分钱。所以我们创建了GitHub。当然，事情是不同的。Git是最受欢迎的版本控制系统，云计算主要是计算机，微软是全球最活跃的GitHub组织。他们的VS Code项目由数百万开发人员完全支持，完全开放源代码，并使用Gi​​tHub的Electron平台构建。除此之外，今天的主要企业经常接受开源。世界已经意识到开发人员的真正重要性和重要性。而且，人们现在拥有智能手机。然而，没有改变的是我们对开发者的关注。从一开始，我们一直着迷于为使用它的人们创造一种产品。我们希望让开发人员提高工作效率，并希望更多人成为开发人员。从“代码到云和代码到边缘”，GitHub的使命是帮助每个开发人员（无论经验水平如何）有效地学习，编写代码并提供软件。因此，当我们展望未来十年的软件开发及其后，我们知道这都是关于开发人员。正如我们在过去几年中通过合作从Git LFS到Electron的项目一样了解了微软的团队，我们了解到他们同意。他们在开源领域的工作激励了我们，Minecraft和LinkedIn收购的成功向我们表明他们认真对待拓展新业务的认真态度，Azure的发展已经证明他们是一个创新的开发平台。但更重要的是，他们对未来的展望与我们自己的展望非常契合。我们都认为GitHub需要为所有开发人员保持一个开放的平台。无论您的语言，堆栈，平台，云或许可证如何，GitHub都将继续成为您的家 - 软件创建，协作和发现的最佳场所。我们都相信软件开发需要变得更容易，更易于访问，更智能，更开放，因此更多的人可以成为开发人员，现有开发人员可以花更多时间专注于他们试图解决的独特问题。我们都看到了开发人员日益增长的需求以及软件在我们生活的各个方面越来越重要。最重要的是，我们都相信我们可以一起做更多的事情，而不是单独做。毕竟，合作是我们所做事情的核心。作为这一变化的一部分，Nat Friedman将担任GitHub CEO的角色。我们一直在寻找新的首席执行官一段时间，并且在微软和纳特都找到了我们认为将在未来几年内加强和发展GitHub社区和公司的合作伙伴。Nat在软件和开源软件社区拥有丰富的经验，与他共同创立了Xamarin，并且多年来一直致力于开发众多开源项目，并且是帮助GitHub成长并继续为开发人员带来更好生活的完美人选。对我来说，我将在微软与Nat和团队紧密合作中担任新的角色，并将在未来分享更多细节。我对GitHub和我们的社区在过去十年中取得的成就感到非常自豪，我迫不及待地想要看看未来会发生什么。软件开发的未来是光明的，我很高兴能够与微软联手帮助实现这一目标。@defunkt首席执行官兼联合创始人，GitHub微软文章：Microsoft + GitHub = Empowering DevelopersJun 4, 2018 | Satya Nadella - Chief Executive Officer, MicrosoftToday, we announced an agreement to acquire GitHub, the world’s leading software development platform. I want to share what this acquisition will mean for our industry and for developers.The era of the intelligent cloud and intelligent edge is upon us. Computing is becoming embedded in the world, with every part of our daily life and work and every aspect of our society and economy being transformed by digital technology.Developers are the builders of this new era, writing the world’s code. And GitHub is their home.As every industry – from precision medicine to precision agriculture, from personalized education to personalized banking – is being impacted by technology, the developer community will only grow in numbers and importance. Developer workflows will drive and influence business processes and functions across the organization – from marketing, sales and service, to IT and HR. And value creation and growth across every industry will increasingly be determined by the choices developers make.In short, developers will be at the center of solving the world’s most pressing challenges. However, the real power comes when every developer can create together, collaborate, share code and build on each other’s work. In all walks of life, we see the power of communities, and this is true for software development and developers.That is why we are so excited about today’s announcement. More than 28 million developers already collaborate on GitHub, and it is home to more than 85 million code repositories used by people in nearly every country. From the largest corporations to the smallest startups, GitHub is the destination for developers to learn, share and work together to create software. It’s a destination for Microsoft too. We are the most active organization on GitHub, with more than 2 million “commits,” or updates, made to projects.Microsoft has been a developer-focused company from the very first product we created to the platforms and tools we offer today. Building technology so that others can build technology is core to our mission to empower every person and every organization on the planet to achieve more.Chris Wanstrath (left), Github CEO and co-founder; Nat Friedman, Microsoft corporate vice president, Developer Services; Satya Nadella, Microsoft CEO; and Amy Hood, Microsoft Chief Financial Officer.Microsoft is also committed to empowering communities, from the world’s professionals to IT professionals to gamers. We believe in the power of communities to achieve much more than what their members can do on their own. It’s our ability to work together that helps our dreams become reality, and we are dedicated to cultivating and growing communities to do just that.And Microsoft is all-in on open source. We have been on a journey with open source, and today we are active in the open source ecosystem, we contribute to open source projects, and some of our most vibrant developer tools and frameworks are open source. When it comes to our commitment to open source, judge us by the actions we have taken in the recent past, our actions today, and in the future.Given all of this, together with GitHub, we see three clear opportunities ahead.First, we will empower developers at every stage of the development lifecycle – from ideation to collaboration to deployment to the cloud. Going forward, GitHub will remain an open platform, which any developer can plug into and extend. Developers will continue to be able to use the programming languages, tools and operating systems of their choice for their projects – and will still be able to deploy their code on any cloud and any device.Second, we will accelerate enterprise developers’ use of GitHub, with our direct sales and partner channels and access to Microsoft’s global cloud infrastructure and services.Finally, we will bring Microsoft’s developer tools and services to new audiences.Most importantly, we recognize the responsibility we take on with this agreement. We are committed to being stewards of the GitHub community, which will retain its developer-first ethos, operate independently and remain an open platform. We will always listen to developer feedback and invest in both fundamentals and new capabilities.Once the acquisition closes later this year, GitHub will be led by CEO Nat Friedman, an open source veteran and founder of Xamarin, who will continue to report to Microsoft Cloud + AI Group Executive Vice President Scott Guthrie; GitHub CEO and Co-Founder Chris Wanstrath will be a technical fellow at Microsoft, also reporting to Scott. You can see how Chris, Nat and I envision the opportunity ahead in this public presentation.Together we will continue to advance GitHub as a platform loved by developers and trusted by organizations.Tags: Chris Wanstrath, developers, GitHub, Nat Friedman, Satya Nadella机器翻译：Microsoft + GitHub =授权开发人员2018年6月4日| Satya Nadella - 微软首席执行官今天，我们宣布了收购世界领先的软件开发平台GitHub的协议。我想分享这次收购对我们的行业和开发者意味着什么。智慧云和智能优势的时代即将到来。计算正在变得嵌入世界，我们的日常生活和工作的每一部分以及我们社会和经济的每个方面都被数字技术所改变。开发人员是这个新时代的创建者，编写世界代码。而GitHub是他们的家。随着每一个行业 - 从精准医学到精准农业，从个性化教育到个性化银行 - 都受到技术的影响，开发者社区只会在数量和重要性方面不断增长。开发人员工作流程将推动并影响整个组织的业务流程和功能 - 从营销，销售和服务到IT和HR。每个行业的价值创造和增长将越来越取决于开发者的选择。总之，开发人员将成为解决全球最紧迫挑战的中心。但是，每个开发人员都可以共同创建，协作，共享代码并构建彼此的工作，从而获得真正的力量。在各行各业中，我们都看到了社区的力量，这对于软件开发人员和开发人员来说也是如此。这就是为什么我们对今天的宣布如此激动。超过2800万的开发者已经在GitHub上进行合作，并且它拥有几乎每个国家的人们使用的超过8500万个代码库。从最大的公司到最小的初创公司，GitHub是开发人员学习，共享和共同创建软件的目的地。它也是微软的目的地。我们是GitHub上最活跃的组织，对项目提供超过200万次“提交”或更新。从我们创建的第一款产品到我们今天提供的平台和工具，微软一直是一家以开发人员为中心的公司。构建技术以便其他人可以构建技术是我们赋予地球上每个人和每个组织实现更多目标的使命的核心。Github首席执行官兼联合创始人Chris Wanstrath（左）微软公司开发服务副总裁Nat Friedman; 微软首席执行官Satya Nadella; 和微软首席财务官Amy Hood。微软还致力于为全球专业人士，IT专业人员和玩家提供强大的社区支持。我们相信社区的力量远远超过其成员可以独立完成的事情。这是我们共同努力的能力，有助于我们的梦想成为现实，我们致力于培养和发展社区以做到这一点。而且微软全力以赴开源。我们一直在开源的旅程中，今天我们活跃在开源生态系统中，我们为开源项目做出贡献，我们的一些最具活力的开发人员工具和框架也是开源的。当谈到我们对开源的承诺时，通过我们近期采取的行动，我们今天和未来的行动来评判我们。鉴于所有这些，与GitHub一起，我们看到了三个明显的机会。首先，我们将授权开发人员在开发生命周期的每个阶段 - 从构思到协作到部署到云。展望未来，GitHub将仍然是一个开放平台，任何开发人员都可以插入和扩展。开发人员将继续为他们的项目使用他们选择的编程语言，工具和操作系统 - 并且仍然能够在任何云和任何设备上部署他们的代码。其次，我们将加快企业开发人员使用GitHub，与我们的直销和合作伙伴渠道以及微软全球云基础架构和服务的接入。最后，我们将把微软的开发者工具和服务带给新的受众。最重要的是，我们承认我们对此协议承担的责任。我们致力于成为GitHub社区的管理者，GitHub社区将保留其开发者优先的风格，独立运营并保持开放平台。我们会一直聆听开发者的反馈意见，并投资基础和新功能。今年晚些时候收购完成后，GitHub将由首席执行官纳特弗里德曼领导，后者是一位开源的资深人士和Xamarin的创始人，他将继续向微软云+ AI集团执行副总裁Scott Guthrie汇报; GitHub首席执行官兼联合创始人Chris Wanstrath将成为微软的技术人员，并向Scott报告。你可以看到克里斯，纳特和我在这次公开演讲中如何展望未来的机会。我们将一起继续推动GitHub成为开发人员喜爱的平台，并被组织信任。标签：Chris Wanstrath，开发人员，GitHub，Nat Friedman，Satya Nadella","categories":[{"name":"不分类","slug":"不分类","permalink":"https://aclihui.com/categories/不分类/"}],"tags":[{"name":"不分类","slug":"不分类","permalink":"https://aclihui.com/tags/不分类/"}]},{"title":"母亲节快乐","slug":"2018-mother-day","date":"2018-05-11T16:00:00.000Z","updated":"2018-12-03T00:55:17.367Z","comments":true,"path":"2018-mother-day/","link":"","permalink":"https://aclihui.com/2018-mother-day/","excerpt":"","text":"母亲节快乐今天是2018年的母亲节，每个母亲都是相当伟大，包括各位的母亲都相当伟大，在这个每个母亲荣耀的时刻，晓辉在这里祝各位母亲，母亲节快乐，愿所有儿女与父母长时间相伴。","categories":[{"name":"节日","slug":"节日","permalink":"https://aclihui.com/categories/节日/"}],"tags":[{"name":"节日","slug":"节日","permalink":"https://aclihui.com/tags/节日/"}]},{"title":"Linux新建文件，切换目录，查看当前路径","slug":"linux-dir","date":"2018-04-27T16:14:00.000Z","updated":"2018-12-03T01:25:53.524Z","comments":true,"path":"linux-dir/","link":"","permalink":"https://aclihui.com/linux-dir/","excerpt":"","text":"Linux新建文件，切换目录，查看当前路径新建文件 touch file 切换目录 cd /etc/ 查看当前路径 pwd 快捷键TAB //补全命令，补全目录、补全命令参数Ctrl +C //做一个中断 按键 作用 Ctrl+d 键盘输入结束或退出终端 Ctrl+s 暂停当前程序，暂停后按下任意键恢复运行 Ctrl+z 将当前程序放到后台运行，恢复到前台为命令fg Ctrl+a 将光标移至输入行头，相当于Home键 Ctrl+e 将光标移至输入行末，相当于End键 Ctrl+k 删除从光标所在位置到行末 Alt+Backspace 向前删除一个单词 Shift+PgUp 将终端显示向上滚动 Shift+PgDn 将终端显示向下滚动&nbsp;","categories":[{"name":"Linux","slug":"Linux","permalink":"https://aclihui.com/categories/Linux/"},{"name":"Command","slug":"Linux/Command","permalink":"https://aclihui.com/categories/Linux/Command/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://aclihui.com/tags/Linux/"},{"name":"Command","slug":"Command","permalink":"https://aclihui.com/tags/Command/"}]},{"title":"Linux中who的用法","slug":"linux-who-use","date":"2018-04-26T16:14:00.000Z","updated":"2018-12-02T15:05:07.066Z","comments":true,"path":"linux-who-use/","link":"","permalink":"https://aclihui.com/linux-who-use/","excerpt":"","text":"linux 中的who的用法who的使用方法非常多，比较喜欢Linux中的who的用法 下面是Linux中的who 的使用的方法 经典的 参数说明-a打印能打印的全部-d打印死掉的进程-m同am i,mom likes-q打印当前登录用户数及用户名-u打印当前登录用户登录信息-r打印运行等级","categories":[],"tags":[]},{"title":"为什么我要写博客？","slug":"why-i-open-blog","date":"2018-01-25T16:00:00.000Z","updated":"2018-12-02T08:26:54.232Z","comments":true,"path":"why-i-open-blog/","link":"","permalink":"https://aclihui.com/why-i-open-blog/","excerpt":"","text":"思考博客，这是个上个世纪的名词了，为什么我要写博客？看过许多相关的知名的博客，有与SEO相关的卢松松博客,有相关于CSS知识的BeiYuu博客，还有一个关于软件历史的软件那些事儿每个博客都有自己的专题，而我一个97后又会写出什么呢？在BeiYuu看到Steve Losh的博客介绍真的很棒。I’m a programmer, photographer, dancer &amp; bassist from Rochester, New York.”是啊，这和我想要的生活多么相似。I’m a programmer, photographer, piano music lover &amp;sport lover from China.”本人很喜欢编程，摄影，听钢琴曲，运动，看到那篇博客自己恍然大悟，于是想写一个自己的博客，于是思考成形了。副标题来源于开源实验室，这句话在我看到第一眼的时候就觉得很正确，于是副标题成形。 折腾的路程为了博客着实折腾了很久，在这期间开通了 简书 博客，csdn博客（早就忘掉地址了），后来折腾GitHub pages ,做了基于hexo的网站，但心中满是不理想，想把博客做的内容为主，不想在一边写博客一边翻代码，在试了很多博客系统（wordpress,typecho,emblog..)后选择wordpress为建站模板，这个网站就起步了。 其他注释此篇文章首发在我的第一的备案的域名中，但具体发布的时间也已经模糊不清了，当下找到的最近的时间点是在2018-1-26的时间发布的文章，不出意外的话就应该是这个时间","categories":[],"tags":[]}]}