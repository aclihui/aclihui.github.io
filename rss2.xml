<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HUI BLOG</title>
    <link>https://aclihui.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Tue, 28 May 2019 10:46:14 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>chrome可视化</title>
      <link>https://aclihui.com/chrome-tip/</link>
      <guid>https://aclihui.com/chrome-tip/</guid>
      <pubDate>Thu, 02 May 2019 13:51:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;document.body.contentEditable=true&lt;br&gt;一键使得页面可编辑 在线WEB site IDE&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p>document.body.contentEditable=true<br>一键使得页面可编辑 在线WEB site IDE</p>]]></content:encoded>
      
      <comments>https://aclihui.com/chrome-tip/#disqus_thread</comments>
    </item>
    
    <item>
      <title>有时候，我们发现我们想找近路，却走了最远的路。</title>
      <link>https://aclihui.com/think-2019-4-13/</link>
      <guid>https://aclihui.com/think-2019-4-13/</guid>
      <pubDate>Sat, 13 Apr 2019 13:04:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;有时候，我们发现我们想找近路，却走了最远的路。—— 尝试了无数次 非官方的中文文档（CSDN中的大佬）没有成功，却自己看tensorflow的官方文档成功了。&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p>有时候，我们发现我们想找近路，却走了最远的路。—— 尝试了无数次 非官方的中文文档（CSDN中的大佬）没有成功，却自己看tensorflow的官方文档成功了。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/think-2019-4-13/#disqus_thread</comments>
    </item>
    
    <item>
      <title>人脸识别机器学习 代码分析</title>
      <link>https://aclihui.com/ml-face-svm/</link>
      <guid>https://aclihui.com/ml-face-svm/</guid>
      <pubDate>Sun, 31 Mar 2019 09:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
        
      
      </description>
      
      <content:encoded><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on Wed Mar 27 11:01:11 2019</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: LIHUI</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> fetch_lfw_people</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> confusion_matrix</span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</span><br><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC</span><br><span class="line">print(__doc__)</span><br><span class="line"><span class="comment"># Display progress logs on stdout</span></span><br><span class="line"><span class="comment"># 在标准输出上展示 下载的进度</span></span><br><span class="line">logging.basicConfig(level=logging.INFO, format=<span class="string">'%(asctime)s %(message)s'</span>)</span><br><span class="line"><span class="comment"># ###################################################################</span></span><br><span class="line"><span class="comment">##########</span></span><br><span class="line"><span class="comment"># Download the data, if not already on disk and load it as numpy arrays</span></span><br><span class="line"><span class="comment"># 如果没有在磁盘上就下载数据集  转载数据集 按照numpy数组的形式</span></span><br><span class="line">lfw_people = fetch_lfw_people(min_faces_per_person=<span class="number">70</span>, resize=<span class="number">0.4</span>)</span><br><span class="line"><span class="comment"># introspect the images arrays to find the shapes (for plotting)</span></span><br><span class="line"><span class="comment"># 内省图像数组以找到形状（用于绘图）</span></span><br><span class="line">n_samples, h, w = lfw_people.images.shape</span><br><span class="line"><span class="comment"># for machine learning we use the 2 data directly (as relative pixel</span></span><br><span class="line"><span class="comment"># positions info is ignored by this model)</span></span><br><span class="line"><span class="comment"># 对于机器学习，我们直接使用2个数据（因为此模型忽略了相对像素位置信息）</span></span><br><span class="line">X = lfw_people.data</span><br><span class="line">n_features = X.shape[<span class="number">1</span>]</span><br><span class="line"><span class="comment"># the label to predict is the id of the person</span></span><br><span class="line"><span class="comment"># 定义预测模型的人的iD的标签</span></span><br><span class="line">y = lfw_people.target</span><br><span class="line">target_names = lfw_people.target_names</span><br><span class="line">n_classes = target_names.shape[<span class="number">0</span>]</span><br><span class="line">print(<span class="string">"Total dataset size:"</span>)</span><br><span class="line">print(<span class="string">"n_samples: %d"</span> % n_samples)</span><br><span class="line">print(<span class="string">"n_features: %d"</span> % n_features)</span><br><span class="line">print(<span class="string">"n_classes: %d"</span> % n_classes)</span><br><span class="line"><span class="comment"># 输出所有下载的信息</span></span><br><span class="line"><span class="comment"># ###################################################################</span></span><br><span class="line"><span class="comment">##########</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Split into a training set and a test set using a stratified k fold</span></span><br><span class="line"><span class="comment"># 使用分层k折叠分成训练集和测试集</span></span><br><span class="line"><span class="comment"># split into a training and testing set</span></span><br><span class="line"><span class="comment"># 分成训练和测试集</span></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(</span><br><span class="line">X, y, test_size=<span class="number">0.25</span>, random_state=<span class="number">42</span>)</span><br><span class="line"><span class="comment"># ###################################################################</span></span><br><span class="line"><span class="comment">##########</span></span><br><span class="line"><span class="comment"># Compute a PCA (eigenfaces) on the face dataset (treated as unlabeled</span></span><br><span class="line"><span class="comment"># dataset): unsupervised feature extraction / dimensionality reduction</span></span><br><span class="line"><span class="comment"># 计算面部数据集上的PCA（特征脸）（视为未标记的 数据集）：无监督的特征提取/降维</span></span><br><span class="line">n_components = <span class="number">150</span></span><br><span class="line">print(<span class="string">"Extracting the top %d eigenfaces from %d faces"</span></span><br><span class="line">% (n_components, X_train.shape[<span class="number">0</span>]))</span><br><span class="line">t0 = time()</span><br><span class="line">pca = PCA(n_components=n_components, svd_solver=<span class="string">'randomized'</span>,</span><br><span class="line">whiten=<span class="keyword">True</span>).fit(X_train)</span><br><span class="line">print(<span class="string">"done in %0.3fs"</span> % (time() - t0))</span><br><span class="line">eigenfaces = pca.components_.reshape((n_components, h, w))</span><br><span class="line">print(<span class="string">"Projecting the input data on the eigenfaces orthonormal basis"</span>)</span><br><span class="line">t0 = time()</span><br><span class="line">X_train_pca = pca.transform(X_train)</span><br><span class="line">X_test_pca = pca.transform(X_test)</span><br><span class="line">print(<span class="string">"done in %0.3fs"</span> % (time() - t0))</span><br><span class="line"><span class="comment"># ###################################################################</span></span><br><span class="line"><span class="comment">##########</span></span><br><span class="line"><span class="comment"># Train a SVM classification model</span></span><br><span class="line"><span class="comment"># 训练 一个 svm 分类模型</span></span><br><span class="line">print(<span class="string">"Fitting the classifier to the training set"</span>)</span><br><span class="line">t0 = time()</span><br><span class="line">param_grid = &#123;<span class="string">'C'</span>: [<span class="number">1e3</span>, <span class="number">5e3</span>, <span class="number">1e4</span>, <span class="number">5e4</span>, <span class="number">1e5</span>],</span><br><span class="line"><span class="string">'gamma'</span>: [<span class="number">0.0001</span>, <span class="number">0.0005</span>, <span class="number">0.001</span>, <span class="number">0.005</span>, <span class="number">0.01</span>, <span class="number">0.1</span>], &#125;</span><br><span class="line">clf = GridSearchCV(SVC(kernel=<span class="string">'rbf'</span>, class_weight=<span class="string">'balanced'</span>),</span><br><span class="line">param_grid, cv=<span class="number">5</span>)</span><br><span class="line">clf = clf.fit(X_train_pca, y_train)</span><br><span class="line">print(<span class="string">"done in %0.3fs"</span> % (time() - t0))</span><br><span class="line">print(<span class="string">"Best estimator found by grid search:"</span>)</span><br><span class="line">print(clf.best_estimator_)</span><br><span class="line"><span class="comment"># ###################################################################</span></span><br><span class="line"><span class="comment">##########</span></span><br><span class="line"><span class="comment"># Quantitative evaluation of the model quality on the test set</span></span><br><span class="line"><span class="comment"># 定量评估测试集上的模型质量</span></span><br><span class="line">print(<span class="string">"Predicting people's names on the test set"</span>)</span><br><span class="line">t0 = time()</span><br><span class="line">y_pred = clf.predict(X_test_pca)</span><br><span class="line">print(<span class="string">"done in %0.3fs"</span> % (time() - t0))</span><br><span class="line">print(classification_report(y_test, y_pred, target_names=target_names))</span><br><span class="line">print(confusion_matrix(y_test, y_pred, labels=range(n_classes)))</span><br><span class="line"><span class="comment"># ###################################################################</span></span><br><span class="line"><span class="comment">##########</span></span><br><span class="line"><span class="comment"># Qualitative evaluation of the predictions using matplotlib</span></span><br><span class="line"><span class="comment"># 使用matplotlib对预测进行定性评估</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_gallery</span><span class="params">(images, titles, h, w, n_row=<span class="number">3</span>, n_col=<span class="number">4</span>)</span>:</span></span><br><span class="line">  <span class="comment">#"""Helper function to plot a gallery of portraits"""</span></span><br><span class="line">  plt.figure(figsize=(<span class="number">1.8</span> * n_col, <span class="number">2.4</span> * n_row))</span><br><span class="line">  plt.subplots_adjust(bottom=<span class="number">0</span>, left=<span class="number">.01</span>, right=<span class="number">.99</span>, top=<span class="number">.90</span>, hspace =<span class="number">.35</span>)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> range(n_row * n_col):</span><br><span class="line">    plt.subplot(n_row, n_col, i + <span class="number">1</span>)</span><br><span class="line">    plt.imshow(images[i].reshape((h, w)), cmap=plt.cm.gray)</span><br><span class="line">    plt.title(titles[i], size=<span class="number">12</span>)</span><br><span class="line">    plt.xticks(())</span><br><span class="line">    plt.yticks(())</span><br><span class="line"><span class="comment"># plot the result of the prediction on a portion of the test set</span></span><br><span class="line"><span class="comment"># 绘制测试集的一部分上的预测结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">title</span><span class="params">(y_pred, y_test, target_names, i)</span>:</span></span><br><span class="line">  pred_name = target_names[y_pred[i]].rsplit(<span class="string">' '</span>, <span class="number">1</span>)[<span class="number">-1</span>]</span><br><span class="line">  true_name = target_names[y_test[i]].rsplit(<span class="string">' '</span>, <span class="number">1</span>)[<span class="number">-1</span>]</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'predicted: %s\ntrue: %s'</span> % (pred_name, true_name)</span><br><span class="line">prediction_titles = [title(y_pred, y_test, target_names, i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(y_pred.shape[<span class="number">0</span>])]</span><br><span class="line">plot_gallery(X_test, prediction_titles, h, w)</span><br><span class="line"><span class="comment"># plot the gallery of the most significative eigenfaces</span></span><br><span class="line"><span class="comment"># 绘制最有意义的特征脸的画廊</span></span><br><span class="line">eigenface_titles = [<span class="string">"eigenface %d"</span> % i <span class="keyword">for</span> i <span class="keyword">in</span> range(eigenfaces.shape[<span class="number">0</span>])]</span><br><span class="line">plot_gallery(eigenfaces, eigenface_titles, h, w)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/ml-face-svm/#disqus_thread</comments>
    </item>
    
    <item>
      <title>scikit问题解决</title>
      <link>https://aclihui.com/scikit-learn-problem/</link>
      <guid>https://aclihui.com/scikit-learn-problem/</guid>
      <pubDate>Fri, 29 Mar 2019 00:14:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;如果出现 ValueError: min_faces_per_person=70 is too restrictive 问题&lt;br&gt;解决方案： 删掉~/scikit_learn_data/lfw_home&lt;br&gt;目录下的&lt;strong&gt;dir lfw_funneled和lf
        
      
      </description>
      
      <content:encoded><![CDATA[<p>如果出现 ValueError: min_faces_per_person=70 is too restrictive 问题<br>解决方案： 删掉~/scikit_learn_data/lfw_home<br>目录下的<strong>dir lfw_funneled和lfw-funneled.tgz文件即可解决问题</strong></p>]]></content:encoded>
      
      <comments>https://aclihui.com/scikit-learn-problem/#disqus_thread</comments>
    </item>
    
    <item>
      <title>设计模式-抽象工厂模式</title>
      <link>https://aclihui.com/design-pattern-af/</link>
      <guid>https://aclihui.com/design-pattern-af/</guid>
      <pubDate>Fri, 22 Mar 2019 03:24:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;这一篇来实现抽象工厂模式&lt;/p&gt;
&lt;h1 id=&quot;首先还是按照菜鸟教程上的做&quot;&gt;&lt;a href=&quot;#首先还是按照菜鸟教程上的做&quot; class=&quot;headerlink&quot; title=&quot;首先还是按照菜鸟教程上的做&quot;&gt;&lt;/a&gt;首先还是按照菜鸟教程上的做&lt;/h1&gt;&lt;p&gt;设计图如下：
        
      
      </description>
      
      <content:encoded><![CDATA[<p>这一篇来实现抽象工厂模式</p><h1 id="首先还是按照菜鸟教程上的做"><a href="#首先还是按照菜鸟教程上的做" class="headerlink" title="首先还是按照菜鸟教程上的做"></a>首先还是按照菜鸟教程上的做</h1><p>设计图如下：<br><img src="image/504e7556a6dfa8da11cd081a75358bf5.png" alt="">  </p><h2 id="首先实现shape接口"><a href="#首先实现shape接口" class="headerlink" title="首先实现shape接口"></a>首先实现shape接口</h2><p>这个比较简单<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 抽象工厂;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="其下面的形状实现接口"><a href="#其下面的形状实现接口" class="headerlink" title="其下面的形状实现接口"></a>其下面的形状实现接口</h2><p>因为前面的工厂模式有相关的代码，此处不再写代码  </p><h2 id="创建color接口类和实现的类"><a href="#创建color接口类和实现的类" class="headerlink" title="创建color接口类和实现的类"></a>创建color接口类和实现的类</h2><p>这个类似上面的，比较简单。</p><h2 id="为-Color-和-Shape-对象创建抽象类来获取工厂。"><a href="#为-Color-和-Shape-对象创建抽象类来获取工厂。" class="headerlink" title="为 Color 和 Shape 对象创建抽象类来获取工厂。"></a>为 Color 和 Shape 对象创建抽象类来获取工厂。</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 抽象工厂;</span><br><span class="line"><span class="comment">//为 Color 和 Shape 对象创建抽象类来获取工厂。</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractFactory</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> Color <span class="title">getColor</span><span class="params">(String color)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> Shape <span class="title">getShape</span><span class="params">(String shape)</span> </span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时候还在上次设计的阶段。</p><h2 id="创建扩展了-AbstractFactory-的工厂类，基于给定的信息生成实体类的对象。即继承抽象工厂类"><a href="#创建扩展了-AbstractFactory-的工厂类，基于给定的信息生成实体类的对象。即继承抽象工厂类" class="headerlink" title="创建扩展了 AbstractFactory 的工厂类，基于给定的信息生成实体类的对象。即继承抽象工厂类"></a>创建扩展了 AbstractFactory 的工厂类，基于给定的信息生成实体类的对象。即继承抽象工厂类</h2><p>ShapeFactory.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 抽象工厂;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShapeFactory</span> <span class="keyword">extends</span> <span class="title">AbstractFactory</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Shape <span class="title">getShape</span><span class="params">(String shapeType)</span></span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(shapeType == <span class="keyword">null</span>)&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">      &#125;        </span><br><span class="line">      <span class="keyword">if</span>(shapeType.equalsIgnoreCase(<span class="string">"CIRCLE"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> Circle();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(shapeType.equalsIgnoreCase(<span class="string">"RECTANGLE"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> Rectangle();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(shapeType.equalsIgnoreCase(<span class="string">"SQUARE"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> Square();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Color <span class="title">getColor</span><span class="params">(String color)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>ColorFactory.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 抽象工厂;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColorFactory</span> <span class="keyword">extends</span> <span class="title">AbstractFactory</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Shape <span class="title">getShape</span><span class="params">(String shapeType)</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> Color <span class="title">getColor</span><span class="params">(String color)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(color == <span class="keyword">null</span>)&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">      &#125;        </span><br><span class="line">      <span class="keyword">if</span>(color.equalsIgnoreCase(<span class="string">"RED"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> Red();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(color.equalsIgnoreCase(<span class="string">"GREEN"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> Green();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(color.equalsIgnoreCase(<span class="string">"BLUE"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> Blue();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="创建一个工厂创造器-生成器类，通过传递形状或颜色信息来获取工厂。"><a href="#创建一个工厂创造器-生成器类，通过传递形状或颜色信息来获取工厂。" class="headerlink" title="创建一个工厂创造器/生成器类，通过传递形状或颜色信息来获取工厂。"></a>创建一个工厂创造器/生成器类，通过传递形状或颜色信息来获取工厂。</h1><p>这个项目的主要目的是获取工厂<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 抽象工厂;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryProducer</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AbstractFactory <span class="title">getFactory</span><span class="params">(String choice)</span></span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(choice.equalsIgnoreCase(<span class="string">"SHAPE"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> ShapeFactory();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span>(choice.equalsIgnoreCase(<span class="string">"COLOR"</span>))&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> ColorFactory();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="设计抽象工厂模式来实现demo"><a href="#设计抽象工厂模式来实现demo" class="headerlink" title="设计抽象工厂模式来实现demo"></a>设计抽象工厂模式来实现demo</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractFactoryPatternDemo</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取形状工厂</span></span><br><span class="line">      AbstractFactory shapeFactory = FactoryProducer.getFactory(<span class="string">"SHAPE"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取形状为 Circle 的对象</span></span><br><span class="line">      Shape shape1 = shapeFactory.getShape(<span class="string">"CIRCLE"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Circle 的 draw 方法</span></span><br><span class="line">      shape1.draw();</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取形状为 Rectangle 的对象</span></span><br><span class="line">      Shape shape2 = shapeFactory.getShape(<span class="string">"RECTANGLE"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Rectangle 的 draw 方法</span></span><br><span class="line">      shape2.draw();</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//获取形状为 Square 的对象</span></span><br><span class="line">      Shape shape3 = shapeFactory.getShape(<span class="string">"SQUARE"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Square 的 draw 方法</span></span><br><span class="line">      shape3.draw();</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取颜色工厂</span></span><br><span class="line">      AbstractFactory colorFactory = FactoryProducer.getFactory(<span class="string">"COLOR"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取颜色为 Red 的对象</span></span><br><span class="line">      Color color1 = colorFactory.getColor(<span class="string">"RED"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Red 的 fill 方法</span></span><br><span class="line">      color1.fill();</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取颜色为 Green 的对象</span></span><br><span class="line">      Color color2 = colorFactory.getColor(<span class="string">"Green"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Green 的 fill 方法</span></span><br><span class="line">      color2.fill();</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取颜色为 Blue 的对象</span></span><br><span class="line">      Color color3 = colorFactory.getColor(<span class="string">"BLUE"</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Blue 的 fill 方法</span></span><br><span class="line">      color3.fill();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个实现起来比较简单，这种抽象工厂模式相对于其前面的工厂模式，增加了一个总的抽象工厂来供实际的工厂来继承，再在抽象工厂的上面添加一个工厂参数的传输装置来选择工厂，这是和工厂模式的区别。</p><h1 id="下面开始进行作业的练习"><a href="#下面开始进行作业的练习" class="headerlink" title="下面开始进行作业的练习"></a>下面开始进行作业的练习</h1><p>首先上设计图<br><img src="image/8b0035d1bfb7f917a8ce710943768ae1.png" alt=""><br>设计图显示 首先界面GUI负责提供参数。下面的budingFactory 是所谓的抽象工厂类 下面的是中等的building Factor 和super工厂是其中继承抽象工厂类的地方。下面的的其他的东西是延伸出来的事物。<br>下面是代码的具体实现</p><p>## </p>]]></content:encoded>
      
      <comments>https://aclihui.com/design-pattern-af/#disqus_thread</comments>
    </item>
    
    <item>
      <title>设计模式-工厂模式</title>
      <link>https://aclihui.com/design-patterns-f/</link>
      <guid>https://aclihui.com/design-patterns-f/</guid>
      <pubDate>Fri, 22 Mar 2019 01:06:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;设计模式实验设计&quot;&gt;&lt;a href=&quot;#设计模式实验设计&quot; class=&quot;headerlink&quot; title=&quot;设计模式实验设计&quot;&gt;&lt;/a&gt;设计模式实验设计&lt;/h1&gt;&lt;p&gt;这一篇文章主要实现设计模式的工厂模式&lt;br&gt;&lt;img src=&quot;https://blog.a
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="设计模式实验设计"><a href="#设计模式实验设计" class="headerlink" title="设计模式实验设计"></a>设计模式实验设计</h1><p>这一篇文章主要实现设计模式的工厂模式<br><img src="https://blog.aclihui.com/wp-content/uploads/2019/03/49feeaa77b2baa2d01114f81f06dcd6f.png" alt=""><br>首先实现菜鸟教程上面的demo<br>这个问题比较简单  </p><h1 id="首先设计内部的Shape类-这个类是为其他类实现接口"><a href="#首先设计内部的Shape类-这个类是为其他类实现接口" class="headerlink" title="首先设计内部的Shape类 这个类是为其他类实现接口"></a>首先设计内部的Shape类 这个类是为其他类实现接口</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 工厂模式;</span><br><span class="line"><span class="comment">// 实现接口 方便下面的圆形 方形 长方形使用</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="然后是实现下面的圆形-方形和长方形的类-直接实现接口即可"><a href="#然后是实现下面的圆形-方形和长方形的类-直接实现接口即可" class="headerlink" title="然后是实现下面的圆形 方形和长方形的类 直接实现接口即可"></a>然后是实现下面的圆形 方形和长方形的类 直接实现接口即可</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 工厂模式;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">implements</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"Inside Circle::draw() method."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 工厂模式;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Square</span> <span class="keyword">implements</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"Inside Square::draw() method."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 工厂模式;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"Inside Rectangle::draw() method."</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="创建工厂类可以创建各个新的图形"><a href="#创建工厂类可以创建各个新的图形" class="headerlink" title="创建工厂类可以创建各个新的图形"></a>创建工厂类可以创建各个新的图形</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 工厂模式;</span><br><span class="line"><span class="comment">// this is the shape Factory </span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShapeFactory</span> </span>&#123;</span><br><span class="line"><span class="comment">//首先设置获取的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Shape <span class="title">getShape</span><span class="params">(String shapeType)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (shapeType==<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (shapeType==<span class="string">"CIRCLE"</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Circle();</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (shapeType==<span class="string">"RECTANGLE"</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Rectangle();</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(shapeType==<span class="string">"SQUARE"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Square();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="最后是实现相应的demo来调用"><a href="#最后是实现相应的demo来调用" class="headerlink" title="最后是实现相应的demo来调用"></a>最后是实现相应的demo来调用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 工厂模式;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryPatternDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ShapeFactory shapeFactory=<span class="keyword">new</span> ShapeFactory();</span><br><span class="line">Shape shape1=shapeFactory.getShape(<span class="string">"CIRCLE"</span>);</span><br><span class="line">shape1.draw();</span><br><span class="line">Shape  shape2=shapeFactory.getShape(<span class="string">"RECTANGLE"</span>);</span><br><span class="line">shape2.draw();</span><br><span class="line">Shape shape3 = shapeFactory.getShape(<span class="string">"SQUARE"</span>);</span><br><span class="line">shape3.draw();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="作业要求"><a href="#作业要求" class="headerlink" title="作业要求"></a>作业要求</h1><p>作业要求：The following class diagram represents a design in factory method pattern to query the features of different types of auto insurances. See the source code for the implementation of the following class diagram. </p><p>1)    First in the following design, in the class hierarchy named AutoInsurance, add a class LuxeryCarInsurance<br>2)    The class LuxeryCarInsurance has the same interface and methods as every class in this class hierarchy<br>3)    You write a word description of the new insurance<br>4)    Then you need to add a sub class in the class hierarchy PolicyProducer to create object of class LuxeryCarInsurance<br>5)    Finally you need to modify the client class FactoryMethodGUI to allow the newly added insurance policy Luxery Car Insurance to be displayed as other insurance policies.<br><img src="https://blog.aclihui.com/wp-content/uploads/2019/03/f6d3b56ec1b96768ca69cb4e49676a8e.png" alt=""></p><h1 id="作业答案"><a href="#作业答案" class="headerlink" title="作业答案"></a>作业答案</h1><p>1．    Describe your finished homework, including<br>i.    What classes have been added to the existing class hierarchy?<br>ii.    The relationship between the existing classes and the newly added classes.<br>iii.    What code has been added to what class?<br>etc.<br>我在LuxeryCarInsurance.java 中实现了autoInsurance 的接口 在LuxeryCarPolicy.java中实现了相应的接口</p><p>2．    Run the ClientGUI class and you choose “Body Injur Liability”, and then click on “show Info” button. List all the methods called in correct order here.</p><p>3．    Draw your new class diagram here</p><p>4．    After you add the new class LuxeryCarInsurance, what other classes have you changed? Does this design follow the open-closed principle? Why?</p><p>5．    (Testing) Typical input and output from running your program  </p><h1 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h1><p>这个题目挺简单的，这个题目属于基础题目，这个题目的做法是添加两个.java 文件  一个实现使用的政策接口来开启保险的文件，一个返回这个保险的描述。QAQ<br>添加代码如下<br>LuxeryCarInsurance.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LuxeryCarInsurance</span> <span class="keyword">implements</span> <span class="title">AutoInsurance</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String description;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   description = <span class="string">" LuxeryCarInsurance: \n\nBodily injury coverage pays for medical bills"</span> +</span><br><span class="line">                 <span class="string">" lost wages, rehabilitation, treatment and/or"</span> +</span><br><span class="line">                 <span class="string">" funeral costs for anyone injured or killed "</span> +</span><br><span class="line">                 <span class="string">" by your car. Such coverage will also pay for"</span> +</span><br><span class="line">                 <span class="string">" pain and suffering damages when a third "</span> +</span><br><span class="line">                 <span class="string">" party successfully sues. "</span>;</span><br><span class="line">   <span class="keyword">return</span> description;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个题目主要是实现其中的接口比较简单 返回getInfo ()即可<br>LuxeryCarPolicy.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LuxeryCarPolicy</span> <span class="keyword">implements</span> <span class="title">PolicyProducer</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> AutoInsurance <span class="title">getInsurObj</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> LuxeryCarInsurance();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个个软件也比较的简单， implements PolicyProducer 是主要的问题，这就比较的简单了。没什么难度。<br>下面是GUI界面的选择<br><img src="https://blog.aclihui.com/wp-content/uploads/2019/03/5aeccfa82f39442883878af35f66e7ec.png" alt=""><br><img src="https://blog.aclihui.com/wp-content/uploads/2019/03/4228cf8c9829cc7220d80c70584ec2d9.png" alt=""><br><img src="https://blog.aclihui.com/wp-content/uploads/2019/03/4a6029c521f0a53a74581e253458230e.png" alt=""><br>标红的是添加的部分 OK 结束</p>]]></content:encoded>
      
      <comments>https://aclihui.com/design-patterns-f/#disqus_thread</comments>
    </item>
    
    <item>
      <title>算法笔记集中区</title>
      <link>https://aclihui.com/algorithm-note-zone/</link>
      <guid>https://aclihui.com/algorithm-note-zone/</guid>
      <pubDate>Fri, 15 Mar 2019 13:38:00 GMT</pubDate>
      <description>
      
        
        
          &lt;ul&gt;
&lt;li&gt;hash对字符串操作不好操作啊   &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
        
      
      </description>
      
      <content:encoded><![CDATA[<ul><li>hash对字符串操作不好操作啊   </li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">11</span>;</span><br><span class="line"><span class="keyword">int</span> n,p[maxn],hashTable[maxn]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generateP</span><span class="params">(<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index==n+<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;p[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> x = <span class="number">1</span>; x &lt;=n; x++)<span class="comment">// 将1到n全部填入p[index]</span></span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">if</span>(hashTable[x]==<span class="literal">false</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p[index]=x;</span><br><span class="line">        hashTable[x]=<span class="literal">true</span>;<span class="comment">// 首先记录这个数据的数值</span></span><br><span class="line">        generateP(index+<span class="number">1</span>);<span class="comment">//从0开始的计算</span></span><br><span class="line">        hashTable[x]=<span class="literal">false</span>;<span class="comment">//向下的递归的条件</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n=<span class="number">3</span>;</span><br><span class="line">    generateP(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个问题就是递归条件如何使用是很大的问题。递归的两个条件：递归边界和递归式。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/algorithm-note-zone/#disqus_thread</comments>
    </item>
    
    <item>
      <title>文件重定向</title>
      <link>https://aclihui.com/file-reset-cpp/</link>
      <guid>https://aclihui.com/file-reset-cpp/</guid>
      <pubDate>Fri, 22 Feb 2019 05:04:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;使用window-解决文件重定向问题-，减少重复数据输入次数&quot;&gt;&lt;a href=&quot;#使用window-解决文件重定向问题-，减少重复数据输入次数&quot; class=&quot;headerlink&quot; title=&quot;使用window 解决文件重定向问题 ，减少重复数据输入次数&quot;&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="使用window-解决文件重定向问题-，减少重复数据输入次数"><a href="#使用window-解决文件重定向问题-，减少重复数据输入次数" class="headerlink" title="使用window 解决文件重定向问题 ，减少重复数据输入次数"></a>使用window 解决文件重定向问题 ，减少重复数据输入次数</h1><p>命令行 为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./addItems.exe &lt;infile &gt;outfile</span><br></pre></td></tr></table></figure></p><p>注意此处的&lt; &gt; 并非是对infile 的限制而是读入文件和写入文件<br>截图如下:<br><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/094c0597991600376a5e6f7f4a20e905.png" alt=""></p><h1 id="demo-程序"><a href="#demo-程序" class="headerlink" title="demo 程序"></a>demo 程序</h1><p>addItems.cpp<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"Sales_item.h"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//only to read the data from the cmd</span></span><br><span class="line">    Sales_item book;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;book;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;book&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Sales _item.h<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This file contains code from "C++ Primer, Fifth Edition", by Stanley B.</span></span><br><span class="line"><span class="comment"> * Lippman, Josee Lajoie, and Barbara E. Moo, and is covered under the</span></span><br><span class="line"><span class="comment"> * copyright and warranty notices given in that book:</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * "Copyright (c) 2013 by Objectwrite, Inc., Josee Lajoie, and Barbara E. Moo."</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * "The authors and publisher have taken care in the preparation of this book,</span></span><br><span class="line"><span class="comment"> * but make no expressed or implied warranty of any kind and assume no</span></span><br><span class="line"><span class="comment"> * responsibility for errors or omissions. No liability is assumed for</span></span><br><span class="line"><span class="comment"> * incidental or consequential damages in connection with or arising out of the</span></span><br><span class="line"><span class="comment"> * use of the information or programs contained herein."</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Permission is granted for this code to be used for educational purposes in</span></span><br><span class="line"><span class="comment"> * association with the book, given proper citation if and when posted or</span></span><br><span class="line"><span class="comment"> * reproduced.Any commercial use of this code requires the explicit written</span></span><br><span class="line"><span class="comment"> * permission of the publisher, Addison-Wesley Professional, a division of</span></span><br><span class="line"><span class="comment"> * Pearson Education, Inc. Send your request for permission, stating clearly</span></span><br><span class="line"><span class="comment"> * what code you would like to use, and in what specific way, to the following</span></span><br><span class="line"><span class="comment"> * address: </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *     Pearson Education, Inc.</span></span><br><span class="line"><span class="comment"> *     Rights and Permissions Department</span></span><br><span class="line"><span class="comment"> *     One Lake Street</span></span><br><span class="line"><span class="comment"> *     Upper Saddle River, NJ  07458</span></span><br><span class="line"><span class="comment"> *     Fax: (201) 236-3290</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">/* This file defines the Sales_item class used in chapter 1.</span></span><br><span class="line"><span class="comment"> * The code used in this file will be explained in</span></span><br><span class="line"><span class="comment"> * Chapter 7 (Classes) and Chapter 14 (Overloaded Operators)</span></span><br><span class="line"><span class="comment"> * Readers shouldn't try to understand the code in this file</span></span><br><span class="line"><span class="comment"> * until they have read those chapters.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> SALESITEM_H</span></span><br><span class="line"><span class="comment">// we're here only if SALESITEM_H has not yet been defined </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SALESITEM_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Definition of Sales_item class and related functions goes here</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sales_item</span> &#123;</span></span><br><span class="line"><span class="comment">// these declarations are explained section 7.2.1, p. 270 </span></span><br><span class="line"><span class="comment">// and in chapter 14, pages 557, 558, 561</span></span><br><span class="line"><span class="keyword">friend</span> <span class="built_in">std</span>::istream&amp; <span class="keyword">operator</span>&gt;&gt;(<span class="built_in">std</span>::istream&amp;, Sales_item&amp;);</span><br><span class="line"><span class="keyword">friend</span> <span class="built_in">std</span>::ostream&amp; <span class="keyword">operator</span>&lt;&lt;(<span class="built_in">std</span>::ostream&amp;, <span class="keyword">const</span> Sales_item&amp;);</span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> Sales_item&amp;, <span class="keyword">const</span> Sales_item&amp;);</span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">bool</span> </span><br><span class="line"><span class="keyword">operator</span>==(<span class="keyword">const</span> Sales_item&amp;, <span class="keyword">const</span> Sales_item&amp;);</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// constructors are explained in section 7.1.4, pages 262 - 265</span></span><br><span class="line">    <span class="comment">// default constructor needed to initialize members of built-in type</span></span><br><span class="line">    Sales_item() = <span class="keyword">default</span>;</span><br><span class="line">    Sales_item(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span> &amp;book): bookNo(book) &#123; &#125;</span><br><span class="line">    Sales_item(<span class="built_in">std</span>::istream &amp;is) &#123; is &gt;&gt; *<span class="keyword">this</span>; &#125;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">// operations on Sales_item objects</span></span><br><span class="line">    <span class="comment">// member binary operator: left-hand operand bound to implicit this pointer</span></span><br><span class="line">    Sales_item&amp; <span class="keyword">operator</span>+=(<span class="keyword">const</span> Sales_item&amp;);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// operations on Sales_item objects</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">isbn</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123; <span class="keyword">return</span> bookNo; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">avg_price</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line"><span class="comment">// private members as before</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> bookNo;      <span class="comment">// implicitly initialized to the empty string</span></span><br><span class="line">    <span class="keyword">unsigned</span> units_sold = <span class="number">0</span>; <span class="comment">// explicitly initialized</span></span><br><span class="line">    <span class="keyword">double</span> revenue = <span class="number">0.0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// used in chapter 10</span></span><br><span class="line"><span class="keyword">inline</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">compareIsbn</span><span class="params">(<span class="keyword">const</span> Sales_item &amp;lhs, <span class="keyword">const</span> Sales_item &amp;rhs)</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="keyword">return</span> lhs.isbn() == rhs.isbn(); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// nonmember binary operator: must declare a parameter for each operand</span></span><br><span class="line">Sales_item <span class="keyword">operator</span>+(<span class="keyword">const</span> Sales_item&amp;, <span class="keyword">const</span> Sales_item&amp;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> </span><br><span class="line"><span class="keyword">operator</span>==(<span class="keyword">const</span> Sales_item &amp;lhs, <span class="keyword">const</span> Sales_item &amp;rhs)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// must be made a friend of Sales_item</span></span><br><span class="line">    <span class="keyword">return</span> lhs.units_sold == rhs.units_sold &amp;&amp;</span><br><span class="line">           lhs.revenue == rhs.revenue &amp;&amp;</span><br><span class="line">           lhs.isbn() == rhs.isbn();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> </span><br><span class="line"><span class="keyword">operator</span>!=(<span class="keyword">const</span> Sales_item &amp;lhs, <span class="keyword">const</span> Sales_item &amp;rhs)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> !(lhs == rhs); <span class="comment">// != defined in terms of operator==</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// assumes that both objects refer to the same ISBN</span></span><br><span class="line">Sales_item&amp; Sales_item::<span class="keyword">operator</span>+=(<span class="keyword">const</span> Sales_item&amp; rhs) </span><br><span class="line">&#123;</span><br><span class="line">    units_sold += rhs.units_sold; </span><br><span class="line">    revenue += rhs.revenue; </span><br><span class="line">    <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// assumes that both objects refer to the same ISBN</span></span><br><span class="line">Sales_item </span><br><span class="line"><span class="keyword">operator</span>+(<span class="keyword">const</span> Sales_item&amp; lhs, <span class="keyword">const</span> Sales_item&amp; rhs) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="function">Sales_item <span class="title">ret</span><span class="params">(lhs)</span></span>;  <span class="comment">// copy (|lhs|) into a local object that we'll return</span></span><br><span class="line">    ret += rhs;           <span class="comment">// add in the contents of (|rhs|) </span></span><br><span class="line">    <span class="keyword">return</span> ret;           <span class="comment">// return (|ret|) by value</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::istream&amp; </span><br><span class="line"><span class="keyword">operator</span>&gt;&gt;(<span class="built_in">std</span>::istream&amp; in, Sales_item&amp; s)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">double</span> price;</span><br><span class="line">    in &gt;&gt; s.bookNo &gt;&gt; s.units_sold &gt;&gt; price;</span><br><span class="line">    <span class="comment">// check that the inputs succeeded</span></span><br><span class="line">    <span class="keyword">if</span> (in)</span><br><span class="line">        s.revenue = s.units_sold * price;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        s = Sales_item();  <span class="comment">// input failed: reset object to default state</span></span><br><span class="line">    <span class="keyword">return</span> in;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">std</span>::ostream&amp; </span><br><span class="line"><span class="keyword">operator</span>&lt;&lt;(<span class="built_in">std</span>::ostream&amp; out, <span class="keyword">const</span> Sales_item&amp; s)</span><br><span class="line">&#123;</span><br><span class="line">    out &lt;&lt; s.isbn() &lt;&lt; <span class="string">" "</span> &lt;&lt; s.units_sold &lt;&lt; <span class="string">" "</span></span><br><span class="line">        &lt;&lt; s.revenue &lt;&lt; <span class="string">" "</span> &lt;&lt; s.avg_price();</span><br><span class="line">    <span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> Sales_item::avg_price() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (units_sold) </span><br><span class="line">        <span class="keyword">return</span> revenue/units_sold; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>https://aclihui.com/file-reset-cpp/#disqus_thread</comments>
    </item>
    
    <item>
      <title>蓝桥杯-basic-5-查找整数</title>
      <link>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-basic-5-%E6%9F%A5%E6%89%BE%E6%95%B4%E6%95%B0/</link>
      <guid>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-basic-5-%E6%9F%A5%E6%89%BE%E6%95%B4%E6%95%B0/</guid>
      <pubDate>Wed, 13 Feb 2019 03:24:50 GMT</pubDate>
      <description>
      
        
        
          &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
        
      
      </description>
      
      <content:encoded><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> a[N];</span><br><span class="line">    <span class="keyword">int</span> flag;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;flag;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i]==flag) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这个题目比较简单，暴力解决。</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-basic-5-%E6%9F%A5%E6%89%BE%E6%95%B4%E6%95%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>basic-4-数列特征</title>
      <link>https://aclihui.com/basic-4-%E6%95%B0%E5%88%97%E7%89%B9%E5%BE%81/</link>
      <guid>https://aclihui.com/basic-4-%E6%95%B0%E5%88%97%E7%89%B9%E5%BE%81/</guid>
      <pubDate>Wed, 13 Feb 2019 02:47:45 GMT</pubDate>
      <description>
      
        
        
          &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
        
      
      </description>
      
      <content:encoded><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10000</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 给出n个数 找出最小值 最大值 和 </span></span><br><span class="line">    <span class="keyword">int</span> a[N];<span class="comment">// 开辟静态数组</span></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,max=<span class="number">-10000</span>,min=<span class="number">10000</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">        sum=sum+a[i];</span><br><span class="line">        <span class="keyword">if</span> (a[i]&gt;max) &#123;</span><br><span class="line">            max=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[i]&lt;min) &#123;</span><br><span class="line">            min=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;max&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;min&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>// 这个是有范围的赋值 如果没有数值的范围需要将第一个定位最大值和最小值。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/basic-4-%E6%95%B0%E5%88%97%E7%89%B9%E5%BE%81/#disqus_thread</comments>
    </item>
    
    <item>
      <title>蓝桥杯-basic-3-字母图形</title>
      <link>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-basic-3-%E5%AD%97%E6%AF%8D%E5%9B%BE%E5%BD%A2/</link>
      <guid>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-basic-3-%E5%AD%97%E6%AF%8D%E5%9B%BE%E5%BD%A2/</guid>
      <pubDate>Wed, 13 Feb 2019 02:18:43 GMT</pubDate>
      <description>
      
        
        
          &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
        
      
      </description>
      
      <content:encoded><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 输入范围 n&gt;=1 m&lt;=26</span></span><br><span class="line">    <span class="keyword">int</span> n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="comment">// n 是旋转多少次 即输出多少个换行 m是一次打印字母的数量。</span></span><br><span class="line">    <span class="comment">// 这个模式是暴力中的暴力，想去实现以下</span></span><br><span class="line">    <span class="comment">// char W[26]=['A','B','C','D','E','F','G']</span></span><br><span class="line">    <span class="keyword">char</span> W[<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;=<span class="number">26</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 这是将26个字母进行赋值。</span></span><br><span class="line">        W[i]=<span class="string">'A'</span>+i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//打印数据</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span>  i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j&lt;i) &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;W[i-j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (j&gt;=i) &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;W[j-i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个题目的主要是要解决的是如何在核心位置两侧打印字母，为了简单期间用ASCII为字母赋初值。<br>可以套用abs的math库函数。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-basic-3-%E5%AD%97%E6%AF%8D%E5%9B%BE%E5%BD%A2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>蓝桥杯-闰年计算</title>
      <link>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E9%97%B0%E5%B9%B4%E8%AE%A1%E7%AE%97/</link>
      <guid>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E9%97%B0%E5%B9%B4%E8%AE%A1%E7%AE%97/</guid>
      <pubDate>Tue, 12 Feb 2019 16:48:14 GMT</pubDate>
      <description>
      
        
        
          &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
        
      
      </description>
      
      <content:encoded><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//闰年判断</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judgrunnian</span><span class="params">(<span class="keyword">int</span> year)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>)||year%<span class="number">400</span>==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"yes"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"no"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;year;</span><br><span class="line">    judgrunnian(year);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个比较简单，直接暴力即可。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E9%97%B0%E5%B9%B4%E8%AE%A1%E7%AE%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>蓝桥杯-01子串</title>
      <link>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-01%E5%AD%90%E4%B8%B2/</link>
      <guid>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-01%E5%AD%90%E4%B8%B2/</guid>
      <pubDate>Tue, 12 Feb 2019 16:43:15 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;有两种解决的方法&lt;/p&gt;
&lt;h2 id=&quot;第一种-暴力计算&quot;&gt;&lt;a href=&quot;#第一种-暴力计算&quot; class=&quot;headerlink&quot; title=&quot;第一种 暴力计算&quot;&gt;&lt;/a&gt;第一种 暴力计算&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;ta
        
      
      </description>
      
      <content:encoded><![CDATA[<p>有两种解决的方法</p><h2 id="第一种-暴力计算"><a href="#第一种-暴力计算" class="headerlink" title="第一种 暴力计算"></a>第一种 暴力计算</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//暴力问题QAQ</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i1=<span class="number">0</span>;i1&lt;<span class="number">2</span>;i1++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i2 = <span class="number">0</span>; i2 &lt; <span class="number">2</span>; i2++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i3 = <span class="number">0</span>; i3 &lt; <span class="number">2</span>; i3++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i4 = <span class="number">0</span>; i4 &lt; <span class="number">2</span>; i4++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i5=<span class="number">0</span>;i5&lt; <span class="number">2</span>;i5++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">cout</span>&lt;&lt;i1&lt;&lt;i2&lt;&lt;i3&lt;&lt;i4&lt;&lt;i5&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二种-满二进一"><a href="#第二种-满二进一" class="headerlink" title="第二种 满二进一"></a>第二种 满二进一</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//这种方法内存占用也不是很低，在官网上并没有什么变化。</span></span><br><span class="line">    <span class="comment">// 这一中算法是不是暴力的题目，采用的是数组的算法，更精确的说法是二进制满二进一的思想</span></span><br><span class="line">    <span class="comment">// 首先定义数组，之所以定义数组，就是为了计算的时候方便，加减在基础上是对最后一位有影响。然后影响其他的位置。</span></span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">6</span>]=&#123;<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'0'</span>,<span class="string">'\0'</span>&#125;;<span class="comment">//这里注意 一定是char类型的数据而不是int 类型的数据 int的数组只能用来存取数</span></span><br><span class="line">    <span class="comment">// 然后实行满二进一的计算</span></span><br><span class="line">    <span class="comment">// 外层输出</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 首先输出结果</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        a[<span class="number">4</span>]++;<span class="comment">//末位加一</span></span><br><span class="line">        <span class="comment">// 开始进行二进制的计算</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">4</span>; j &gt;=<span class="number">0</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j]==<span class="string">'2'</span>) &#123;</span><br><span class="line">                a[j<span class="number">-1</span>]++;<span class="comment">//开始进行进位的运算</span></span><br><span class="line">                a[j]=<span class="string">'0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-01%E5%AD%90%E4%B8%B2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>蓝桥杯-fibonaccis数列</title>
      <link>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-fibonaccis%E6%95%B0%E5%88%97/</link>
      <guid>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-fibonaccis%E6%95%B0%E5%88%97/</guid>
      <pubDate>Mon, 11 Feb 2019 15:32:58 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;// Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。&lt;/p&gt;
&lt;p&gt;// 当n比较大时，
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>// Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。</p><p>// 当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</p><p>// 输入格式<br>// 输入包含一个整数n。<br>// 输出格式<br>// 输出一行，包含一个整数，表示Fn除以10007的余数。<br>// 说明：在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</p><p>// 样例输入<br>// 10<br>// 样例输出<br>// 55<br>// 样例输入<br>// 22<br>// 样例输出<br>// 7704<br>// 数据规模与约定<br>// 1 &lt;= n &lt;= 1,000,000。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1000001</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//此处可以直接使用int 因为范围小于10^7</span></span><br><span class="line">    <span class="keyword">int</span> F[N];</span><br><span class="line">     <span class="keyword">int</span> n;</span><br><span class="line">    <span class="comment">// int F[N]</span></span><br><span class="line">    <span class="comment">// 首先定义第一个和第二个</span></span><br><span class="line">    F[<span class="number">1</span>]=F[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;=<span class="number">1000000</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 此处因为结果是累加求余数，可以将每次的结果都可以对其求余数，但是这种算法时间复杂度比较高。应该有好的算法。</span></span><br><span class="line">        F[i]=(F[i<span class="number">-1</span>]+F[i<span class="number">-2</span>])%<span class="number">10007</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// c++ 可以使用后定义</span></span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;F[n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-fibonaccis%E6%95%B0%E5%88%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>蓝桥杯-圆的面积</title>
      <link>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%9C%86%E7%9A%84%E9%9D%A2%E7%A7%AF/</link>
      <guid>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%9C%86%E7%9A%84%E9%9D%A2%E7%A7%AF/</guid>
      <pubDate>Mon, 11 Feb 2019 13:30:51 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;给定圆的半径r，求圆的面积。&lt;/p&gt;
&lt;h2 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;header
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>给定圆的半径r，求圆的面积。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包含一个整数r，表示圆的半径。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。<br>说明：在本题中，输入是一个整数，但是输出是一个实数。<br>对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。<br>实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>4</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>50.2654825</p><h2 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= r &lt;= 10000。<br>提示<br>本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这个比较简单，没有什么技术含量。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> PI=<span class="number">3.14159265358979323</span>;</span><br><span class="line">    <span class="keyword">double</span> r,S;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;r);</span><br><span class="line">    S=PI*r*r;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.7lf"</span>,S);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%9C%86%E7%9A%84%E9%9D%A2%E7%A7%AF/#disqus_thread</comments>
    </item>
    
    <item>
      <title>蓝桥杯-序列求和</title>
      <link>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%BA%8F%E5%88%97%E6%B1%82%E5%92%8C/</link>
      <guid>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%BA%8F%E5%88%97%E6%B1%82%E5%92%8C/</guid>
      <pubDate>Mon, 11 Feb 2019 13:16:50 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;求1+2+3+…+n的值。&lt;/p&gt;
&lt;h2 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;headerlink&quot; title=&quot;输入格式&quot;&gt;&lt;/a&gt;输入格式&lt;/h2&gt;&lt;p&gt;输入包括一个整数n。&lt;/p&gt;
&lt;h2 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h2&gt;&lt;p&gt;输出一行，包括一个整数，表示1+2+3+…+n的值。&lt;/p&gt;
&lt;h2 id=&quot;样例输入&quot;&gt;&lt;a href=&quot;#样例输入&quot; class=&quot;headerlink&quot; title=&quot;样例输入&quot;&gt;&lt;/a&gt;样例输入&lt;/h2&gt;&lt;p&gt;4&lt;/p&gt;
&lt;h2 id=&quot;样例输出&quot;&gt;&lt;a href=&quot;#样例输出&quot; class=&quot;headerlink&quot; title=&quot;样例输出&quot;&gt;&lt;/a&gt;样例输出&lt;/h2&gt;&lt;p&gt;10&lt;/p&gt;
&lt;h2 id=&quot;样例输入-1&quot;&gt;&lt;a href=&quot;#样例输入-1&quot; class=&quot;headerlink&quot; title=&quot;样例输入&quot;&gt;&lt;/a&gt;样例输入&lt;/h2&gt;&lt;p&gt;100&lt;/p&gt;
&lt;h2 id=&quot;样例输出-1&quot;&gt;&lt;a href=&quot;#样例输出-1&quot; class=&quot;headerlink&quot; title=&quot;样例输出&quot;&gt;&lt;/a&gt;样例输出&lt;/h2&gt;&lt;p&gt;5050&lt;/p&gt;
&lt;h2 id=&quot;数据规模与约定&quot;&gt;&lt;a href=&quot;#数据规模与约定&quot; class=&quot;headerlink&quot; title=&quot;数据规模与约定&quot;&gt;&lt;/a&gt;数据规模与约定&lt;/h2&gt;&lt;p&gt;1 &amp;lt;= n &amp;lt;= 1,000,000,000。&lt;/p&gt;
&lt;h2 id=&quot;求解&quot;&gt;&lt;a href=&quot;#求解&quot; class=&quot;headerlink&quot; title=&quot;求解&quot;&gt;&lt;/a&gt;求解&lt;/h2&gt;&lt;h3 id=&quot;第一种-在数据规模上过不去的&quot;&gt;&lt;a href=&quot;#第一种-在数据规模上过不去的&quot; class=&quot;headerlink&quot; title=&quot;第一种 在数据规模上过不去的&quot;&gt;&lt;/a&gt;第一种 在数据规模上过不去的&lt;/h3&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; sum=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= j; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       sum+=i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;第二种-直接使用求和公式&quot;&gt;&lt;a href=&quot;#第二种-直接使用求和公式&quot; class=&quot;headerlink&quot; title=&quot;第二种 直接使用求和公式&quot;&gt;&lt;/a&gt;第二种 直接使用求和公式&lt;/h3&gt;&lt;p&gt;这种方法在数据规模上可以通过&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; sum=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cin&lt;/span&gt;&amp;gt;&amp;gt;j;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sum=j*(j+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>求1+2+3+…+n的值。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包括一个整数n。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行，包括一个整数，表示1+2+3+…+n的值。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>4</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>10</p><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><p>100</p><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><p>5050</p><h2 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= n &lt;= 1,000,000,000。</p><h2 id="求解"><a href="#求解" class="headerlink" title="求解"></a>求解</h2><h3 id="第一种-在数据规模上过不去的"><a href="#第一种-在数据规模上过不去的" class="headerlink" title="第一种 在数据规模上过不去的"></a>第一种 在数据规模上过不去的</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> j;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;j;</span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> <span class="keyword">long</span> i = <span class="number">0</span>; i &lt;= j; i++)</span><br><span class="line">    &#123;</span><br><span class="line">       sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="第二种-直接使用求和公式"><a href="#第二种-直接使用求和公式" class="headerlink" title="第二种 直接使用求和公式"></a>第二种 直接使用求和公式</h3><p>这种方法在数据规模上可以通过<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> j;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;j;</span><br><span class="line">    sum=j*(j+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><a id="more"></a>]]></content:encoded>
      
      <comments>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%BA%8F%E5%88%97%E6%B1%82%E5%92%8C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>蓝桥杯  入门训练 A+B问题</title>
      <link>https://aclihui.com/lanqiao-ab/</link>
      <guid>https://aclihui.com/lanqiao-ab/</guid>
      <pubDate>Mon, 11 Feb 2019 12:25:32 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入A、B，输出A+B。</span><br></pre></td></tr></table></figure><p>说明：在“问题描述”这部分，会给出试题的意思，以及所要求的目标。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入的第一行包括两个整数，由空格分隔，分别表示A、B。</span><br></pre></td></tr></table></figure><p></p><p>说明：“输入格式”是描述在测试你的程序时，所给的输入一定满足的格式。</p><p></p><p></p><p>做题时你应该假设所给的输入是一定满足输入格式的要求的，所以你不需要对输入的格式进行检查。多余的格式检查可能会适得其反，使用你的程序错误。</p><p></p><p></p><p>在测试的时候，系统会自动将输入数据输入到你的程序中，你不能给任何提示。比如，你在输入的时候提示“请输入A、B”之类的话是不需要的，这些多余的输出会使得你的程序被判定为错误。</p><p></p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出一行，包括一个整数，表示A+B的值。</span><br></pre></td></tr></table></figure><p></p><p>说明：“输出格式”是要求你的程序在输出结果的时候必须满足的格式。</p><p></p><p></p><p>在输出时，你的程序必须满足这个格式的要求，不能少任何内容，也不能多任何内容。如果你的内容和输出格式要求的不一样，你的程序会被判断为错误，包括你输出了提示信息、中间调试信息、计时或者统计的信息等。</p><p></p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 45</span><br></pre></td></tr></table></figure><p></p><p>说明：“样例输入”给出了一组满足“输入格式”要求的输入的例子。</p><p></p><p></p><p>这里给出的输入只是可能用来测试你的程序的一个输入，在测试的时候，还会有更多的输入用来测试你的程序。</p><p></p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">57</span><br></pre></td></tr></table></figure><p></p><p>说明：“样例输出”给出了一组满足“输出格式”要求的输出的例子。</p><p></p><p></p><p>样例输出中的结果是和样例输入中的是对应的，因此，你可以使用样例的输入输出简单的检查你的程序。</p><p></p><p></p><p>要特别指出的是，能够通过样例输入输出的程序并不一定是正确的程序，在测试的时候，会用很多组数据进行测试，而不局限于样例数据。有可能一个程序通过了样例数据，但测试的时候仍只能得0分，可能因为这个程序只在一些类似样例的特例中正确，而不具有通用性，再测试更多数据时会出现错误。</p><p></p><p></p><p>比如，对于本题，如果你写一个程序不管输入是什么都输入57，则样例数据是对的，但是测试其他数据，哪怕输入是1和2，这个程序也输出57，则对于其他数据这个程序都不正确。</p><p></p><h2 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-10000 &lt;= A, B &lt;= 10000。</span><br></pre></td></tr></table></figure><p></p><p>说明：“数据规模与约定”中给出了试题中主要参数的范围。</p><p></p><p></p><p>这个范围对于解题非常重要，不同的数据范围会导致试题需要使用不同的解法来解决。比如本题中给的A、B范围不大，可以使用整型(int)来保存，如果范围更大，超过int的范围，则要考虑其他方法来保存大数。</p><p></p><p></p><p>有一些范围在方便的时候是在“问题描述”中直接给的，所以在做题时不仅要看这个范围，还要注意问题描述。</p><p></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line">uisng <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> main（）</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a+b;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/lanqiao-ab/#disqus_thread</comments>
    </item>
    
    <item>
      <title>安装部署环境</title>
      <link>https://aclihui.com/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83/</link>
      <guid>https://aclihui.com/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83/</guid>
      <pubDate>Sun, 10 Feb 2019 22:41:26 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;p style=&quot;font-family:Calibri;font-size:0.917rem;&quot;&gt;In this passage I&lt;br&gt;want to recode the content of have to install
        
      
      </description>
      
      <content:encoded><![CDATA[<p><div><div><div><div><p style="font-family:Calibri;font-size:0.917rem;">In this passage I<br>want to recode the content of have to install the purosim in ubuntu 16.04 for<br>remeber.</p><p style="font-family:Calibri;font-size:0.917rem;">use this web to<br>download the image of ubuntu 16.04</p><p style="font-family:Calibri;font-size:0.917rem;"><a href="a href=&quot;https://mirrors.tuna.tsinghua.edu.cn&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn&lt;/a"></a></p><p style="font-family:Calibri;font-size:0.917rem;"><code>bash&lt;/p&gt;&lt;p style=&quot;font-family:Calibri;font-size:0.917rem;&quot;&gt;git clone &lt;a href=&quot;https://github.com/ccappelle/pyrosim.git&quot;&gt;https://github.com/ccappelle/pyrosim.git&lt;/a&gt;&lt;/p&gt;&lt;p style=&quot;font-family:Calibri;font-size:0.917rem;&quot;&gt;</code></p><p style="font-size:0.917rem;"><span style="font-family:微软雅黑;">Follow the github </span><a href="https://github.com/ccappelle/pyrosim" target="_blank" rel="noopener"><span style="font-family:Calibri;">https://github.com/ccappelle/pyrosim</span></a><span style="font-family:Calibri"> to install the siftware</span></p></div><div><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image001a16db7d4-f544-4380-9f06-d1dd592ad9a0.png" width="499" height="144" alt="计算机生成了可选文字: SettingupItbxll-doc（2：1．6．3一lubuntu2．1） P「ocesstngtriggersfo「Itbc-btn(2.23-0ubuntu10) hui@ubuntu:—/Desktop/pyrosimSshbutld.sh Changingintosimulatordirectory' Unpackingode-0.12.tar.bz2.。．done ButIdtngode-0.12.．．done Buildingsimulator.．．done 0 hui@ubuntu:—/Desktop/pyrosimS"></div><div><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image00281cf6f89-94af-4916-ac40-6351c9ec74f2.png" width="678" height="220" alt="计算机生成了可选文字: hut@ubuntu:—/Desktop/pyrosimSpipinstall-e Obtainingfile:///home/hut/Desktop/pyrostm Collectingnumpy（f「0伊py「ost伊二 ：3．1．1） Downloadinghttps://ftIes.pythonhosted.org/packages/de/37/fe7db552f4507f 379d81dCb78e58e35333d8941757b1f664517d581b5553/nupy一1。15。4一（p27-cp27u-a nyltnuxlX8664．ht（13．8卜18） ]13。8習8100kB/s 133％] Installingcollectedpackages:numpy,pyrostm Runningsetup.pydevelopfo「py「ost伊 SuccessfulIyinstallednumpypyrostm Youa「eusingpipve「ston8．1．1，howeve「ve「ston18．1isavailable. YouShOUIdconside「upg「adtngviathe'pipinstall -upg「adepip'command. hui@ubuntu: 'Desktop"></div><div><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image0038c976262-b2ca-42d5-80c3-cdcfe5662354.png" width="675" height="322" alt="计算机生成了可选文字: Desktop/pyrOStmScd hut@ubuntu:—/Desktop/pyrosim/demosSIs double-pendulumludobotsrobots hui@ubuntu:—/Desktop/pyrosim/demosScdludobots/ hutßubuntu：—'Desktop/pyrosim/demos/IudobotsSIs LibreOfficeWriter过py 《Demo Demo Demo Demo Demo 《Demo Demo 《Demo Demo Demo Demo 《Demo 01 32 33 34 35 06 37 08 39 13 ODJeCtS.py PlayPaused.py EvalTime．py ObjectOrientation.py ObjectPosition.py ObjectSize.py Multiple_Objects．py MultipleSimulations.py A「m.py Joints。py Demo Demo Demo Demo Demo Demo Demo Demo Demo Demo Demo 12 13 14 15 16 17 18 19 20 21 22 SensorNeurons．py 習0t0「Neu「ons．py Synapses．py InductngMovement．py Ca「．py FixedObjects.py FunctionNeuron.py Torque。py DevelopingSynapse.py Slide「Joint.py Screen_Capture．py 11bPosSensors.py 11Senso「s.py 0 hut@ubuntu:—/Desktop/pyrosim/demos/IudobotsSpythonDemo_00EmptyStm.py"></div><div><p style="font-family:微软雅黑;font-size:0.917rem;">Now We can<br>start the first Demo</p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image004ac70ee40-dc29-483b-aadf-5e9f77e1c8cb.png" width="749" height="528" alt="计算机生成了可选文字: Simulation"></p><p style="font-family:微软雅黑;font-size:0.917rem;">This should bring up an<br>OpenGL window displaying an empty, virtual world. The window will close on its<br>own after a few seconds.</p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p><cite style="font-size:0.75rem;color:#595959;"><span style="font-family:宋体">来自</span><span style="font-family:Calibri;"> &lt;</span><a href="https://github.com/ccappelle/pyrosim" target="_blank" rel="noopener"><span style="font-family:Calibri;">https://github.com/ccappelle/pyrosim</span></a><span style="font-family:Calibri">&gt; </span></cite></p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:-apple-system;font-size:0.833rem;color:#24292E;"><span style="background:white;">Notes</span></p><p style="font-family: -apple-system; color: rgb(36, 41, 46);"><span style="background:white;">If you already<br>have pyrosim installed and want the latest update from the repository, change<br>into the modules root directory (contains setup.py) and pull</span></p><p style="font-family:SFMono-Regular;font-size:0.85rem;color:#24292E;"><span style="background:#F6F8FA">$ git pull</span></p><p style="font-family: -apple-system; color: rgb(36, 41, 46);"><span style="background:white;">The C++ code is<br>likely to have changed so you have to recompile it by going int the simulator<br>directory and typing make</span></p><p style="font-family:SFMono-Regular;font-size:0.85rem;"><span style="color:#24292E;background:#F6F8FA">$ </span><span style="color:#005CC5;background:#F6F8FA;">cd</span><span style="color:#24292E;background:#F6F8FA;"><br>pyrosim/simulator<br><br>$ make</span></p><p style="font-family: -apple-system; color: rgb(36, 41, 46);"><span style="background:white;">The simulator<br>directory contains all of the C++ code used in pyrosim.</span></p><p style="font-family:-apple-system;font-size:0.833rem;color:#24292E;"><span style="background:white;">Next steps.</span></p><p style="font-family:微软雅黑;font-size:0.917rem;">Now you can start<br>making robots <a href="https://www.reddit.com/r/ludobots/wiki/pyrosim/simulation" target="_blank" rel="noopener">here</a>,<br>starting at step #3.</p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p><cite style="font-size:0.75rem;color:#595959;"><span style="font-family:宋体">来自</span><span style="font-family:Calibri;"> &lt;</span><a href="https://github.com/ccappelle/pyrosim" target="_blank" rel="noopener"><span style="font-family:Calibri;">https://github.com/ccappelle/pyrosim</span></a><span style="font-family:Calibri">&gt; </span></cite></p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:微软雅黑;font-size:0.917rem;">In this part<br>I use the newest for I use the git clone to download the env.</p><p style="font-family:Calibri;font-size:0.917rem;"># 3<span style="mso-spacerun:yes">  </span></p><p style="font-family:Calibri;font-size:0.917rem;">We should<br>to make sure that </p><p style="font-family:Calibri;font-size:0.917rem;">we have<br>the env of the numpy</p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image005a90d907c-bc8e-4a8a-82b9-ff4a2a5510cb.png" width="491" height="237" alt="计算机生成了可选文字: hui@ubunt·～Deskto hUt@UbUntU:—SIs Desktop Downloads Documentsexamples.desktop hui@ubuntu:—ScdDesktop/ Music Pictures empty。py public Vide' Templates hui@ubuntu:—/DesktopS empty．pypyrosim hui@ubuntu:—/DesktopS 1 hui@ubuntu:—/DesktopS Is python 0"></p><p style="font-family:Calibri;font-size:0.917rem;">We finish<br>the env. </p><p style="font-family:Calibri;font-size:0.917rem;">Till now<br>we finsh the env</p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image0064709d6b4-451a-4d3e-a377-81aee2aee423.png" width="748" height="498" alt="计算机生成了可选文字: ，00Simulation"></p><p style="font-family:微软雅黑;font-size:0.917rem;">Next We<br>start to do the assgn 2 </p><p style="font-family:Calibri;font-size:0.917rem;">Follow<br>the title do </p><p style="font-family:Calibri;font-size:0.917rem;">When the<br>code show as the follow<span>  </span>we will see the<br>1 &amp; 0.1 tools<span>  </span>pause in the<br>Simulation. </p><p style="font-family:Calibri;font-size:0.917rem;">Object.py</p><p style="font-family:Calibri;font-size:0.917rem;"><code>python&lt;/p&gt;&lt;p style=&quot;font-family:Calibri;font-size:0.917rem;&quot;&gt; &lt;/p&gt;&lt;p style=&quot;font-family:Calibri;font-size:0.917rem;&quot;&gt;</code></p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image00734287954-e8c6-4753-a942-ac444a3af19e.png" width="749" height="531" alt="计算机生成了可选文字: Simulation"></p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:Calibri;font-size:0.917rem;">When we<br>come to there ,we can use the ctrl + P to release the pause .And we can use the<br>ctrl + o to view the simulation motion step by step.</p><p style="font-family:Calibri;font-size:0.917rem;">We can<br>use the mouse to adjust the position of the view we see. The left button is<br>change the view in 3D view and the right view change the view of far or near.</p><p style="font-family:Calibri;font-size:0.917rem;">When we<br>change the original date like the follow </p><p style="font-family:微软雅黑;font-size:0.917rem;">sim.send_cylinder( x=0<br>, y=0 , z=0.6 , length=1.0 , radius=0.1 )</p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p><cite style="font-size:0.75rem;color:#595959;"><span style="font-family:宋体">来自</span><span style="font-family:Calibri;"> &lt;</span><a href="https://www.reddit.com/r/ludobots/wiki/pyrosim/objects" target="_blank" rel="noopener"><span style="font-family:Calibri">https://www.reddit.com/r/ludobots/wiki/pyrosim/objects</span></a><span style="font-family:Calibri">&gt; </span></cite></p><p style="font-family:Calibri;font-size:0.917rem;">We will<br>see the follow image<span>  </span></p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image008acc4858d-9c4c-4647-81a6-f1c37663a57b.png" width="750" height="532" alt="计算机生成了可选文字: Simulation"></p><p style="font-size:0.917rem;"><span style="font-family:Calibri;">Why the data is 0.6 because the half of the cylinder is 0.5 and the<br>radius is 0.1.<span>  </span>so we should make the<br>z=0.6 ,which can make the cylinder and the half ball out of<span style="mso-spacerun:yes">  </span>the coordinate(</span><span style="font-family:微软雅黑;">坐标</span><span style="font-family:Calibri;">) </span><span style="font-family:微软雅黑">system.</span></p><p style="font-family:Calibri;font-size:0.917rem;">2019-1-14<span style="mso-spacerun:yes">  </span>3:43 the process of this task has to the 15<br>prolem.</p><p style="font-family:微软雅黑;font-size:0.917rem;">When we<br>change the location of the cylinder at this code<span style="mso-spacerun:yes">  </span></p><p style="font-family:微软雅黑;font-size:0.917rem;">sim.send_cylinder( x=0<br>, y=0 , z=1.5 , length=1.0 , radius=0.1 )</p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p><cite style="font-size:0.75rem;color:#595959;"><span style="font-family:宋体">来自</span><span style="font-family:Calibri;"> &lt;</span><a href="https://www.reddit.com/r/ludobots/wiki/pyrosim/objects" target="_blank" rel="noopener"><span style="font-family:Calibri">https://www.reddit.com/r/ludobots/wiki/pyrosim/objects</span></a><span style="font-family:Calibri">&gt; </span></cite></p><p style="font-size:0.917rem;"><span style="font-family:Calibri;">We will see the </span><span style="font-family:微软雅黑;">situation about<br>the cylinder .</span></p><div><div class="wiz-table-container" style="position: relative; padding: 0px;"><div class="wiz-table-body"><table border="1" valign="top"><tbody><tr><td style="width:4.5055in;"><p style="font-family:微软雅黑;font-size:0.917rem;">And we can<br>  tell<span>  </span>the simulator to rrun for 1000<br>  times steps.</p></td><td style="width:.5354in;"><p style="font-family:微软雅黑;font-size:0.917rem;"> </p></td></tr></tbody></table></div></div></div><p style="font-family:Calibri;font-size:0.917rem;"> </p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image009517c8e53-e5a0-4eea-9ce0-927f1af27701.png" width="558" height="515" alt="计算机生成了可选文字: ，00引mutation"></p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:Calibri;font-size:0.917rem;">import pyrosim</p><p style="font-family:Calibri;font-size:0.917rem;">sim=pyrosim.Simulator(play_paused=True,eval_time=1000)</p><p style="font-family:Calibri;font-size:0.917rem;">whiteObject=sim.send_cylinder(x=0,y=0,z=0.6,length=1.0,radius=0.1)</p><p style="font-family:Calibri;font-size:0.917rem;">print(whiteObject)</p><p style="font-family:Calibri;font-size:0.917rem;">redObject=sim.send_cylinder(x=-0.2,y=0,z=0.6)</p><p style="font-family:Calibri;font-size:0.917rem;">print(redObject)</p><p style="font-family:Calibri;font-size:0.917rem;">sim.start()</p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:微软雅黑;font-size:0.917rem;">In the<br>command </p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image0105ed3db14-88a2-4c03-b5c5-95f0eae6c185.png" width="377" height="111" alt="计算机生成了可选文字: hut@ubuntu:—/DesktopS hui@ubuntu:—/DesktopS 1 hui@ubuntu:—/DesktopS pythonobject.py pythonobject.py 0"></p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image0115ed0ff3b-4199-484b-8983-2dac3613fcfe.png" width="471" height="529" alt="计算机生成了可选文字: ，00引mutation"></p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:Calibri;font-size:0.917rem;">Change<br>the color of the next .</p><p style="font-family:Calibri;font-size:0.917rem;">redObject=sim.send_cylinder(x=-0.2,y=0,z=0.6,r=1,<br>g=0, b=0)</p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image0123dcc2f1f-43f7-4470-9aa9-304f99992d64.png" width="267" height="278"></p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:Calibri;font-size:0.917rem;">Add the<br>rolation vectoylinder</p><p style="font-family:Calibri;font-size:0.917rem;">Change<br>the red_cu</p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image013eaa22d07-32ee-4e24-833f-90e646f12eb5.png" width="281" height="268"></p><p style="font-family:Calibri;font-size:0.917rem;">Now I<br>push myself to the next question </p><p style="font-family:Calibri;font-size:0.917rem;">In order<br>to get the f pic</p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image014fe83c96b-65d1-4c5a-ba64-adca33e8f9af.png" width="737" height="864"></p><p style="font-family:Calibri;font-size:0.917rem;"> </p><p style="font-family:Calibri;font-size:0.917rem;">This is<br>so easy<span>  </span>my code is in the<span style="mso-spacerun:yes">  </span>next line</p><p><img src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/35aad6082f9442dab9a4f3f8c6fa8402_clip_image015a33a630c-fc93-4758-bcb5-3995549c4a2f.png" width="484" height="497"></p><p><span style="font-family:Calibri;font-size:0.917rem;"><span> </span>SO I finish the part of </span><span style="font-weight: bold; font-family: verdana; font-size: 1.125rem; color: rgb(102, 102, 102); background: white;">pyrosim/objects</span></p><p><cite style="font-size:0.75rem;color:#595959;"><span style="font-family:宋体">来自</span><span style="font-family:Calibri;"> &lt;</span><a href="https://www.reddit.com/r/ludobots/wiki/pyrosim/objects" target="_blank" rel="noopener"><span style="font-family:Calibri">https://www.reddit.com/r/ludobots/wiki/pyrosim/objects</span></a><span style="font-family:Calibri">&gt; </span></cite></p></div></div></div><br></div>&lt;wiz_tmp_tag id=”wiz-table-range-border” contenteditable=”false” style=”display: none;”&gt;<div id="wiz-table-col-line" style="display: none;"></div><div id="wiz-table-row-line" style="display: none;"></div><div id="wiz-table-range-border_start" style="display: none;"><div id="wiz-table-range-border_start_top"></div><div id="wiz-table-range-border_start_right"></div><div id="wiz-table-range-border_start_bottom"></div><div id="wiz-table-range-border_start_left"></div><div id="wiz-table-range-border_start_dot"></div></div><div id="wiz-table-range-border_range" style="display: none;"><div id="wiz-table-range-border_range_top"></div><div id="wiz-table-range-border_range_right"></div><div id="wiz-table-range-border_range_bottom"></div><div id="wiz-table-range-border_range_left"></div><div id="wiz-table-range-border_range_dot"></div></div>&lt;/wiz_tmp_tag&gt;<br><br><div><a title="来自为知笔记(Wiz)" href="http://www.wiz.cn/i/370aaf11" target="_blank" rel="noopener">来自为知笔记(Wiz)</a></div><br><br></p>]]></content:encoded>
      
      <comments>https://aclihui.com/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ludobots_第一期作业（网上环境练习）</title>
      <link>https://aclihui.com/ludobots-%E7%AC%AC%E4%B8%80%E6%9C%9F%E4%BD%9C%E4%B8%9A%EF%BC%88%E7%BD%91%E4%B8%8A%E7%8E%AF%E5%A2%83%E7%BB%83%E4%B9%A0%EF%BC%89/</link>
      <guid>https://aclihui.com/ludobots-%E7%AC%AC%E4%B8%80%E6%9C%9F%E4%BD%9C%E4%B8%9A%EF%BC%88%E7%BD%91%E4%B8%8A%E7%8E%AF%E5%A2%83%E7%BB%83%E4%B9%A0%EF%BC%89/</guid>
      <pubDate>Thu, 07 Feb 2019 15:21:17 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;第一天 其中在开篇的的时候谈到了遗传算法&lt;strong&gt;（&lt;/strong&gt;&lt;br&gt;Genetic Algorithm&lt;br&gt;来自 &amp;lt;&lt;em&gt;&lt;a href=&quot;https://blog.csdn.net/u010451580/article/details/51178
        
      
      </description>
      
      <content:encoded><![CDATA[<p>第一天 其中在开篇的的时候谈到了遗传算法<strong>（</strong><br>Genetic Algorithm<br>来自 &lt;<em><a href="https://blog.csdn.net/u010451580/article/details/51178225" target="_blank" rel="noopener">https://blog.csdn.net/u010451580/article/details/51178225</a></em>&gt;<br><strong>）</strong>的问题 相关链接 <a href="https://blog.csdn.net/u010451580/article/details/51178225" target="_blank" rel="noopener">https://blog.csdn.net/u010451580/article/details/51178225</a></p><p></p><h3>演化算法的过程</h3><br>Anatomy of an evolutionary robotics experiment:<p></p><p><ol><br>     <li>Create a task environment.</li><br>     <li>Create the robot.</li><br>     <li>Create the robot’s brain, or Artificial Neural Network (ANN).</li><br>     <li>Use an evolutionary algorithm to optimize the ANN so that the robot performs the</li><br></ol><br>desired task in its environment.<br>Week plan<br>Week 1 to Week 10<br>Complete the weekly work of the question<br>Weeks 11 to 14: Use the system to conduct an evolutionary robotics experiment.</p><p><ol><br>     <li>Given the same optimizer, neural network and eight hours of behavior</li><br></ol><br>optimization on the same computer, does a quadrupedal robot evolve to walk</p><p>further or not as far as a hexapedal robot, or is there no significant difference?</p><p><ol start="2"><br>     <li>Create five fitness functions that not only select for locomotion on the quadrupedal</li><br></ol><br>robot, but each also selects for a particular gait: walking, trotting, canter, galloping</p><p>and pronking.</p><p><ol start="3"><br>     <li>Create a fitness function that rewards NNs for locomotion, but penalizes them for</li><br></ol><br>requiring a lot of energy to realize the gait. This is difficult, as there are two</p><p>solutions that are not desirable: evolution finds fast but inefficient gaits, or ‘gaits’ in</p><p>which the robot does not move, and therefore does not consume energy.</p><p><ol start="4"><br>     <li>Equip the robot with a simulated laser range finder, which tells the robot about</li><br></ol><br>objects in its environment. Evolve a robot that walks toward round objects, but<br>walks away from rectangular objects.<br>Assign 1<br>The web <a href="http://www.uvm.edu/~mwagy/robots/dotbot/db.html" target="_blank" rel="noopener">http://www.uvm.edu/~mwagy/robots/dotbot/db.html</a><br><a href="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/img_5c60249f463b7.png" target="_blank" rel="noopener"><img class="aligncenter size-full wp-image-209" src="https://aclihui-blog-1253731526.cos.ap-beijing.myqcloud.com/wp-content/uploads/2019/02/img_5c60249f463b7.png" alt=""></a><br><a href="https://s2.ax1x.com/2019/01/14/FxVlJf.jpg" target="_blank" rel="noopener">https://s2.ax1x.com/2019/01/14/FxVlJf.jpg</a><br>The next is to intall <strong>Pyrosim </strong>来自 &lt;<a href="https://www.reddit.com/r/ludobots/wiki/pyrosim/simulation" target="_blank" rel="noopener">https://www.reddit.com/r/ludobots/wiki/pyrosim/simulation</a>&gt;</p>]]></content:encoded>
      
      <comments>https://aclihui.com/ludobots-%E7%AC%AC%E4%B8%80%E6%9C%9F%E4%BD%9C%E4%B8%9A%EF%BC%88%E7%BD%91%E4%B8%8A%E7%8E%AF%E5%A2%83%E7%BB%83%E4%B9%A0%EF%BC%89/#disqus_thread</comments>
    </item>
    
    <item>
      <title>算法笔记_胡凡读书笔记</title>
      <link>https://aclihui.com/algorithm-note-hufan-note/</link>
      <guid>https://aclihui.com/algorithm-note-hufan-note/</guid>
      <pubDate>Wed, 06 Feb 2019 15:43:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;p&gt;此章节，是没有什么记录的东西，到最后再提炼刷题的知识。&lt;/p&gt;
&lt;h1 id=&quot;第二章&quot;&gt;&lt;a href=&quot;#第二章&quot; class=
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><p>此章节，是没有什么记录的东西，到最后再提炼刷题的知识。</p><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><h2 id="INT-范围问题"><a href="#INT-范围问题" class="headerlink" title="INT 范围问题"></a>INT 范围问题</h2><p>题目范围在 10^9(-2^31~2^31-1)及以下用int（32字节）就可以。如果在-2^63~2^63-1（范围超过2147483647（10^10或10^18））就用需要long long来实现.</p><h2 id="浮点数问题"><a href="#浮点数问题" class="headerlink" title="浮点数问题"></a>浮点数问题</h2><p><strong>能用double，就用double</strong></p><ol><li>float 32位 -2^128~2^128  1位符号位 8位指数位，23位尾数位 但是精度只有6-7位。</li><li>double 64位 -2^1024~2^1024 1位符号位 11位指数位，52位尾数位 精度只有15-16位。</li><li>%m.nf 总共m位 n位小数。<h2 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h2>bool 类型在C++可以直接使用 但是在C语言中必须添加stdbool.h头文件。非零则为ture.<br>在计算机中ture=1 false = 0<h2 id="符号常量和const常量"><a href="#符号常量和const常量" class="headerlink" title="符号常量和const常量"></a>符号常量和const常量</h2><h3 id="实现ADD-a-b"><a href="#实现ADD-a-b" class="headerlink" title="实现ADD(a,b)"></a>实现ADD(a,b)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADD(a,b) ((a)+(b))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> num1=<span class="number">3</span>,num2=<span class="number">5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,ADD(num1,num2));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><strong>注意</strong><br>发现此时define对应的括号的数量很多，因为define中对应的括号会产生优先级的问题。<br>例如下面的例子<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CAL(x) (x*2+!)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,CAL(a+<span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>此时输出的是4 而不是5 <strong>因为</strong>宏定义是原封不动的替换，因此导致CAL(a+1)=a+1<em>2+1=4 而不是(a+1)</em>2+1</p>]]></content:encoded>
      
      <comments>https://aclihui.com/algorithm-note-hufan-note/#disqus_thread</comments>
    </item>
    
    <item>
      <title>webapi-note</title>
      <link>https://aclihui.com/webapi-note/</link>
      <guid>https://aclihui.com/webapi-note/</guid>
      <pubDate>Tue, 05 Feb 2019 15:07:45 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;API-概念&quot;&gt;&lt;a href=&quot;#API-概念&quot; class=&quot;headerlink&quot; title=&quot;API 概念&quot;&gt;&lt;/a&gt;API 概念&lt;/h1&gt;&lt;p&gt;API是一些预先定义的函数，目的是提供应用程序与开发人员基于软件或硬件可以访问一组程序的能力，而在此同时不需
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="API-概念"><a href="#API-概念" class="headerlink" title="API 概念"></a>API 概念</h1><p>API是一些预先定义的函数，目的是提供应用程序与开发人员基于软件或硬件可以访问一组程序的能力，而在此同时不需要访问源码，也不需要理解代码内部的机制。</p><ul><li>任何开发语言都有自己的API</li><li>API的特征输入和输出（I/O）</li><li>API的使用方法（console.log()）<h1 id="WEB-API-的概念"><a href="#WEB-API-的概念" class="headerlink" title="WEB API 的概念"></a>WEB API 的概念</h1><strong>浏览器提供一套操作浏览器功能和页面元素的API(BOM和DOM)</strong><h2 id="掌握常见的浏览器提供的API的调用方式"><a href="#掌握常见的浏览器提供的API的调用方式" class="headerlink" title="掌握常见的浏览器提供的API的调用方式"></a>掌握常见的浏览器提供的API的调用方式</h2><a href="https://developer.mozilla.org/zh-CN/docs/Web/API" target="_blank" rel="noopener">MDN-Web API</a></li></ul>]]></content:encoded>
      
      <comments>https://aclihui.com/webapi-note/#disqus_thread</comments>
    </item>
    
    <item>
      <title>蓝桥杯2016b组第一题煤球的数量</title>
      <link>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF2016b%E7%BB%84%E7%AC%AC%E4%B8%80%E9%A2%98%E7%85%A4%E7%90%83%E7%9A%84%E6%95%B0%E9%87%8F/</link>
      <guid>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF2016b%E7%BB%84%E7%AC%AC%E4%B8%80%E9%A2%98%E7%85%A4%E7%90%83%E7%9A%84%E6%95%B0%E9%87%8F/</guid>
      <pubDate>Wed, 30 Jan 2019 12:48:28 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;煤球数目&quot;&gt;&lt;a href=&quot;#煤球数目&quot; class=&quot;headerlink&quot; title=&quot;煤球数目&quot;&gt;&lt;/a&gt;煤球数目&lt;/h2&gt;&lt;p&gt;有一堆煤球，堆成三角棱锥形。具体：&lt;br&gt;第一层放1个，&lt;br&gt;第二层3个（排列成三角形），&lt;br&gt;第三层6个（排列成三角形
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="煤球数目"><a href="#煤球数目" class="headerlink" title="煤球数目"></a>煤球数目</h2><p>有一堆煤球，堆成三角棱锥形。具体：<br>第一层放1个，<br>第二层3个（排列成三角形），<br>第三层6个（排列成三角形），<br>第四层10个（排列成三角形），<br>….<br>如果一共有100层，共有多少个煤球？</p><p>请填表示煤球总数目的数字。<br>注意：你提交的应该是一个整数，不要填写任何多余的内容或说明性文字。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;<span class="comment">// 层数</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>; <span class="comment">// 第i层的煤球的数量</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> all=<span class="number">0</span>; <span class="comment">//总的数量 </span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum=sum+i;</span><br><span class="line">        all=all+sum; </span><br><span class="line">     &#125; </span><br><span class="line">     <span class="built_in">cout</span>&lt;&lt;all&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>这中题目的主题是要认真的读题目，题目的要求是煤球的总的数量，而不是第100层煤球的数量。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/%E8%93%9D%E6%A1%A5%E6%9D%AF2016b%E7%BB%84%E7%AC%AC%E4%B8%80%E9%A2%98%E7%85%A4%E7%90%83%E7%9A%84%E6%95%B0%E9%87%8F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>2019-1-19更新日志</title>
      <link>https://aclihui.com/2019-1-19renew-note/</link>
      <guid>https://aclihui.com/2019-1-19renew-note/</guid>
      <pubDate>Sat, 19 Jan 2019 13:27:22 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;TODOList&quot;&gt;&lt;a href=&quot;#TODOList&quot; class=&quot;headerlink&quot; title=&quot;TODOList&quot;&gt;&lt;/a&gt;TODOList&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;未来将网站的图片采用qiniu或者其他的cdn 实现&lt;/li&gt;
&lt;li&gt;主题中的
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="TODOList"><a href="#TODOList" class="headerlink" title="TODOList"></a>TODOList</h1><ul><li>未来将网站的图片采用qiniu或者其他的cdn 实现</li><li>主题中的JS和CSS采用<a href="https://jsdelivr.com" target="_blank" rel="noopener">https://jsdelivr.com</a> CDN实现 加快网页的载入速度</li><li>网站 可能会备案，看网站的加速的情况 或者转移服务器到interserver保证书写的速度</li><li>更改主题的背景 可采用随机图片（某某API）</li><li>更改主页文件的首图（缩略图），现在的不太好</li></ul>]]></content:encoded>
      
      <comments>https://aclihui.com/2019-1-19renew-note/#disqus_thread</comments>
    </item>
    
    <item>
      <title>异步</title>
      <link>https://aclihui.com/yibu/</link>
      <guid>https://aclihui.com/yibu/</guid>
      <pubDate>Mon, 31 Dec 2018 14:43:50 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;异步传输问题&quot;&gt;&lt;a href=&quot;#异步传输问题&quot; class=&quot;headerlink&quot; title=&quot;异步传输问题&quot;&gt;&lt;/a&gt;异步传输问题&lt;/h1&gt;&lt;p&gt;异步传输可以明显的降低网页的拥塞，Nodejs中也强调了异步的使用。&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="异步传输问题"><a href="#异步传输问题" class="headerlink" title="异步传输问题"></a>异步传输问题</h1><p>异步传输可以明显的降低网页的拥塞，Nodejs中也强调了异步的使用。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/yibu/#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用jenkins</title>
      <link>https://aclihui.com/try-jenkins/</link>
      <guid>https://aclihui.com/try-jenkins/</guid>
      <pubDate>Sat, 29 Dec 2018 15:23:54 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>https://aclihui.com/try-jenkins/#disqus_thread</comments>
    </item>
    
    <item>
      <title>docker安装PHP环境</title>
      <link>https://aclihui.com/dockerer-install-php/</link>
      <guid>https://aclihui.com/dockerer-install-php/</guid>
      <pubDate>Tue, 25 Dec 2018 14:58:18 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;Docker来配置PHP+mysql环境,使其简单化。&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Docker来配置PHP+mysql环境,使其简单化。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/dockerer-install-php/#disqus_thread</comments>
    </item>
    
    <item>
      <title>C语言的引用</title>
      <link>https://aclihui.com/C-code/</link>
      <guid>https://aclihui.com/C-code/</guid>
      <pubDate>Mon, 24 Dec 2018 14:56:11 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;今天学到的最深刻的就是C++的引用&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天学到的最深刻的就是C++的引用</p>]]></content:encoded>
      
      <comments>https://aclihui.com/C-code/#disqus_thread</comments>
    </item>
    
    <item>
      <title>五分钟创建WordPress</title>
      <link>https://aclihui.com/quick-to-build-wp/</link>
      <guid>https://aclihui.com/quick-to-build-wp/</guid>
      <pubDate>Sun, 23 Dec 2018 13:29:15 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;docker实例 快速创建wp&lt;/p&gt;
&lt;h1 id=&quot;第一步输入命令&quot;&gt;&lt;a href=&quot;#第一步输入命令&quot; class=&quot;headerl
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>docker实例 快速创建wp</p><h1 id="第一步输入命令"><a href="#第一步输入命令" class="headerlink" title="第一步输入命令"></a>第一步输入命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --name db --env MYSQL_ROOT_PASSWORD=example -d mariadb</span><br><span class="line">docker run --name MyWordPress --link db:mysql -p 8080:80 -d wordpress</span><br></pre></td></tr></table></figure><p>下载中<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223213325.png" alt=""><br>下载完成<br>打开 <a href="http://192.168.99.100:8080" target="_blank" rel="noopener">http://192.168.99.100:8080</a><br>开始安装<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223213641.png" alt=""><br>填写必要的信息<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223213811.png" alt=""></p><h1 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h1><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223213904.png" alt=""><br>撒花</p><h1 id="内部更新也可以使用"><a href="#内部更新也可以使用" class="headerlink" title="内部更新也可以使用"></a>内部更新也可以使用</h1>]]></content:encoded>
      
      <comments>https://aclihui.com/quick-to-build-wp/#disqus_thread</comments>
    </item>
    
    <item>
      <title>window10家庭版尝试安装docker</title>
      <link>https://aclihui.com/try-docker-in-windows/</link>
      <guid>https://aclihui.com/try-docker-in-windows/</guid>
      <pubDate>Sun, 23 Dec 2018 12:51:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;一直以来发现官网上说Docker支持window10 PRO及商业版,没有商业版的我一直也没有尝试，一直使用虚拟机来做Docker，非常的不
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>一直以来发现官网上说Docker支持window10 PRO及商业版,没有商业版的我一直也没有尝试，一直使用虚拟机来做Docker，非常的不方便，今天尝试用windows家庭版尝试安装</p><h1 id="第一步-检查是否支持虚拟化"><a href="#第一步-检查是否支持虚拟化" class="headerlink" title="第一步 检查是否支持虚拟化"></a>第一步 检查是否支持虚拟化</h1><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223205603.png" alt=""><br>看来我的机器是支持的</p><h1 id="第二步去下载Docker"><a href="#第二步去下载Docker" class="headerlink" title="第二步去下载Docker"></a>第二步去下载Docker</h1><p>网址: <a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows" target="_blank" rel="noopener">https://hub.docker.com/editions/community/docker-ce-desktop-windows</a><br>发现好像不支持<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223205946.png" alt=""><br>因此采用 循序渐进学docker的书中的dockertoolbox<br><a href="https://docs.docker.com/docker-for-windows/install/" target="_blank" rel="noopener">https://docs.docker.com/docker-for-windows/install/</a><br>开始漫长的等待<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223210702.png" alt=""></p><h1 id="第三步-经典的windows-下一步，下一步，下一步"><a href="#第三步-经典的windows-下一步，下一步，下一步" class="headerlink" title="第三步 经典的windows 下一步，下一步，下一步"></a>第三步 经典的windows 下一步，下一步，下一步</h1><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223211136.png" alt=""><br>此处我按照默认的选择<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223211220.png" alt=""><br>强行vbox (haha)</p><h1 id="第四步-下载前置的东西"><a href="#第四步-下载前置的东西" class="headerlink" title="第四步 下载前置的东西"></a>第四步 下载前置的东西</h1><p>打开 quickStart开始下载 获取IP我这里有一点点点点点点点点点点点慢<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223211657.png" alt=""><br>丑鲸鱼显示成功（逃</p><h1 id="第五步-拉去hello-world"><a href="#第五步-拉去hello-world" class="headerlink" title="第五步 拉去hello-world"></a>第五步 拉去hello-world</h1><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181223211842.png" alt=""><br>成功。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/try-docker-in-windows/#disqus_thread</comments>
    </item>
    
    <item>
      <title>退出qemu虚拟机</title>
      <link>https://aclihui.com/qemu-exit/</link>
      <guid>https://aclihui.com/qemu-exit/</guid>
      <pubDate>Sun, 23 Dec 2018 07:41:29 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;介绍qemu的退出&lt;/p&gt;
&lt;h1 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>介绍qemu的退出</p><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><p>首先按下ctrl+a 再放手 按a退出即可。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/qemu-exit/#disqus_thread</comments>
    </item>
    
    <item>
      <title>更换网站程序</title>
      <link>https://aclihui.com/change-web-software/</link>
      <guid>https://aclihui.com/change-web-software/</guid>
      <pubDate>Sun, 23 Dec 2018 05:10:54 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;考虑到hexo 上面很多东西都没有对应的插件（eg:邮件回复插件等等）可能在不久的将来会换回去。提前告知。&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>考虑到hexo 上面很多东西都没有对应的插件（eg:邮件回复插件等等）可能在不久的将来会换回去。提前告知。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/change-web-software/#disqus_thread</comments>
    </item>
    
    <item>
      <title>octave入门</title>
      <link>https://aclihui.com/octave-rumen/</link>
      <guid>https://aclihui.com/octave-rumen/</guid>
      <pubDate>Sat, 22 Dec 2018 15:16:08 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;基础入门知识&lt;/p&gt;
&lt;h1 id=&quot;首先是简单的运算&quot;&gt;&lt;a href=&quot;#首先是简单的运算&quot; class=&quot;headerlink&quot; ti
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>基础入门知识</p><h1 id="首先是简单的运算"><a href="#首先是简单的运算" class="headerlink" title="首先是简单的运算"></a>首先是简单的运算</h1><p>1+1<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181222231751.png" alt=""></p><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181222231930.png" alt=""></p><h1 id="内建函数"><a href="#内建函数" class="headerlink" title="内建函数"></a>内建函数</h1><p>exp(1)函数<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181222232107.png" alt=""><br>解释<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exp，高等数学里以自然常数e为底的指数函数，它同时又是航模名词，全称Exponential(指数曲线)。</span><br></pre></td></tr></table></figure></p><h2 id="sin-1-2-pi-函数和sin-pi"><a href="#sin-1-2-pi-函数和sin-pi" class="headerlink" title="sin (1/2*pi) 函数和sin(pi)"></a>sin (1/2*pi) 函数和sin(pi)</h2><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181222232343.png" alt=""><br>此时发现sin(pi)的数值极其小。</p><h1 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h1><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181222232521.png" alt=""></p>]]></content:encoded>
      
      <comments>https://aclihui.com/octave-rumen/#disqus_thread</comments>
    </item>
    
    <item>
      <title>使用Anaconda 3 安装tensorflow</title>
      <link>https://aclihui.com/tensorflow-install/</link>
      <guid>https://aclihui.com/tensorflow-install/</guid>
      <pubDate>Fri, 21 Dec 2018 14:29:39 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;第一步-安装Anaconda-3同时获得&quot;&gt;&lt;a href=&quot;#第一步-安装Anaconda-3同时获得&quot; class=&quot;headerlink&quot; title=&quot;第一步 安装Anaconda 3同时获得&quot;&gt;&lt;/a&gt;第一步 安装Anaconda 3同时获得&lt;/h1&gt;&lt;
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="第一步-安装Anaconda-3同时获得"><a href="#第一步-安装Anaconda-3同时获得" class="headerlink" title="第一步 安装Anaconda 3同时获得"></a>第一步 安装Anaconda 3同时获得</h1><p> <img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181221225018.png" alt=""></p><h1 id="安装完成"><a href="#安装完成" class="headerlink" title="安装完成"></a>安装完成</h1><p> <img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181221230211.png" alt=""></p><h1 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h1><h2 id="安装CPU版"><a href="#安装CPU版" class="headerlink" title="安装CPU版"></a>安装CPU版</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade --ignore-installed tensorflow</span><br></pre></td></tr></table></figure><h2 id="安装GPU版本"><a href="#安装GPU版本" class="headerlink" title="安装GPU版本"></a>安装GPU版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade --ignore-installed tensorflow-gpu</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/tensorflow-install/#disqus_thread</comments>
    </item>
    
    <item>
      <title>automation_think</title>
      <link>https://aclihui.com/automation-think/</link>
      <guid>https://aclihui.com/automation-think/</guid>
      <pubDate>Fri, 21 Dec 2018 03:00:36 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>https://aclihui.com/automation-think/#disqus_thread</comments>
    </item>
    
    <item>
      <title>js总结</title>
      <link>https://aclihui.com/js-code/</link>
      <guid>https://aclihui.com/js-code/</guid>
      <pubDate>Thu, 20 Dec 2018 13:50:48 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;原文地址 &lt;a href=&quot;https://www.aclihui.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.aclihui.com&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;js网页代码总结&quot;&gt;&lt;a href=&quot;#js网页代码总
        
      
      </description>
      
      <content:encoded><![CDATA[<p>原文地址 <a href="https://www.aclihui.com" target="_blank" rel="noopener">https://www.aclihui.com</a></p><h1 id="js网页代码总结"><a href="#js网页代码总结" class="headerlink" title="js网页代码总结"></a>js网页代码总结</h1><h2 id="为什么写"><a href="#为什么写" class="headerlink" title="为什么写"></a>为什么写</h2><p>  当下的网页js有很多，但是总结起来的非常的少，于是乎此文就是为总结js网页代码的一片文章。</p><h2 id="代码区域"><a href="#代码区域" class="headerlink" title="代码区域"></a>代码区域</h2><h3 id="标题栏切换特效"><a href="#标题栏切换特效" class="headerlink" title="标题栏切换特效"></a>标题栏切换特效</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--标题栏切换特效 start--&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> OriginTitile = <span class="built_in">document</span>.title;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">$(<span class="string">'[rel="shortcut icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"//www.hzv5.cn/logo.jpg"</span>);</span><br><span class="line"><span class="built_in">document</span>.title = <span class="string">'(⊙_⊙) 哎呀！崩溃啦~ •'</span> + OriginTitile;</span><br><span class="line">clearTimeout(titleTime);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$(<span class="string">'[rel="shortcut icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"//hzv5.cn/logo.jpg"</span>);</span><br><span class="line"><span class="built_in">document</span>.title = <span class="string">'๑乛◡乛๑ 又好啦，嘿嘿~ •'</span> + OriginTitile;</span><br><span class="line">titleTime = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">document</span>.title = OriginTitile;</span><br><span class="line">&#125;, <span class="number">1500</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!--标题栏切换特效 end--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="给复制内容增加版权信息"><a href="#给复制内容增加版权信息" class="headerlink" title="给复制内容增加版权信息"></a>给复制内容增加版权信息</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--给复制内容增加版权信息 start--&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">"body"</span>).on(<span class="string">'copy'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span>.getSelection == <span class="string">"undefined"</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">var</span> body_element = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> selection = <span class="built_in">window</span>.getSelection();</span><br><span class="line">    <span class="keyword">if</span> ((<span class="string">""</span> + selection).length &lt; <span class="number">30</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">var</span> newdiv = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">    newdiv.style.position = <span class="string">'absolute'</span>;</span><br><span class="line">    newdiv.style.left = <span class="string">'-99999px'</span>;</span><br><span class="line">    body_element.appendChild(newdiv);</span><br><span class="line">    newdiv.appendChild(selection.getRangeAt(<span class="number">0</span>).cloneContents());</span><br><span class="line">    <span class="comment">//提示复制成功代码start</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.getSelection)&#123;</span><br><span class="line">        selection = <span class="built_in">window</span>.getSelection();</span><br><span class="line">        alert(<span class="string">"复制成功~\n若转载请注明出处："</span>+<span class="built_in">document</span>.location.href);</span><br><span class="line">        <span class="comment">//document.write("复制成功~\n转载请注明出处："+document.location.href);</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">document</span>.getSelection)&#123;<span class="comment">//IE10</span></span><br><span class="line">        selection= <span class="built_in">document</span>.getSelection();</span><br><span class="line">        alert(<span class="string">"复制成功~\n若转载请注明出处："</span>+<span class="built_in">document</span>.location.href);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">document</span>.selection)&#123;<span class="comment">//IE6+10-</span></span><br><span class="line">        selection= <span class="built_in">document</span>.selection.createRange().text;</span><br><span class="line">        alert(<span class="string">"复制成功~\n若转载请注明出处："</span>+<span class="built_in">document</span>.location.href);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        selection= <span class="string">""</span>;</span><br><span class="line">        alert(<span class="string">"浏览器兼容问题导致复制失败！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//提示复制成功代码end</span></span><br><span class="line">    <span class="keyword">if</span> (selection.getRangeAt(<span class="number">0</span>).commonAncestorContainer.nodeName == <span class="string">"PRE"</span>) &#123;</span><br><span class="line">        newdiv.innerHTML = <span class="string">"&lt;pre&gt;"</span> + newdiv.innerHTML + <span class="string">"&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    newdiv.innerHTML += <span class="string">"&lt;/br&gt;&lt;/br&gt;若转载请注明出处: &lt;a href='"</span> + <span class="built_in">document</span>.location.href + <span class="string">"'&gt;"</span> + <span class="built_in">document</span>.location.href + <span class="string">"&lt;/a&gt; &amp;copy; hzv5.cn"</span>;</span><br><span class="line">    selection.selectAllChildren(newdiv);</span><br><span class="line">    <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; body_element.removeChild(newdiv); &#125;, <span class="number">200</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!--给复制内容增加版权信息 end--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="鼠标点击出现随机数字"><a href="#鼠标点击出现随机数字" class="headerlink" title="鼠标点击出现随机数字"></a>鼠标点击出现随机数字</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--鼠标点击出现随机数字 start--&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"body"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"天真"</span>,<span class="string">"富强"</span>, <span class="string">"民主"</span>, <span class="string">"文明"</span>, <span class="string">"和谐"</span>, <span class="string">"自由"</span>, <span class="string">"平等"</span>, <span class="string">"公正"</span> ,<span class="string">"法治"</span>, <span class="string">"爱国"</span>, <span class="string">"敬业"</span>, <span class="string">"诚信"</span>, <span class="string">"友善"</span>);</span><br><span class="line">        <span class="keyword">var</span> $i = $(<span class="string">"&lt;span/&gt;"</span>).text(a[a_idx]);</span><br><span class="line">        a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">        <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">        y = e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            <span class="string">"z-index"</span>: <span class="number">99999</span>,</span><br><span class="line">            <span class="string">"top"</span>: y - <span class="number">20</span>,</span><br><span class="line">            <span class="string">"left"</span>: x,</span><br><span class="line">            <span class="string">"position"</span>: <span class="string">"absolute"</span>,</span><br><span class="line">            <span class="string">"font-weight"</span>: <span class="string">"bold"</span>,</span><br><span class="line">            <span class="string">"color"</span>: <span class="string">"#ff0000"</span></span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">"body"</span>).append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">            <span class="string">"top"</span>: y - <span class="number">180</span>,</span><br><span class="line">            <span class="string">"opacity"</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">1800</span>,</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $i.remove();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">window, document, undefined</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> hearts = [];</span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">window</span>.requestAnimationFrame || <span class="built_in">window</span>.webkitRequestAnimationFrame || <span class="built_in">window</span>.mozRequestAnimationFrame || <span class="built_in">window</span>.oRequestAnimationFrame || <span class="built_in">window</span>.msRequestAnimationFrame ||</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">            setTimeout(callback, <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">    init();</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        css(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>);</span><br><span class="line">        attachEvent();</span><br><span class="line">        gameloop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gameloop</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; hearts.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hearts[i].alpha &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">document</span>.body.removeChild(hearts[i].el);</span><br><span class="line">                hearts.splice(i, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            hearts[i].y-= <span class="number">1.6</span>;</span><br><span class="line">            hearts[i].scale += <span class="number">0.01</span>;</span><br><span class="line">            hearts[i].alpha -= <span class="number">0.01</span>;</span><br><span class="line">            hearts[i].el.style.cssText = <span class="string">"left:"</span> + hearts[i].x + <span class="string">"px;top:"</span> + hearts[i].y + <span class="string">"px;opacity:"</span> + hearts[i].alpha + <span class="string">";transform:scale("</span> + hearts[i].scale + <span class="string">","</span> + hearts[i].scale + <span class="string">") rotate(45deg);background:"</span> + hearts[i].color;</span><br><span class="line">        &#125;</span><br><span class="line">        requestAnimationFrame(gameloop);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">attachEvent</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> old = <span class="keyword">typeof</span> <span class="built_in">window</span>.onclick === <span class="string">"function"</span> &amp;&amp; <span class="built_in">window</span>.onclick;</span><br><span class="line">        <span class="built_in">window</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            old &amp;&amp; old();</span><br><span class="line">            createHeart(event);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createHeart</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> d = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        d.className = <span class="string">"heart"</span>;</span><br><span class="line">        hearts.push(&#123;</span><br><span class="line">            el: d,</span><br><span class="line">            x: event.clientX - <span class="number">2</span>,</span><br><span class="line">            y: event.clientY - <span class="number">2</span>,</span><br><span class="line">            scale: <span class="number">1</span>,</span><br><span class="line">            alpha: <span class="number">1</span>,</span><br><span class="line">            color: randomColor()</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">css</span>(<span class="params">css</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> style = <span class="built_in">document</span>.createElement(<span class="string">"style"</span>);</span><br><span class="line">        style.type = <span class="string">"text/css"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            style.appendChild(<span class="built_in">document</span>.createTextNode(css));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ex) &#123;</span><br><span class="line">            style.styleSheet.cssText = css;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(style);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"rgb("</span> + (~~ (<span class="built_in">Math</span>.random() * <span class="number">255</span>)) + <span class="string">","</span> + (~~ (<span class="built_in">Math</span>.random() * <span class="number">255</span>)) + <span class="string">","</span> + (~~ (<span class="built_in">Math</span>.random() * <span class="number">255</span>)) + <span class="string">")"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;!--鼠标点击出现随机数字 end--&gt;</span></span><br></pre></td></tr></table></figure><p>来源: <a href="http://www.hzv5.cn" target="_blank" rel="noopener">http://www.hzv5.cn</a> 的源代码</p>]]></content:encoded>
      
      <comments>https://aclihui.com/js-code/#disqus_thread</comments>
    </item>
    
    <item>
      <title>安卓相机拍照返回</title>
      <link>https://aclihui.com/android-photo/</link>
      <guid>https://aclihui.com/android-photo/</guid>
      <pubDate>Wed, 19 Dec 2018 13:58:04 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;此次安卓是对于android拍照片后返回到前端的imageView的程序&lt;/p&gt;
&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; cla
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>此次安卓是对于android拍照片后返回到前端的imageView的程序</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>Android 7.0对于文件的权限报错问题还是一个大问题,尚且有点问题，本程序兼容安卓前面的版本</p><h1 id="布局问价（xml文件）"><a href="#布局问价（xml文件）" class="headerlink" title="布局问价（xml文件）"></a>布局问价（xml文件）</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"fill_parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span> <span class="attr">android:id</span>=<span class="string">"@+id/imageView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:adjustViewBounds</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minWidth</span>=<span class="string">"150dip"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minHeight</span>=<span class="string">"150dip"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:id</span>=<span class="string">"@+id/btnPhone"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"相册"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span> <span class="attr">android:id</span>=<span class="string">"@+id/btnTakePicture"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"拍照"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Java文件"><a href="#Java文件" class="headerlink" title="Java文件"></a>Java文件</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aclihui.takeaphoto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Bitmap;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.provider.MediaStore;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NONE = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PHOTO_GRAPH = <span class="number">1</span>;<span class="comment">// 拍照</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PHOTO_ZOOM = <span class="number">2</span>; <span class="comment">// 缩放</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PHOTO_RESOULT = <span class="number">3</span>;<span class="comment">// 结果</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String IMAGE_UNSPECIFIED = <span class="string">"image/*"</span>;</span><br><span class="line">    <span class="keyword">private</span> ImageView imageView = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> Button btnPhone = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> Button btnTakePicture = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        imageView = (ImageView) findViewById(R.id.imageView);</span><br><span class="line">        btnPhone = (Button) findViewById(R.id.btnPhone);</span><br><span class="line">        btnPhone.setOnClickListener(onClickListener);</span><br><span class="line">        btnTakePicture = (Button) findViewById(R.id.btnTakePicture);</span><br><span class="line">        btnTakePicture.setOnClickListener(onClickListener);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> View.OnClickListener onClickListener = <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(v==btnPhone)&#123; <span class="comment">//从相册获取图片</span></span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_PICK, <span class="keyword">null</span>);</span><br><span class="line">                intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, IMAGE_UNSPECIFIED);</span><br><span class="line">                startActivityForResult(intent, PHOTO_ZOOM);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(v==btnTakePicture)&#123; <span class="comment">//从拍照获取图片</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MediaStore.ACTION_IMAGE_CAPTURE);</span><br><span class="line">                intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(<span class="keyword">new</span> File(Environment</span><br><span class="line">                        .getExternalStorageDirectory(),<span class="string">"temp.jpg"</span>)));</span><br><span class="line"></span><br><span class="line">                startActivityForResult(intent, PHOTO_GRAPH);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (resultCode == NONE)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">// 拍照</span></span><br><span class="line">        <span class="keyword">if</span> (requestCode == PHOTO_GRAPH) &#123;</span><br><span class="line">            <span class="comment">// 设置文件保存路径</span></span><br><span class="line">            File picture = <span class="keyword">new</span> File(Environment.getExternalStorageDirectory()</span><br><span class="line">                    + <span class="string">"/temp.jpg"</span>);</span><br><span class="line">            startPhotoZoom(Uri.fromFile(picture));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (data == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取相册缩放图片</span></span><br><span class="line">        <span class="keyword">if</span> (requestCode == PHOTO_ZOOM) &#123;</span><br><span class="line">            startPhotoZoom(data.getData());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 处理结果</span></span><br><span class="line">        <span class="keyword">if</span> (requestCode == PHOTO_RESOULT) &#123;</span><br><span class="line">            Bundle extras = data.getExtras();</span><br><span class="line">            <span class="keyword">if</span> (extras != <span class="keyword">null</span>) &#123;</span><br><span class="line">                Bitmap photo = extras.getParcelable(<span class="string">"data"</span>);</span><br><span class="line">                ByteArrayOutputStream stream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                photo.compress(Bitmap.CompressFormat.JPEG, <span class="number">75</span>, stream);<span class="comment">// (0-100)压缩文件</span></span><br><span class="line">                <span class="comment">//此处可以把Bitmap保存到sd卡中，具体请看：http://www.cnblogs.com/linjiqin/archive/2011/12/28/2304940.html</span></span><br><span class="line">                imageView.setImageBitmap(photo); <span class="comment">//把图片显示在ImageView控件上</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startPhotoZoom</span><span class="params">(Uri uri)</span> </span>&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.android.camera.action.CROP"</span>);<span class="comment">//调用Android系统自带的一个图片剪裁页面,</span></span><br><span class="line">        intent.setDataAndType(uri, IMAGE_UNSPECIFIED);</span><br><span class="line">        intent.putExtra(<span class="string">"crop"</span>, <span class="string">"true"</span>);<span class="comment">//进行修剪</span></span><br><span class="line">        <span class="comment">// aspectX aspectY 是宽高的比例</span></span><br><span class="line">        intent.putExtra(<span class="string">"aspectX"</span>, <span class="number">1</span>);</span><br><span class="line">        intent.putExtra(<span class="string">"aspectY"</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// outputX outputY 是裁剪图片宽高</span></span><br><span class="line">        intent.putExtra(<span class="string">"outputX"</span>, <span class="number">300</span>);</span><br><span class="line">        intent.putExtra(<span class="string">"outputY"</span>, <span class="number">500</span>);</span><br><span class="line">        intent.putExtra(<span class="string">"return-data"</span>, <span class="keyword">true</span>);</span><br><span class="line">        startActivityForResult(intent, PHOTO_RESOULT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="兼容性问题"><a href="#兼容性问题" class="headerlink" title="兼容性问题"></a>兼容性问题</h1><p>兼容性问题是一个很大的问题。对于7.0以下的文件比较好解决。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/android-photo/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Windows安装docker</title>
      <link>https://aclihui.com/docker-install-windows/</link>
      <guid>https://aclihui.com/docker-install-windows/</guid>
      <pubDate>Tue, 18 Dec 2018 12:28:01 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;此问题还是有点问题，毕竟一般的系统是win10 Home版本，不是windows 10 pro 或商业版，所以暂时有些问题。&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>此问题还是有点问题，毕竟一般的系统是win10 Home版本，不是windows 10 pro 或商业版，所以暂时有些问题。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/docker-install-windows/#disqus_thread</comments>
    </item>
    
    <item>
      <title>docker基本命令</title>
      <link>https://aclihui.com/docker-base-commend/</link>
      <guid>https://aclihui.com/docker-base-commend/</guid>
      <pubDate>Mon, 17 Dec 2018 14:44:34 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;忽然发现这么多日子，又在重新学习docker的基本指令，真是很让人头皮发麻啊。QAQ&lt;br&gt;开始啦&lt;/p&gt;
&lt;h1 id=&quot;查看镜像文件do
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>忽然发现这么多日子，又在重新学习docker的基本指令，真是很让人头皮发麻啊。QAQ<br>开始啦</p><h1 id="查看镜像文件docker-images"><a href="#查看镜像文件docker-images" class="headerlink" title="查看镜像文件docker images"></a>查看镜像文件docker images</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images</span><br><span class="line">```  </span><br><span class="line">| 表格名称 | 中文译名 | 中文译名 |备注|</span><br><span class="line">| ------ | ------ | ------ |------|</span><br><span class="line">| REPOSITORY | 仓库 | 来自于哪个仓库 |无|</span><br><span class="line">| TAG | 标签 | 标签信息 |无|</span><br><span class="line">| IMAGE | ID | 镜像ID |唯一标示镜像|</span><br><span class="line">| CREATED | 镜像创建的时间 | 镜像ID |标记的是原镜像创建的时间，和自身什么时候下载没关系|</span><br><span class="line">| SIZE | 大小 | 镜像ID |镜像的大小|</span><br><span class="line"><span class="comment"># 查询镜像信息 sudo docker inspect ubuntu:18.04</span></span><br><span class="line">```bash</span><br><span class="line">sudo docker inspect ubuntu:18.04</span><br></pre></td></tr></table></figure><p>特定类型<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker inspect -f &#123;&#123;<span class="string">".Architecture"</span>&#125;&#125; ubuntu:18.04</span><br></pre></td></tr></table></figure></p><h1 id="寻找镜像docker-search"><a href="#寻找镜像docker-search" class="headerlink" title="寻找镜像docker search"></a>寻找镜像docker search</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker search nginx</span><br></pre></td></tr></table></figure><h1 id="删除镜像-docker-rmi"><a href="#删除镜像-docker-rmi" class="headerlink" title="删除镜像 docker rmi"></a>删除镜像 docker rmi</h1><p>这个比较容易理解 docker rm（删除）i(镜像)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rmi NAME:TAG</span><br></pre></td></tr></table></figure></p><p>比如<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo docker rmi ubuntu:18.04</span><br></pre></td></tr></table></figure></p><h1 id="查看正在运行的容器"><a href="#查看正在运行的容器" class="headerlink" title="查看正在运行的容器"></a>查看正在运行的容器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps</span><br></pre></td></tr></table></figure><h1 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器ID</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/docker-base-commend/#disqus_thread</comments>
    </item>
    
    <item>
      <title>安卓简单登录界面</title>
      <link>https://aclihui.com/android-login/</link>
      <guid>https://aclihui.com/android-login/</guid>
      <pubDate>Mon, 17 Dec 2018 10:14:05 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;概括&quot;&gt;&lt;a href=&quot;#概括&quot; class=&quot;headerlink&quot; title=&quot;概括&quot;&gt;&lt;/a&gt;概括&lt;/h1&gt;&lt;p&gt;安卓登录简单登录界面（用户名密码本地保存）时需要注意,校对的时候最好是先定义一个String类型的账号密码，在校对。不会出错。&lt;br&gt;核心代
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="概括"><a href="#概括" class="headerlink" title="概括"></a>概括</h1><p>安卓登录简单登录界面（用户名密码本地保存）时需要注意,校对的时候最好是先定义一个String类型的账号密码，在校对。不会出错。<br>核心代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String name_word=<span class="string">"123456"</span>,password_word=<span class="string">"123456"</span>;</span><br><span class="line">!et_name.getText().toString().trim().equals(name_word)&amp;&amp;et_password.getText().toString().trim().equals(password_word)</span><br></pre></td></tr></table></figure></p><h1 id="详细代码"><a href="#详细代码" class="headerlink" title="详细代码"></a>详细代码</h1><h2 id="java文件"><a href="#java文件" class="headerlink" title="java文件"></a>java文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aclihui.six;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    Button btlogin;</span><br><span class="line">    Button btcancle;</span><br><span class="line">    EditText et_name;</span><br><span class="line">    EditText et_password;</span><br><span class="line">    String name_word=<span class="string">"123456"</span>,password_word=<span class="string">"123456"</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        btlogin = (Button) findViewById(R.id.bt_login);</span><br><span class="line">        btcancle = (Button) findViewById(R.id.bt_cancle);</span><br><span class="line">        et_name = findViewById(R.id.et_name);</span><br><span class="line">        et_password = findViewById(R.id.et_password);</span><br><span class="line">        btcancle.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                et_password.setText(<span class="string">"123456"</span>);</span><br><span class="line">                et_name.setText(<span class="string">"123456"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btlogin.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!et_name.getText().toString().trim().equals(name_word)&amp;&amp;et_password.getText().toString().trim().equals(password_word));</span><br><span class="line">                &#123;</span><br><span class="line">                    Toast.makeText(getApplicationContext(),<span class="string">"账号密码正确"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    Intent intent=<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,front.class);</span><br><span class="line">                    startActivity(intent);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="界面xml文件"><a href="#界面xml文件" class="headerlink" title="界面xml文件"></a>界面xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/et_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentStart</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"141dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"195dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"textPersonName"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"请输入用户名"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/bt_cancle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignTop</span>=<span class="string">"@+id/et_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentEnd</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"143dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"229dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"取消"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/bt_login"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignStart</span>=<span class="string">"@+id/bt_cancle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"145dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"333dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"登录"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/imageView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentStart</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"130dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"31dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:srcCompat</span>=<span class="string">"@tools:sample/avatars[2]"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentStart</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"42dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"205dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"用户名"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/textView2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignStart</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"218dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"密码"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/et_password"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignStart</span>=<span class="string">"@+id/et_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"200dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">"10"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"请输入密码"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/android-login/#disqus_thread</comments>
    </item>
    
    <item>
      <title>MVC和MMVC架构</title>
      <link>https://aclihui.com/mvc-and-mmvc/</link>
      <guid>https://aclihui.com/mvc-and-mmvc/</guid>
      <pubDate>Sun, 16 Dec 2018 12:11:52 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;初因&quot;&gt;&lt;a href=&quot;#初因&quot; class=&quot;headerlink&quot; title=&quot;初因&quot;&gt;&lt;/a&gt;初因&lt;/h1&gt;&lt;p&gt;原文地址：&lt;a href=&quot;https://www.aclihui.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="初因"><a href="#初因" class="headerlink" title="初因"></a>初因</h1><p>原文地址：<a href="https://www.aclihui.com" target="_blank" rel="noopener">https://www.aclihui.com</a><br>深入了解MVV 架构和MMVC架构,为以后软件设计打下基础。</p><h1 id="MVC架构"><a href="#MVC架构" class="headerlink" title="MVC架构"></a>MVC架构</h1><p>M:Model模型 V: View视图 C:Controller控制器</p><h2 id="模型（来自维基百科的解释-注1）"><a href="#模型（来自维基百科的解释-注1）" class="headerlink" title="模型（来自维基百科的解释,注1）"></a>模型（来自维基百科的解释,注1）</h2><p>M:用于封装与应用程序的业务逻辑相关的数据以及对数据的处理方法。“ Model ”有对数据直接访问的权力，例如对数据库的访问。“Model”不依赖“View”和“Controller”，也就是说， Model 不关心它会被如何显示或是如何被操作。但是 Model 中数据的变化一般会通过一种刷新机制被公布。为了实现这种机制，那些用于监视此 Model 的 View 必须事先在此 Model 上注册，从而，View 可以了解在数据 Model 上发生的改变。（比如：观察者模式（软件设计模式））  </p><h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>V:能够实现数据有目的的显示（理论上，这不是必需的）。在 View 中一般没有程序上的逻辑。为了实现 View 上的刷新功能，View 需要访问它监视的数据模型（Model），因此应该事先在被它监视的数据那里注册。    </p><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><p>起到不同层面间的组织作用，用于控制应用程序的流程。它处理事件并作出响应。“事件”包括用户的行为和数据 Model 上的改变。<br>展示图:<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181216203152.png" alt=""><br>此时我们发现，相互关系如图所示。<br>M负责控制View的显示，V需要时刻监视M的情况，而C则为相事件对M进行处理。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>MVC架构是一种业务逻辑和数据分离的方法，<strong>这个方法假设前提是如果业务逻辑被聚集到一个部件里面，而且页面和用户围绕数据的交互能被改进和个性化而不需要重新编写业务逻辑</strong>。MVC被独特的发展起来用于映射传统的输入，处理和输出功能在一个逻辑的图形化界面结构中。(注2)</p><h1 id="MMVC"><a href="#MMVC" class="headerlink" title="MMVC"></a>MMVC</h1><p>MMVC是在MVC中间加入一层ViewModel起到适配（一些Model建模为了与其他系统实现完全隔离，存储的只是id，此处需要根据id去组装起所需的数据）,隔离扩展。</p><h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><p>完全隔离的Model只会被引用（监视），不会引用外部的东西，通常只会对需要的数据进行建模（比如id），不需要的数据则不需要进行建模。</p><h2 id="View"><a href="#View" class="headerlink" title="View"></a>View</h2><p>承担各种界面事件交互逻辑，其核心关键词是：数据展示、操作。其中除了特定的操作、交互功能外，最为重要的三个功能点，即是初始化、刷新、返回值、事件。        </p><h2 id="ViewModle"><a href="#ViewModle" class="headerlink" title="ViewModle"></a>ViewModle</h2><p>网站上没有多少介绍</p><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>和MVC架构基本相同。</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>1.<br>2.<a href="https://www.cnblogs.com/suriyel/articles/3332408.html" target="_blank" rel="noopener">https://www.cnblogs.com/suriyel/articles/3332408.html</a></p><h2 id="MVC实现"><a href="#MVC实现" class="headerlink" title="MVC实现"></a>MVC实现</h2><h3 id="MFC"><a href="#MFC" class="headerlink" title="MFC"></a>MFC</h3><p>微软所推出的MFC Document/View架构是早期对于MVC模式的实现，MFC将程序分成CView以及CDocument两大类别，其中的Document对应MVC中的 Model ，View 相当于MVC中的 View＋Controller，再加上CWinApp类别，合成三大项。但是基本上MFC是一个失败的MVC模式作品。</p><p>由于MFC之下的Document/View 定义过于模糊，未将Controller（MessageMap）部分取出，因此 Controller 可以置入 View 或Document，但不管置入哪一方面，都会与View或Document绑死，没有弹性。</p><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><p>Java 平台企业版 (J2EE)<br>和其他的各种框架不一样，J2EE为模型对象（Model Objects）定义了一个规范。</p><p>视图(View)<br>在J2EE应用程序中，视图（View）可能由Java Server Page(JSP)担任。生成 View 的代码则可能是一个servlet的一部分，特别是在客户端服务端交互的时候。<br>控制器（Controller）<br>J2EE应用中，Controller 可能是一个servlet。<br>除了可直接以J2EE来撰写外，亦可用其他框架来撰写，常见的有Struts2、Spring Framework……等等。<br>模型（Model）<br>Model 则是由一个实体Bean来实现。<br>Java Swing<br>Swing是一个标准的MVC结构. ComponentUI代表 View, 负责描画组件. 组件尤其 Model 层, 比如JTextField的Document, JTable的TableModel, JTree的TreeModel等等. 而Control可能不是很明显, 我们或许可以简单的将其Event机制看作一个Swing团队开发给开发者的 Controller。</p><p>作为Java开发者, 如果想理解MVC的结构, 学习Swing的确是个不错的选择.</p><h3 id="NET"><a href="#NET" class="headerlink" title=".NET"></a>.NET</h3><p>ASP.NET<br>在ASP.NET中，针对视图（View）和控制器（Controller）的模式没有被很好地定义。而模型（Model）则留给开发者去设计。</p><p>视图（View）<br>ASPX和ASCX文件被用来处理 View 的职责。在这个设计中 View 实际上是从 Controller 继承而来。这个和Smalltalk的实施有所不同，在Smalltalk中不同的类都有指针互相指向对方.<br>控制器（Controllers）<br>Controller 的职责被分割成两部分。事件（Event）的产生和传输是框架的一部分，更明确的说是Page和Control两个类。而事件的处理则在分离的代码中实现。<br>模型（Model）<br>ASP.NET 不严格需要一个 Model。开发者可以自行选择创建一个 Model 类，但是很多人选择放弃这一步，直接把事件处理放在 Controller 里处理任何计算、数据保存等等。但用 Model 来包含商业逻辑和数据访问是可实现的。<br>ASP.NET MVC<br>ASP.NET MVC，在2013年10月17日稳定版本已到5.0版。[3]<br>此外，在ASP.NET MVC中，一般情况下Model通常搭配LINQ to SQL类别（使用O/R Designer工具所制作而成的DBML档）或ADO.NET实体数据模型（Entity Data Model，使用ADO.NET Entity Framework制作出的EDMX档）来实现。</p><h3 id="Windows-Forms"><a href="#Windows-Forms" class="headerlink" title="Windows Forms"></a>Windows Forms</h3><p>在WinForms中，这个针对视图（View）和控制器（Controller）的模式已经很好的定义。而模型（Model）则留给开发者去设计。</p><p>视图（View）<br>由Form或者Control类继承来的一个类处理 View 的职责。在WinForm这个例子中 View 和 Controller 被编译在同一个类中，这个和ASP.NET不同。<br>控制器（Controller）<br>Controller 的职责被分割成三部分。事件（Event）的产生和传输是操作系统的一部分。在.Net框架中Form和Control类将不同的事件转发给相应的事件处理器。而事件的处理则在分离的代码中实现。<br>模型（Model）<br>就像ASP.NET一样，WinForm不严格需要一个 Model。开发者可以自行选择创建一个 Model 类，但是很多人选择放弃这一步，直接把事件处理放在 Controller 里处理任何计算、数据保存等等。也就是说用Model来包含商业逻辑和数据访问。</p><h3 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h3><p>Catalyst和Jifty是透过Perl语言所开发出来的Web Framework，都采用Model-View-Controller 架构。Catalyst 本身只是做了 Controller，View 和 Model 让开发者自由选用 CPAN 上的模块开发，例如 Template 和 Template Declare 都可用来产生视图。Jifty 将 MVC 完全实做完成，View 的部分在早期版本使用 Mason 实做，较新版本使用 Template Declare。</p><h3 id="Ruby-on-Rails"><a href="#Ruby-on-Rails" class="headerlink" title="Ruby on Rails"></a>Ruby on Rails</h3><p>Ruby on Rails是透过Ruby语言所开发出来的 Web Framework，也是采用 Model-View-Controller 架构。Model 部分使用 Active Record 概念实做，加上 Migration 机制，使得其 Model 结构非常容易控制。</p><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><p>Python 有许多的 MVC 架构。最常用的有 Django 和 TurboGears。</p><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><p>Backbone.js<br>Angular.js<br>Ember.js<br>JavaScriptMVC<br>Model-View-Controller (MVC) with JavaScript</p><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>CakePHP<br>CodeIgniter<br>prado<br>symfony<br>Yii Framework<br>Zend Framework<br>Phalcon<br>Laravel<br>ThinkPHP</p><h3 id="ActionScript-3"><a href="#ActionScript-3" class="headerlink" title="ActionScript 3"></a>ActionScript 3</h3><p>PureMVC Standard for ActionScript 3</p>]]></content:encoded>
      
      <comments>https://aclihui.com/mvc-and-mmvc/#disqus_thread</comments>
    </item>
    
    <item>
      <title>第一次安装docker</title>
      <link>https://aclihui.com/docker-first-install/</link>
      <guid>https://aclihui.com/docker-first-install/</guid>
      <pubDate>Sat, 15 Dec 2018 14:56:56 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;这是第一次安装docker&quot;&gt;&lt;a href=&quot;#这是第一次安装docker&quot; class=&quot;headerlink&quot; title=&quot;这是第一次安装docker&quot;&gt;&lt;/a&gt;这是第一次安装docker&lt;/h1&gt;&lt;p&gt;原文地址：&lt;a href=&quot;https://www.
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="这是第一次安装docker"><a href="#这是第一次安装docker" class="headerlink" title="这是第一次安装docker"></a>这是第一次安装docker</h1><p>原文地址：<a href="https://www.aclihui.com" target="_blank" rel="noopener">https://www.aclihui.com</a><br>之所以是第一次安装docker就是因为docker的安装确实消耗一些时间，这次直接采用在外网进行安装，加速安装的进程。下面正式开始。</p><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><h2 id="第一步，开新的服务器"><a href="#第一步，开新的服务器" class="headerlink" title="第一步，开新的服务器"></a>第一步，开新的服务器</h2><p>此步骤比较的简单，我使用服务器是digitalOcean的服务器。随开随用，随关随停。<br>置如下: centos7.5<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181215230213.png" alt=""></p><h2 id="首先检查内核版本号（必须在3-10以上）"><a href="#首先检查内核版本号（必须在3-10以上）" class="headerlink" title="首先检查内核版本号（必须在3.10以上）"></a>首先检查内核版本号（必须在3.10以上）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><h2 id="将yum包更新到最新版本"><a href="#将yum包更新到最新版本" class="headerlink" title="将yum包更新到最新版本"></a>将yum包更新到最新版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br></pre></td></tr></table></figure><h2 id="卸载旧版本（因为我是首次安装不存在旧版本）"><a href="#卸载旧版本（因为我是首次安装不存在旧版本）" class="headerlink" title="卸载旧版本（因为我是首次安装不存在旧版本）"></a>卸载旧版本（因为我是首次安装不存在旧版本）</h2><p>卸载旧版本代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker  docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure></p><h2 id="安装所需要的依赖包"><a href="#安装所需要的依赖包" class="headerlink" title="安装所需要的依赖包"></a>安装所需要的依赖包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><h2 id="配置docker源"><a href="#配置docker源" class="headerlink" title="配置docker源"></a>配置docker源</h2><p>首先检查docker源存不存在<br>此时我发现我的centos7.5的docker源是存在的，因此直接安装就好。<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181215231806.png" alt=""><br>若果不存在 就先添加docker源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></p><h2 id="检查版本号（因为直接安装和加源安装并不相同，因此我的此步骤省略了）"><a href="#检查版本号（因为直接安装和加源安装并不相同，因此我的此步骤省略了）" class="headerlink" title="检查版本号（因为直接安装和加源安装并不相同，因此我的此步骤省略了）"></a>检查版本号（因为直接安装和加源安装并不相同，因此我的此步骤省略了）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><h2 id="此时检查版本号（验证是否安装成功）"><a href="#此时检查版本号（验证是否安装成功）" class="headerlink" title="此时检查版本号（验证是否安装成功）"></a>此时检查版本号（验证是否安装成功）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181215232248.png" alt=""></p><h2 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181215232413.png" alt=""><br>此时启动完毕。安装流程结束。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/docker-first-install/#disqus_thread</comments>
    </item>
    
    <item>
      <title>类似于微信下拉菜单</title>
      <link>https://aclihui.com/Android_XiaLaMenu/</link>
      <guid>https://aclihui.com/Android_XiaLaMenu/</guid>
      <pubDate>Sat, 15 Dec 2018 14:37:57 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;安卓第一个demo-下拉菜单&quot;&gt;&lt;a href=&quot;#安卓第一个demo-下拉菜单&quot; class=&quot;headerlink&quot; title=&quot;安卓第一个demo 下拉菜单&quot;&gt;&lt;/a&gt;安卓第一个demo 下拉菜单&lt;/h1&gt;&lt;h2 id=&quot;第一步新建项目&quot;&gt;&lt;a href=
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="安卓第一个demo-下拉菜单"><a href="#安卓第一个demo-下拉菜单" class="headerlink" title="安卓第一个demo 下拉菜单"></a>安卓第一个demo 下拉菜单</h1><h2 id="第一步新建项目"><a href="#第一步新建项目" class="headerlink" title="第一步新建项目"></a>第一步新建项目</h2><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181215223932.png" alt=""></p><h2 id="第二步-选择api"><a href="#第二步-选择api" class="headerlink" title="第二步 选择api"></a>第二步 选择api</h2><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181215224025.png" alt=""></p><h2 id="第三步-选择空白模板"><a href="#第三步-选择空白模板" class="headerlink" title="第三步  选择空白模板"></a>第三步  选择空白模板</h2><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181215224124.png" alt=""></p><h2 id="第四步-保持默认"><a href="#第四步-保持默认" class="headerlink" title="第四步 保持默认"></a>第四步 保持默认</h2><p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181215224143.png" alt=""></p><h2 id="剩下的核心代码-明天补全。"><a href="#剩下的核心代码-明天补全。" class="headerlink" title="剩下的核心代码 明天补全。"></a>剩下的核心代码 明天补全。</h2>]]></content:encoded>
      
      <comments>https://aclihui.com/Android_XiaLaMenu/#disqus_thread</comments>
    </item>
    
    <item>
      <title>去除教务处时间去除</title>
      <link>https://aclihui.com/web-pinggu-time/</link>
      <guid>https://aclihui.com/web-pinggu-time/</guid>
      <pubDate>Sun, 09 Dec 2018 03:51:15 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt; 转载请注明来源(&lt;a href=&quot;https://www.aclihui.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.aclihui.com&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; clas
        
      
      </description>
      
      <content:encoded><![CDATA[<p> 转载请注明来源(<a href="https://www.aclihui.com" target="_blank" rel="noopener">https://www.aclihui.com</a>)</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p> <img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181209121959.png" alt=""><br> <img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/20181209122129.png" alt=""></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>教务处网站对教学评估的时间做了限制，每一个必须等两分钟的限制，而且不可以打开多个界面进行评估，因此对于学过js的我来说想去掉这个限制。如果想直接解决问题，请直接翻到最后解决方案。<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/web-time-limit.png" alt=""></p><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><p>首先是看代码<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/code-time-soursecode.png" alt=""><br>代码显示id为RemainM的显示的是时间，相对应的也是控制的一个控件，从RemainM入手，首先开始在html代码中搜RemainM的相关代码<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/js-time-code.png" alt=""><br>从代码<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/js-code-submite.png" alt=""><br>可以看出来<br><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/js-code-yanzhen.png" alt=""><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (flag) &#123;</span><br><span class="line">           <span class="keyword">var</span> before_html = $(<span class="string">"#buttonSubmit"</span>).html();</span><br><span class="line">           <span class="comment">//window.document.StDaForm.submit();</span></span><br><span class="line">           <span class="keyword">var</span> pageConditions = $(<span class="built_in">document</span>.StDaForm).serialize();</span><br></pre></td></tr></table></figure></p><p>if flag是关键所在</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>打开chrome console<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag=<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>回车<br>提交解决(<em>^▽^</em>)</p>]]></content:encoded>
      
      <comments>https://aclihui.com/web-pinggu-time/#disqus_thread</comments>
    </item>
    
    <item>
      <title>网页JavaScript函数重写--解决JS代码时间限制</title>
      <link>https://aclihui.com/web-console-code/</link>
      <guid>https://aclihui.com/web-console-code/</guid>
      <pubDate>Fri, 07 Dec 2018 14:49:08 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;占位–明天补上(&lt;em&gt;╹▽╹&lt;/em&gt;)。&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p>占位–明天补上(<em>╹▽╹</em>)。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/web-console-code/#disqus_thread</comments>
    </item>
    
    <item>
      <title>寻找丢失的友链</title>
      <link>https://aclihui.com/find-friend/</link>
      <guid>https://aclihui.com/find-friend/</guid>
      <pubDate>Mon, 03 Dec 2018 07:30:55 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;因为更换了主题，友链找不到了，各位大佬补链请发邮件到i-aclihui-com-或者直接留言。&quot;&gt;&lt;a href=&quot;#因为更换了主题，友链找不到了，各位大佬补链请发邮件到i-aclihui-com-或者直接留言。&quot; class=&quot;headerlink&quot; title
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="因为更换了主题，友链找不到了，各位大佬补链请发邮件到i-aclihui-com-或者直接留言。"><a href="#因为更换了主题，友链找不到了，各位大佬补链请发邮件到i-aclihui-com-或者直接留言。" class="headerlink" title="因为更换了主题，友链找不到了，各位大佬补链请发邮件到i#aclihui.com 或者直接留言。"></a>因为更换了主题，友链找不到了，各位大佬补链请发邮件到i#aclihui.com 或者直接留言。</h1>]]></content:encoded>
      
      <comments>https://aclihui.com/find-friend/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://aclihui.com/hello-world/</link>
      <guid>https://aclihui.com/hello-world/</guid>
      <pubDate>Sat, 01 Dec 2018 12:22:54 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>https://aclihui.com/hello-world/#disqus_thread</comments>
    </item>
    
    <item>
      <title>安卓菜单</title>
      <link>https://aclihui.com/android-menu/</link>
      <guid>https://aclihui.com/android-menu/</guid>
      <pubDate>Fri, 23 Nov 2018 04:54:45 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;安卓菜单有点重要，在这里记录一下&lt;/p&gt;
&lt;h1 id=&quot;main-xml&quot;&gt;&lt;a href=&quot;#main-xml&quot; class=&quot;headerlink&quot; title=&quot;main.xml&quot;&gt;&lt;/a&gt;main.xml&lt;/h1&gt;&lt;figure class=&quot;highlight 
        
      
      </description>
      
      <content:encoded><![CDATA[<p>安卓菜单有点重要，在这里记录一下</p><h1 id="main-xml"><a href="#main-xml" class="headerlink" title="main.xml"></a>main.xml</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/customStyle"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"191dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="java-代码"><a href="#java-代码" class="headerlink" title="java 代码"></a>java 代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aclihui.menu;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.widget.RelativeLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    RelativeLayout customStyle;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> MENU_00=Menu.FIRST;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> MENU_01=Menu.FIRST+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> MENU_02=Menu.FIRST+<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    menu.add(<span class="number">0</span>,MENU_00,<span class="number">1</span>,<span class="string">"红色"</span>);</span><br><span class="line">    menu.add(<span class="number">0</span>,MENU_01,<span class="number">2</span>,<span class="string">"灰色"</span>);</span><br><span class="line">    menu.add(<span class="number">0</span>,MENU_02,<span class="number">3</span>,<span class="string">"黑色"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        customStyle=(RelativeLayout)findViewById(R.id.customStyle);</span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                customStyle.setBackgroundColor(Color.RED);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                customStyle.setBackgroundColor(Color.GRAY);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                customStyle.setBackgroundColor(Color.BLACK);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/android-menu/#disqus_thread</comments>
    </item>
    
    <item>
      <title>主题</title>
      <link>https://aclihui.com/newtheme/</link>
      <guid>https://aclihui.com/newtheme/</guid>
      <pubDate>Sat, 03 Nov 2018 14:58:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;2018-12-1-使用indigo主题修改版作为网站主题&quot;&gt;&lt;a href=&quot;#2018-12-1-使用indigo主题修改版作为网站主题&quot; class=&quot;headerlink&quot; title=&quot;2018-12-1 使用indigo主题修改版作为网站主题&quot;&gt;&lt;/a
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="2018-12-1-使用indigo主题修改版作为网站主题"><a href="#2018-12-1-使用indigo主题修改版作为网站主题" class="headerlink" title="2018-12-1 使用indigo主题修改版作为网站主题"></a>2018-12-1 使用indigo主题修改版作为网站主题</h1><h1 id="2018-11-03-22-58-43-星期六挖坑写主题，在新主题写完发布前暂不更新QAQ"><a href="#2018-11-03-22-58-43-星期六挖坑写主题，在新主题写完发布前暂不更新QAQ" class="headerlink" title="2018-11-03 22:58:43 星期六挖坑写主题，在新主题写完发布前暂不更新QAQ."></a>2018-11-03 22:58:43 星期六挖坑写主题，在新主题写完发布前暂不更新QAQ.</h1>]]></content:encoded>
      
      <comments>https://aclihui.com/newtheme/#disqus_thread</comments>
    </item>
    
    <item>
      <title>嘿嘿，生快哦。</title>
      <link>https://aclihui.com/bdg/</link>
      <guid>https://aclihui.com/bdg/</guid>
      <pubDate>Fri, 05 Oct 2018 07:51:00 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;img src=&quot;https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/gbd.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

        
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/gbd.jpg" alt=""></p>]]></content:encoded>
      
      <comments>https://aclihui.com/bdg/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-628. Maximum Product of Three Numbers</title>
      <link>https://aclihui.com/leetcode-628-maximum-product-of-three-numbers/</link>
      <guid>https://aclihui.com/leetcode-628-maximum-product-of-three-numbers/</guid>
      <pubDate>Tue, 04 Sep 2018 13:12:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an integer array, find three numbers whose product is maximum an
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an integer array, find three numbers whose product is maximum and output the maximum product.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3]</span><br><span class="line">Output: 6</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,4]</span><br><span class="line">Output: 24</span><br></pre></td></tr></table></figure></p><p>Note:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].  </span><br><span class="line">Multiplication of any three numbers in the input won&apos;t exceed the range of 32-bit signed integer.</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一道读题的题目，这是第二次出现快速排序，分析在注释中。</p><h4 id="代码-注释"><a href="#代码-注释" class="headerlink" title="代码+注释"></a>代码+注释</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 设计知识点：</span></span><br><span class="line"><span class="comment">            快速排序（减少时间复杂度，减少时间）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> *  错误用例</span></span><br><span class="line"><span class="comment"> *  Input:</span></span><br><span class="line"><span class="comment">    [-4,-3,-2,-1,60]</span></span><br><span class="line"><span class="comment">    Output:</span></span><br><span class="line"><span class="comment">    120</span></span><br><span class="line"><span class="comment">    Expected:</span></span><br><span class="line"><span class="comment">    720</span></span><br><span class="line"><span class="comment"> * 错误：</span></span><br><span class="line"><span class="comment"> *          1. 测试用例中出现了负数导致产品的值出现了比较错误，使实际的输出值不是最大</span></span><br><span class="line"><span class="comment"> * 解决方案</span></span><br><span class="line"><span class="comment"> *          1.采用将全部的数值转换成整数的方案</span></span><br><span class="line"><span class="comment"> * 缺点</span></span><br><span class="line"><span class="comment"> *          1.会使得最后的结果出错(错误无法避免，切换解决方案)</span></span><br><span class="line"><span class="comment"> *方案2：</span></span><br><span class="line"><span class="comment"> *          分别判断，分别返回</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 错误用例</span></span><br><span class="line"><span class="comment"> * [722,634,-504,-379,163,-613,-842,-578,750,951,-158,30,-238,-392,-487,-797,-157,-374,999,-5,-521,-879,-858,382,626,803,-347,903,-205,57,-342,186,-736,17,83,726,-960,343,-984,937,-758,-122,577,-595,-544,-559,903,-183,192,825,368,-674,57,-959,884,29,-681,-339,582,969,-95,-455,-275,205,-548,79,258,35,233,203,20,-936,878,-868,-458,-882,867,-664,-892,-687,322,844,-745,447,-909,-586,69,-88,88,445,-553,-666,130,-640,-918,-7,-420,-368,250,-786]</span></span><br><span class="line"><span class="comment"> *错误2 ：</span></span><br><span class="line"><span class="comment"> *      低估了数组的大小</span></span><br><span class="line"><span class="comment"> *解决方案:</span></span><br><span class="line"><span class="comment"> *     扩充int到long</span></span><br><span class="line"><span class="comment"> * 看了下大佬的还真是棒 而且简单的很 site:http://www.cnblogs.com/grandyang/p/7084957.html</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quiksort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = low;</span><br><span class="line">    <span class="keyword">int</span> j = high;</span><br><span class="line">    <span class="keyword">int</span> temp = a[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( low &gt; high)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>((a[j] &gt;= temp) &amp;&amp; (i &lt; j))</span><br><span class="line">        &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        <span class="keyword">while</span>((a[i] &lt;= temp) &amp;&amp; (i &lt; j))</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        a[j]= a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    a[i] = temp;</span><br><span class="line">    quiksort(a,low,i<span class="number">-1</span>);</span><br><span class="line">    quiksort(a,j+<span class="number">1</span>,high);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maximumProduct</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    quiksort(nums,<span class="number">0</span>,numsSize<span class="number">-1</span>);</span><br><span class="line"><span class="comment">//    当nums[numsSize-1]&lt;=0 即全部均小于零 则 nums[0]*nums[1]*nums[numsSize-1]最大</span></span><br><span class="line">    <span class="comment">/*if(nums[numsSize-1]&lt;=0)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        return  nums[0]*nums[1]*nums[numsSize-1];</span></span><br><span class="line"><span class="comment">    &#125; else if(nums[numsSize-2]&lt;0)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">//        此时 nums[numsSize-1]&gt;0 &amp;&amp;nums[numsSize-2]&lt;0] 此时返回nums[0]*nums[1]*nums[numsSize-1]</span></span><br><span class="line"><span class="comment">        return  nums[0]*nums[1]*nums[numsSize-1];</span></span><br><span class="line"><span class="comment">    &#125; else if(nums[numsSize-2]==0) &#123;</span></span><br><span class="line"><span class="comment">//        此时直接返回0</span></span><br><span class="line"><span class="comment">        return 0;</span></span><br><span class="line"><span class="comment">    &#125;else if(nums[numsSize-3]&lt;=0)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        return nums[numsSize-1]*nums[numsSize-2]*nums[numsSize-3];</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    return nums[numsSize-3]*nums[numsSize-2]*nums[numsSize-1];*/</span></span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>,max1;</span><br><span class="line">    max=nums[numsSize<span class="number">-1</span>]*nums[<span class="number">0</span>]*nums[<span class="number">1</span>];</span><br><span class="line">    max1=nums[numsSize<span class="number">-1</span>]*nums[numsSize<span class="number">-2</span>]*nums[numsSize<span class="number">-3</span>];</span><br><span class="line">    <span class="keyword">if</span>(max&gt;max1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>  max1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=&#123;<span class="number">722</span>,<span class="number">634</span>,<span class="number">-504</span>,<span class="number">-379</span>,<span class="number">163</span>,<span class="number">-613</span>,<span class="number">-842</span>,<span class="number">-578</span>,<span class="number">750</span>,<span class="number">951</span>,<span class="number">-158</span>,<span class="number">30</span>,<span class="number">-238</span>,<span class="number">-392</span>,<span class="number">-487</span>,<span class="number">-797</span>,<span class="number">-157</span>,<span class="number">-374</span>,<span class="number">999</span>,<span class="number">-5</span>,<span class="number">-521</span>,<span class="number">-879</span>,<span class="number">-858</span>,<span class="number">382</span>,<span class="number">626</span>,<span class="number">803</span>,<span class="number">-347</span>,<span class="number">903</span>,<span class="number">-205</span>,<span class="number">57</span>,<span class="number">-342</span>,<span class="number">186</span>,<span class="number">-736</span>,<span class="number">17</span>,<span class="number">83</span>,<span class="number">726</span>,<span class="number">-960</span>,<span class="number">343</span>,<span class="number">-984</span>,<span class="number">937</span>,<span class="number">-758</span>,<span class="number">-122</span>,<span class="number">577</span>,<span class="number">-595</span>,<span class="number">-544</span>,<span class="number">-559</span>,<span class="number">903</span>,<span class="number">-183</span>,<span class="number">192</span>,<span class="number">825</span>,<span class="number">368</span>,<span class="number">-674</span>,<span class="number">57</span>,<span class="number">-959</span>,<span class="number">884</span>,<span class="number">29</span>,<span class="number">-681</span>,<span class="number">-339</span>,<span class="number">582</span>,<span class="number">969</span>,<span class="number">-95</span>,<span class="number">-455</span>,<span class="number">-275</span>,<span class="number">205</span>,<span class="number">-548</span>,<span class="number">79</span>,<span class="number">258</span>,<span class="number">35</span>,<span class="number">233</span>,<span class="number">203</span>,<span class="number">20</span>,<span class="number">-936</span>,<span class="number">878</span>,<span class="number">-868</span>,<span class="number">-458</span>,<span class="number">-882</span>,<span class="number">867</span>,<span class="number">-664</span>,<span class="number">-892</span>,<span class="number">-687</span>,<span class="number">322</span>,<span class="number">844</span>,<span class="number">-745</span>,<span class="number">447</span>,<span class="number">-909</span>,<span class="number">-586</span>,<span class="number">69</span>,<span class="number">-88</span>,<span class="number">88</span>,<span class="number">445</span>,<span class="number">-553</span>,<span class="number">-666</span>,<span class="number">130</span>,<span class="number">-640</span>,<span class="number">-918</span>,<span class="number">-7</span>,<span class="number">-420</span>,<span class="number">-368</span>,<span class="number">250</span>,<span class="number">-786</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize= <span class="keyword">sizeof</span>(nums)/ <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,maximumProduct(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-628-maximum-product-of-three-numbers/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-268. Missing Number</title>
      <link>https://aclihui.com/leetcode-268-missing-number/</link>
      <guid>https://aclihui.com/leetcode-268-missing-number/</guid>
      <pubDate>Mon, 03 Sep 2018 13:11:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array containing n distinct numbers taken from 0, 1, 2, …, n,
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array containing n distinct numbers taken from 0, 1, 2, …, n, find the one that is missing from the array.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,0,1]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [9,6,4,2,3,5,7,0,1]</span><br><span class="line">Output: 8</span><br></pre></td></tr></table></figure></p><p>Note:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>思路：<br> 找出最大值，进行判断,看那一位数字缺少。</p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=numsSize+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//    计算出相对应的n</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;nums[i])</span><br><span class="line">        &#123;</span><br><span class="line">            n=nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    求所缺少的数值是那个</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(;j&lt;numsSize;j++)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            若存在 相对应的数值则 flag=1</span></span><br><span class="line">            <span class="keyword">if</span>(i==nums[j])</span><br><span class="line">            &#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>&amp;&amp;j==numsSize)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize= <span class="keyword">sizeof</span>(nums)/ <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,missingNumber(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-268-missing-number/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-217. Contains Duplicate</title>
      <link>https://aclihui.com/leetcode-217-contains-duplicate/</link>
      <guid>https://aclihui.com/leetcode-217-contains-duplicate/</guid>
      <pubDate>Sat, 01 Sep 2018 13:57:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array of integers, find if the array contains any duplicates.
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array of integers, find if the array contains any duplicates.</p><p>Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,1]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,4]</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure></p><p>Example 3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,1,1,3,3,4,3,2,4,2]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一个基础的问题 分析比较简单只要，当前的数组中的数值和后面的有相等的就返回true 知道最后一个都没有相同的返回false</p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">containsDuplicate</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(numsSize==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;numsSize;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]==nums[j])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=&#123;<span class="number">3</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize= <span class="keyword">sizeof</span>(nums)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,containsDuplicate(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-217-contains-duplicate/#disqus_thread</comments>
    </item>
    
    <item>
      <title>leetcode-231-power-of-two</title>
      <link>https://aclihui.com/leetcode-231-power-of-two/</link>
      <guid>https://aclihui.com/leetcode-231-power-of-two/</guid>
      <pubDate>Sat, 01 Sep 2018 13:57:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an integer, write a function to determine if it is a power of tw
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an integer, write a function to determine if it is a power of two.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 1</span><br><span class="line">Output: true </span><br><span class="line">Explanation: 20 = 1</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 16</span><br><span class="line">Output: true</span><br><span class="line">Explanation: 24 = 16</span><br></pre></td></tr></table></figure></p><p>Example 3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: 218</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一个求2的N次方的题目，较为基础.<br>第一种解题方法：直接求是不是即可（暴力判断）；<br>第二种解法：位运算，判断所有位数上仅有一位是1其他的是0即可求得。  </p><h4 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">bool isPowerOfTwo(int n) &#123;</span><br><span class="line">            if(n&lt;=0)</span><br><span class="line">            &#123;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">            else if(n==1||n==2)</span><br><span class="line">            &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">            while(n&gt;1)</span><br><span class="line">            &#123;</span><br><span class="line">                if(n%2==1)</span><br><span class="line">                &#123;</span><br><span class="line">                    return false;</span><br><span class="line">                &#125;</span><br><span class="line">                else n=n/2;</span><br><span class="line">            &#125;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n=218;</span><br><span class="line">    printf(&quot;%d&quot;,isPowerOfTwo(n));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-231-power-of-two/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-258. Add Digits</title>
      <link>https://aclihui.com/leetcode-258-add-digits/</link>
      <guid>https://aclihui.com/leetcode-258-add-digits/</guid>
      <pubDate>Thu, 30 Aug 2018 12:51:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given a non-negative integer num, repeatedly add all its digits until 
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: 38</span><br><span class="line">Output: 2 </span><br><span class="line">Explanation: The process is like: 3 + 8 = 11, 1 + 1 = 2. </span><br><span class="line">             Since 2 has only one digit, return it.</span><br></pre></td></tr></table></figure></p><p>Follow up:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could you do it without any loop/recursion in O(1) runtime?</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一个数字根的问题，此题的解法其实有很多，但是最后一句换你能在时间复杂度为1的qiang</p>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-258-add-digits/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-283. Move Zeroes</title>
      <link>https://aclihui.com/leetcode-283-move-zeroes/</link>
      <guid>https://aclihui.com/leetcode-283-move-zeroes/</guid>
      <pubDate>Thu, 30 Aug 2018 12:51:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array nums, write a function to move all 0’s to the end of it
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array nums, write a function to move all 0’s to the end of it while maintaining the relative order of the non-zero elements.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [0,1,0,3,12]</span><br><span class="line">Output: [1,3,12,0,0]</span><br></pre></td></tr></table></figure></p><p>Note:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">You must do this in-place without making a copy of the array.</span><br><span class="line">Minimize the total number of operations.</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>此题比较基础，这就是冒泡排序的变形版，题目的要求不能新开辟新的数组空间，将所有的操作的的操作步数最小化。   </p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">moveZeroes</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;numsSize ; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp=nums[i];</span><br><span class="line">                nums[i]=nums[j];</span><br><span class="line">                nums[j]=temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=&#123;<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize=<span class="keyword">sizeof</span>(nums)/ <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出为[1,3,12,0,0]</span></span><br><span class="line"><span class="comment">//    执行函数</span></span><br><span class="line">    moveZeroes(nums,numsSize);</span><br><span class="line"><span class="comment">//    输出每个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d,"</span>,nums[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-283-move-zeroes/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-292. Nim Game</title>
      <link>https://aclihui.com/leetcode-292-nim-game/</link>
      <guid>https://aclihui.com/leetcode-292-nim-game/</guid>
      <pubDate>Wed, 29 Aug 2018 14:45:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;You are playing the following Nim Game with your friend: There is a he
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.</p><p>Both of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Input: 4</span><br><span class="line">Output: false </span><br><span class="line">Explanation: If there are 4 stones in the heap, then you will never win the game;</span><br><span class="line">             No matter 1, 2, or 3 stones you remove, the last stone will always be </span><br><span class="line">             removed by your friend.</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>此题目中的问题的解释可分为当问题可以被4整除的时候都无法赢得游戏，如果不能被4整除的时候只要最后将数字归的4以下就可以赢。</p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">canWinNim</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canWinNim</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">4</span>==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="相关内容"><a href="#相关内容" class="headerlink" title="相关内容"></a>相关内容</h4><p><a href="https://www.topster.cn/take-off/" target="_blank" rel="noopener">小游戏</a></p>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-292-nim-game/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-191. Number of 1 Bits</title>
      <link>https://aclihui.com/leetcode-191-number-of-1-bits/</link>
      <guid>https://aclihui.com/leetcode-191-number-of-1-bits/</guid>
      <pubDate>Tue, 28 Aug 2018 13:48:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Write a function that takes an unsigned integer and returns the number
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Write a function that takes an unsigned integer and returns the number of ‘1’ bits it has (also known as the Hamming weight).</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 11</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: Integer 11 has binary representation 00000000000000000000000000001011</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 128</span><br><span class="line">Output: 1</span><br><span class="line">Explanation: Integer 128 has binary representation 00000000000000000000000010000000</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一个明显的位运算的问题，尤其是实例中的解释的问题，尤其显示为对位进行的操作，因此这里有一个简单的方法，时间复杂度比较的低，对最后一位进行按位与运算。</p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> normal=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        对n和1求位运算 指定最后一位为1的位运算</span></span><br><span class="line">        <span class="keyword">if</span>(n &amp; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ++normal;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        对n进行向右移动</span></span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> normal;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-191-number-of-1-bits/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-169. Majority Element</title>
      <link>https://aclihui.com/leetcode-169-majority-element/</link>
      <guid>https://aclihui.com/leetcode-169-majority-element/</guid>
      <pubDate>Mon, 27 Aug 2018 06:57:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array of size n, find the majority element. The majority elem
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.</p><p>You may assume that the array is non-empty and the majority element always exist in the array.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,2,3]</span><br><span class="line">Output: 3</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [2,2,1,1,1,2,2]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>本来想强行暴力，解决问题，但无奈时间超限</p><h4 id="暴力法-run-time-error"><a href="#暴力法-run-time-error" class="headerlink" title="暴力法 run time error"></a>暴力法 run time error</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">int</span> *num= (<span class="keyword">int</span> *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;numsSize;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]==nums[j])</span><br><span class="line">            &#123;</span><br><span class="line">                num[i]++;</span><br><span class="line">            &#125; <span class="comment">//end if</span></span><br><span class="line">        &#125; <span class="comment">//end for</span></span><br><span class="line">    &#125;<span class="comment">// end for</span></span><br><span class="line"><span class="comment">//   判断最大值输出</span></span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> imax=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(max&lt;num[i]) &#123;</span><br><span class="line">            max = num[i];</span><br><span class="line">            imax = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[imax];</span><br></pre></td></tr></table></figure><h4 id="时间简短版"><a href="#时间简短版" class="headerlink" title="时间简短版"></a>时间简短版</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmpfunc</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> * a, <span class="keyword">const</span> <span class="keyword">void</span> * b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ( *(<span class="keyword">int</span>*)a - *(<span class="keyword">int</span>*)b );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line"> qsort(nums,numsSize,<span class="keyword">sizeof</span>(<span class="keyword">int</span>),cmpfunc);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> nums[numsSize/<span class="number">2</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-169-majority-element/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-167. Two Sum II - Input array is sorted</title>
      <link>https://aclihui.com/leetcode-167-two-sum-ii-input-array-is-sorted/</link>
      <guid>https://aclihui.com/leetcode-167-two-sum-ii-input-array-is-sorted/</guid>
      <pubDate>Sun, 26 Aug 2018 13:29:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array of integers that is already sorted in ascending order, 
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.</p><p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.</p><p>Note:</p><p>Your returned answers (both index1 and index2) are not zero-based.<br>You may assume that each input would have exactly one solution and you may not use the same element twice.<br>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: numbers = [2,7,11,15], target = 9</span><br><span class="line">Output: [1,2]</span><br><span class="line">Explanation: The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>较为简单<br>此题目只需保证 前后的两个目标值不重复，且后边的角标大于前面的，且从1开始计数。</p><h4 id="C代码"><a href="#C代码" class="headerlink" title="C代码"></a>C代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">twoSum</span><span class="params">(<span class="keyword">int</span>* numbers, <span class="keyword">int</span> numbersSize, <span class="keyword">int</span> target, <span class="keyword">int</span>* returnSize)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> *re=(<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="number">2</span>*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numbersSize;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;numbersSize;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(numbers[i]+numbers[j]==target)</span><br><span class="line">        &#123;</span><br><span class="line">            re[<span class="number">0</span>]=i+<span class="number">1</span>;</span><br><span class="line">            re[<span class="number">1</span>]=j+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">*returnSize=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> re;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-167-two-sum-ii-input-array-is-sorted/#disqus_thread</comments>
    </item>
    
    <item>
      <title>leetcode-136-single-number</title>
      <link>https://aclihui.com/leetcode-136-single-number/</link>
      <guid>https://aclihui.com/leetcode-136-single-number/</guid>
      <pubDate>Sat, 25 Aug 2018 15:23:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given a non-empty array of integers, every element appears twice excep
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given a non-empty array of integers, every element appears twice except for one. Find that single one.</p><p>Note:</p><p>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [2,2,1]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [4,1,2,1,2]</span><br><span class="line">Output: 4</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>此处为二维的表格构造<br>在开辟一个数组<br>判定当i!=j 的时候 在判定是否有相等元素<br>C代码如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by YUGE on 2018/8/25.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line"><span class="comment">//    int num[numsSize];</span></span><br><span class="line"><span class="comment">//    动态开辟数组</span></span><br><span class="line">    <span class="keyword">int</span>  *num=(<span class="keyword">int</span>*)<span class="built_in">malloc</span>(numsSize* <span class="keyword">sizeof</span>(<span class="keyword">int</span>)) ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        赋值给另一个数组，是两个数组一致</span></span><br><span class="line">        num[i]=nums[i];</span><br><span class="line">        <span class="comment">//printf("%d-%d\n",nums[i],num[i]);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;numsSize;j++)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            if(i==j)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">////           如果相等则跳过不判断</span></span><br><span class="line"><span class="comment">//                continue;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//            两个数相等则这个数出现了两次 直接跳出下面的循环</span></span><br><span class="line">           <span class="keyword">if</span>(nums[i]==num[j]&amp;&amp;i!=j)</span><br><span class="line">           &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(j==(numsSize<span class="number">-1</span>))</span><br><span class="line">            &#123;</span><br><span class="line"><span class="comment">//                到最后如果没有找到相等的元素则直接可以返回值</span></span><br><span class="line">                <span class="comment">//printf("%d\n",nums[i]);</span></span><br><span class="line">                <span class="keyword">return</span> nums[i];</span><br><span class="line"></span><br><span class="line">            &#125; <span class="comment">//end if</span></span><br><span class="line">        &#125;<span class="comment">//end for</span></span><br><span class="line">    &#125; <span class="comment">//end for</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[] =&#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize = <span class="number">0</span>;</span><br><span class="line">    numsSize= <span class="keyword">sizeof</span>(nums)/ <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,numsSize);</span><br><span class="line">    singleNumber(nums,numsSize);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,singleNumber(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-136-single-number/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-58. Length of Last Word求最后的单词的长度</title>
      <link>https://aclihui.com/leetcode-58-length-of-last-word/</link>
      <guid>https://aclihui.com/leetcode-58-length-of-last-word/</guid>
      <pubDate>Fri, 24 Aug 2018 14:28:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given a string s consists of upper/lower-case alphabets and empty spac
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given a string s consists of upper/lower-case alphabets and empty space characters ‘ ‘, return the length of last word in the string.</p><p>If the last word does not exist, return 0.</p><p>Note: A word is defined as a character sequence consists of non-space characters only.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;Hello World&quot;</span><br><span class="line">Output: 5</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>由题目知道，这是求最后一个单词长度的问题 ，但是要考虑的为题是最后一个单词后面可能有无数的空格，因此如果只用空格判断单词之间间隔的话，会造成，最后一个单词不好进行判断。</p><h3 id="正确思路"><a href="#正确思路" class="headerlink" title="正确思路"></a>正确思路</h3><ol><li>判断最后一个是不是空格，如果是空格，直接遍历前面一个，直到找到最后一个单词位置。</li><li>对每个此时的单词进行技术，我这里因为只用了做下标的i计数，显得略带繁琐</li></ol><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lengthOfLastWord</span><span class="params">(<span class="keyword">char</span>* s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (sSize = <span class="number">0</span>; s[sSize] != <span class="string">'\0'</span>; sSize++);</span><br><span class="line">    <span class="keyword">int</span> i = sSize - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> space = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(s[i]!=<span class="string">' '</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">' '</span> &amp;&amp; flag == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//            最后边的空格的个数</span></span><br><span class="line">            space++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">' '</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sSize<span class="number">-1</span>-space-i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[]=<span class="string">"man is "</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,lengthOfLastWord(s));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-58-length-of-last-word/#disqus_thread</comments>
    </item>
    
    <item>
      <title>笔记</title>
      <link>https://aclihui.com/note/</link>
      <guid>https://aclihui.com/note/</guid>
      <pubDate>Fri, 24 Aug 2018 06:24:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Linux&quot;&gt;&lt;a href=&quot;#Linux&quot; class=&quot;headerlink&quot; title=&quot;Linux&quot;&gt;&lt;/a&gt;Linux&lt;/h1&gt;&lt;p&gt;linux vi遇到 Press ENTER or type command to continue怎么办&lt;br&gt;&lt;
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p>linux vi遇到 Press ENTER or type command to continue怎么办<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">解决方案:在命令行窗口输入q!退出即可</span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>https://aclihui.com/note/#disqus_thread</comments>
    </item>
    
    <item>
      <title>leetcode-53-maximum-subarray</title>
      <link>https://aclihui.com/leetcode-53-maximum-subarray/</link>
      <guid>https://aclihui.com/leetcode-53-maximum-subarray/</guid>
      <pubDate>Thu, 23 Aug 2018 14:28:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an integer array nums, find the contiguous subarray (containing 
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: [-2,1,-3,4,-1,2,1,-5,4],</span><br><span class="line">Output: 6</span><br><span class="line">Explanation: [4,-1,2,1] has the largest sum = 6.</span><br></pre></td></tr></table></figure></p><p>Follow up:</p><p>If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这道题一开始的时候太大意了，忽略了很多的问题，当然这个</p><h4 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h4><p> 错误的理解题目的意思是求数组中的最大的和，因而答案就有点微妙了。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(numsSize==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;numsSize;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i]&lt;nums[j])</span><br><span class="line">                    temp=nums[i];</span><br><span class="line">                    nums[i]=nums[j];</span><br><span class="line">                    nums[j]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="comment">//end for</span></span><br><span class="line">              <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>)</span><br><span class="line">                  &#123;</span><br><span class="line">                      sum+=nums[i];</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125; <span class="comment">//end for</span></span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=[<span class="number">-2</span>,<span class="number">1</span>,<span class="number">-3</span>,<span class="number">4</span>,<span class="number">-1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-5</span>,<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">int</span> numsSize=<span class="number">9</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,maxSubArray(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="正确的题解"><a href="#正确的题解" class="headerlink" title="正确的题解"></a>正确的题解</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> i,j;</span><br><span class="line">            <span class="keyword">if</span>(numsSize&lt;=<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> realSum=nums[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;numsSize;i++)&#123;</span><br><span class="line">                sum+=nums[i];</span><br><span class="line"><span class="comment">//                if  sum is less than zero</span></span><br><span class="line">                <span class="keyword">if</span>(sum&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                    realSum = (realSum&gt;sum)?realSum:sum;</span><br><span class="line">                    sum = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="comment">//                sum&gt;0 判断当前数值和sum的大小，如果realSum 大则选择realSum 否则想下一个延伸</span></span><br><span class="line">                realSum = (realSum&gt;sum)?realSum:sum;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> realSum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-53-maximum-subarray/#disqus_thread</comments>
    </item>
    
    <item>
      <title>常见的正则表达式</title>
      <link>https://aclihui.com/regular-expression/</link>
      <guid>https://aclihui.com/regular-expression/</guid>
      <pubDate>Thu, 23 Aug 2018 00:39:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;常见的正则表达式&quot;&gt;&lt;a href=&quot;#常见的正则表达式&quot; class=&quot;headerlink&quot; title=&quot;常见的正则表达式&quot;&gt;&lt;/a&gt;常见的正则表达式&lt;/h1&gt;&lt;p&gt;不知道是从哪里下载的了，如有侵权请直接留言。&lt;/p&gt;
&lt;h3 id=&quot;一、校验数字的表达式&quot;
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="常见的正则表达式"><a href="#常见的正则表达式" class="headerlink" title="常见的正则表达式"></a>常见的正则表达式</h1><p>不知道是从哪里下载的了，如有侵权请直接留言。</p><h3 id="一、校验数字的表达式"><a href="#一、校验数字的表达式" class="headerlink" title="一、校验数字的表达式"></a>一、校验数字的表达式</h3><p> 1 数字：^[0-9]<em>$<br> 2 n位的数字：^\d{n}$<br> 3 至少n位的数字：^\d{n,}$<br> 4 m-n位的数字：^\d{m,n}$<br> 5 零和非零开头的数字：^(0|[1-9][0-9]</em>)$<br> 6 非零开头的最多带两位小数的数字：^([1-9][0-9]<em>)+(.[0-9]{1,2})?$<br> 7 带1-2位小数的正数或负数：^(-)?\d+(.\d{1,2})?$<br> 8 正数、负数、和小数：^(-|+)?\d+(.\d+)?$<br> 9 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$<br>10 有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$<br>11 非零的正整数：^[1-9]\d</em>$ 或 ^([1-9][0-9]<em>){1,3}$ 或 ^+?[1-9][0-9]</em>$<br>12 非零的负整数：^-[1-9][]0-9”<em>$ 或 ^-[1-9]\d</em>$<br>13 非负整数：^\d+$ 或 ^[1-9]\d<em>|0$<br>14 非正整数：^-[1-9]\d</em>|0$ 或 ^((-\d+)|(0+))$<br>15 非负浮点数：^\d+(.\d+)?$ 或 ^[1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>|0?.0+|0$<br>16 非正浮点数：^((-\d+(.\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>))|0?.0+|0$<br>17 正浮点数：^[1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>$ 或 ^(([0-9]+.[0-9]<em>[1-9][0-9]</em>)|([0-9]<em>[1-9][0-9]</em>.[0-9]+)|([0-9]<em>[1-9][0-9]</em>))$<br>18 负浮点数：^-([1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>)$ 或 ^(-(([0-9]+.[0-9]<em>[1-9][0-9]</em>)|([0-9]<em>[1-9][0-9]</em>.[0-9]+)|([0-9]<em>[1-9][0-9]</em>)))$<br>19 浮点数：^(-?\d+)(.\d+)?$ 或 ^-?([1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>|0?.0+|0)$</p><h3 id="二、校验字符的表达式"><a href="#二、校验字符的表达式" class="headerlink" title="二、校验字符的表达式"></a>二、校验字符的表达式</h3><p> 1 汉字：^[\u4e00-\u9fa5]{0,}$<br> 2 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$<br> 3 长度为3-20的所有字符：^.{3,20}$<br> 4 由26个英文字母组成的字符串：^[A-Za-z]+$<br> 5 由26个大写英文字母组成的字符串：^[A-Z]+$<br> 6 由26个小写英文字母组成的字符串：^[a-z]+$<br> 7 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$<br> 8 由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w{3,20}$<br> 9 中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$<br>10 中文、英文、数字但不包括下划线等符号：^ [\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$<br>11 可以输入含有^%&amp;’,;=?$\”等字符：[^%&amp;’,;=?$\x22]+<br>12 禁止输入含有~的字符：[^~\x22]+  </p><h3 id="三、特殊需求表达式"><a href="#三、特殊需求表达式" class="headerlink" title="三、特殊需求表达式"></a>三、特殊需求表达式</h3><p> 1 Email地址：^\w+([-+.]\w+)<em>@\w+([-.]\w+)</em>.\w+([-.]\w+)<em>$<br> 2 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?<br> 3 InternetURL：[a-zA-z]+://[^\s]</em> 或 ^http://([\w-]+.)+[\w-]+(/[\w-./?%&amp;=]<em>)?$<br> 4 手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$<br> 5 电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^((\d{3,4}-)|\d{3.4}-)?\d{7,8}$<br> 6 国内电话号码(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7}<br> 7 身份证号：<br>    15或18位身份证：^\d{15}|\d{18}$<br>    15位身份证：^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$<br>    18位身份证：^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{4}$<br> 8 短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$<br> 9 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$<br>10 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w{5,17}$<br>11 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.</em>\d)(?=.<em>[a-z])(?=.</em>[A-Z]).{8,10}$<br>12 日期格式：^\d{4}-\d{1,2}-\d{1,2}<br>13 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$<br>14 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$<br>15 钱的输入格式：<br>16    1.有四种钱的表示形式我们可以接受:”10000.00” 和 “10,000.00”, 和没有 “分” 的 “10000” 和 “10,000”：^[1-9][0-9]<em>$<br>17    2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符”0”不通过,所以我们采用下面的形式：^(0|[1-9][0-9]</em>)$<br>18    3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]<em>)$<br>19    4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$<br>20    5.必须说明的是,小数点后面至少应该有1位数,所以”10.”是不通过的,但是 “10” 和 “10.2” 是通过的：^[0-9]+(.[0-9]{2})?$<br>21    6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$<br>22    7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})</em>(.[0-9]{1,2})?$<br>23    8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})<em>)(.[0-9]{1,2})?$<br>24    备注：这就是最终结果了,别忘了”+”可以用”</em>“替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里<br>25 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\.[x|X][m|M][l|L]$<br>26 中文字符的正则表达式：[\u4e00-\u9fa5]<br>27 双字节字符：[^\x00-\xff]    (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))<br>28 空白行的正则表达式：\n\s<em>\r    (可以用来删除空白行)<br>29 HTML标记的正则表达式：&lt;(\S</em>?)[^&gt;]<em>&gt;.</em>?&lt;/\1&gt;|&lt;.<em>? /&gt;    (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)<br>30 首尾空白字符的正则表达式：^\s</em>|\s<em>$或(^\s</em>)|(\s*$)    (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)<br>31 腾讯QQ号：[1-9][0-9]{4,}    (腾讯QQ号从10000开始)<br>32 中国邮政编码：[1-9]\d{5}(?!\d)    (中国邮政编码为6位数字)<br>33 IP地址：\d+.\d+.\d+.\d+    (提取IP地址时有用)</p>]]></content:encoded>
      
      <comments>https://aclihui.com/regular-expression/#disqus_thread</comments>
    </item>
    
    <item>
      <title>leetcode-70-climbing-stairs爬楼梯</title>
      <link>https://aclihui.com/leetcode-70-climbing-stairs/</link>
      <guid>https://aclihui.com/leetcode-70-climbing-stairs/</guid>
      <pubDate>Wed, 22 Aug 2018 14:15:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;You are climbing a stair case. It takes n steps to reach to the top.&lt;/
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>You are climbing a stair case. It takes n steps to reach to the top.</p><p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p><p>Note: Given n will be a positive integer.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: 2</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: There are two ways to climb to the top.</span><br><span class="line">1. 1 step + 1 step</span><br><span class="line">2. 2 steps</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input: 3</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: There are three ways to climb to the top.</span><br><span class="line">1. 1 step + 1 step + 1 step</span><br><span class="line">2. 1 step + 2 steps</span><br><span class="line">3. 2 steps + 1 step</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这道题是利用了递归的一道问题，如果单纯的使用递归进行求解就会时间超限。因此必须用其他的方法求解。<br>在CPP中可以用vector动态的开辟数组，是一个比较好用的模板，用其解题可事半功倍。</p><h4 id="第一种，递归"><a href="#第一种，递归" class="headerlink" title="第一种，递归"></a>第一种，递归</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="comment">//    第一种解法递归</span></span><br><span class="line">     <span class="keyword">if</span> (n==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> climbStairs(n<span class="number">-1</span>)+climbStairs(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二种，vector方法"><a href="#第二种，vector方法" class="headerlink" title="第二种，vector方法"></a>第二种，vector方法</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//    第二种解法</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res(n+<span class="number">1</span>);</span><br><span class="line">    res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    res[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        res[i]=res[i<span class="number">-1</span>]+res[i<span class="number">-2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意要使用using namespace std 和#include&lt; vector &gt;</strong></p>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-70-climbing-stairs/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JS通过实例调用自建排序方法</title>
      <link>https://aclihui.com/js-self-Sequence/</link>
      <guid>https://aclihui.com/js-self-Sequence/</guid>
      <pubDate>Wed, 22 Aug 2018 02:17:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;通过实例自建排序方法&quot;&gt;&lt;a href=&quot;#通过实例自建排序方法&quot; class=&quot;headerlink&quot; title=&quot;通过实例自建排序方法&quot;&gt;&lt;/a&gt;通过实例自建排序方法&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="通过实例自建排序方法"><a href="#通过实例自建排序方法" class="headerlink" title="通过实例自建排序方法"></a>通过实例自建排序方法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">MyArray</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.mySort=<span class="function"><span class="keyword">function</span> (<span class="params">arr</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)</span></span><br><span class="line"><span class="undefined">                &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span>(<span class="keyword">var</span> j=i;j&lt;arr.length;j++)</span></span><br><span class="line"><span class="undefined">                    &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span>(arr[i]&gt;arr[j])</span></span><br><span class="line"><span class="undefined">                        &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">var</span> temp=arr[i];</span></span><br><span class="line"><span class="undefined">                            arr[i]=arr[j];</span></span><br><span class="line"><span class="undefined">                            arr[j]=temp;</span></span><br><span class="line"><span class="javascript">                        &#125;<span class="comment">//end if</span></span></span><br><span class="line"><span class="javascript">                    &#125; <span class="comment">// end for</span></span></span><br><span class="line"><span class="javascript">                &#125; <span class="comment">// end for</span></span></span><br><span class="line"><span class="javascript">            &#125; <span class="comment">// end fun mySort</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        &#125; <span class="comment">// end fun</span></span></span><br><span class="line"><span class="undefined">        arr=[123,12,123,33];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> myArray= <span class="keyword">new</span> MyArray();</span></span><br><span class="line"><span class="undefined">        myArray.mySort(arr);</span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/js-self-Sequence/#disqus_thread</comments>
    </item>
    
    <item>
      <title>nodejs安装最新版</title>
      <link>https://aclihui.com/nodejs-install/</link>
      <guid>https://aclihui.com/nodejs-install/</guid>
      <pubDate>Tue, 21 Aug 2018 16:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;为什么&quot;&gt;&lt;a href=&quot;#为什么&quot; class=&quot;headerlink&quot; title=&quot;为什么&quot;&gt;&lt;/a&gt;为什么&lt;/h2&gt;&lt;p&gt;在网上查资料的时候发现，node安装的资料相对来说比较的少，而且比较零散，想将零散的资料统一起来，以便以后的时候查询。&lt;/p&gt;
&lt;h
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><p>在网上查资料的时候发现，node安装的资料相对来说比较的少，而且比较零散，想将零散的资料统一起来，以便以后的时候查询。</p><h3 id="CENTOS"><a href="#CENTOS" class="headerlink" title="CENTOS"></a>CENTOS</h3><h4 id="1-获取最新版的bash"><a href="#1-获取最新版的bash" class="headerlink" title="1.获取最新版的bash"></a>1.获取最新版的bash</h4><p><strong>当前稳定版为8.11.4</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --silent --location https://rpm.nodesource.com/setup_8.x | bash -</span><br></pre></td></tr></table></figure></p><p><strong>获取其他的版本</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --silent --location https://rpm.nodesource.com/setup_10.x | bash -</span><br></pre></td></tr></table></figure></p><h4 id="2-执行安装"><a href="#2-执行安装" class="headerlink" title="2.执行安装"></a>2.执行安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nodejs</span><br></pre></td></tr></table></figure><p><strong>-y 为answer yes for all questions 对每一个回答回答是</strong></p><h4 id="3-检测版本号"><a href="#3-检测版本号" class="headerlink" title="3.检测版本号"></a>3.检测版本号</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/nodejs-install/#disqus_thread</comments>
    </item>
    
    <item>
      <title>leetcode-83-remove-duplicates-from-sorted-list</title>
      <link>https://aclihui.com/leetcode-83-remove-duplicates-from-sorted-list/</link>
      <guid>https://aclihui.com/leetcode-83-remove-duplicates-from-sorted-list/</guid>
      <pubDate>Tue, 21 Aug 2018 14:31:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given a sorted linked list, delete all duplicates such that each eleme
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given a sorted linked list, delete all duplicates such that each element appear only once.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: 1-&gt;1-&gt;2</span><br><span class="line">Output: 1-&gt;2</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: 1-&gt;1-&gt;2-&gt;3-&gt;3</span><br><span class="line">Output: 1-&gt;2-&gt;3</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这也算一道简单的题目吧，设计的知识有</p><ul><li>链表节点的申请</li><li>判断链表空与非空</li><li>链表结束的判断</li></ul><p>C code<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> * <span class="title">p</span>;</span></span><br><span class="line">   p=head;</span><br><span class="line">   <span class="keyword">if</span>(!head)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(p&amp;&amp;p-&gt;next)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span>(p-&gt;val==p-&gt;next-&gt;val)</span><br><span class="line">       &#123;</span><br><span class="line">           p-&gt;next=p-&gt;next-&gt;next;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">           p=p-&gt;next;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> head;</span><br></pre></td></tr></table></figure></p><p>这次感受还算颇丰，链表的节点判断还是比较重要的一个方面的。</p>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-83-remove-duplicates-from-sorted-list/#disqus_thread</comments>
    </item>
    
    <item>
      <title>js_random_color</title>
      <link>https://aclihui.com/js-random-color/</link>
      <guid>https://aclihui.com/js-random-color/</guid>
      <pubDate>Mon, 20 Aug 2018 16:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;JS生成随机十六位的颜色的数值&quot;&gt;&lt;a href=&quot;#JS生成随机十六位的颜色的数值&quot; class=&quot;headerlink&quot; title=&quot;JS生成随机十六位的颜色的数值&quot;&gt;&lt;/a&gt;JS生成随机十六位的颜色的数值&lt;/h2&gt;&lt;figure class=&quot;highli
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="JS生成随机十六位的颜色的数值"><a href="#JS生成随机十六位的颜色的数值" class="headerlink" title="JS生成随机十六位的颜色的数值"></a>JS生成随机十六位的颜色的数值</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">   &lt;script&gt;</span></span><br><span class="line"><span class="regexp">       function getColor() &#123;</span></span><br><span class="line"><span class="regexp">           var str="#";</span></span><br><span class="line"><span class="regexp">           var co=["1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"];</span></span><br><span class="line"><span class="regexp">           for (var j=0;j&lt;6;j++)</span></span><br><span class="line"><span class="regexp">           &#123;</span></span><br><span class="line"><span class="regexp">               colors=co[parseInt(Math.random()*15)];</span></span><br><span class="line"><span class="regexp">               str+=colors;</span></span><br><span class="line"><span class="regexp">           &#125;</span></span><br><span class="line"><span class="regexp">           return str;</span></span><br><span class="line"><span class="regexp">       &#125;</span></span><br><span class="line"><span class="regexp">       console.log(getColor());</span></span><br><span class="line"><span class="regexp">   &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/js-random-color/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-27. Remove Element 移除元素</title>
      <link>https://aclihui.com/leetcode-27-remove-element/</link>
      <guid>https://aclihui.com/leetcode-27-remove-element/</guid>
      <pubDate>Mon, 20 Aug 2018 00:58:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array nums and a value val, remove all instances of that valu
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array nums and a value val, remove all instances of that value in-place and return the new length.</p><p>Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.</p><p>The order of elements can be changed. It doesn’t matter what you leave beyond the new length.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Given nums = [3,2,2,3], val = 3,</span><br><span class="line"></span><br><span class="line">Your function should return length = 2, with the first two elements of nums being 2.</span><br><span class="line"></span><br><span class="line">It doesn&apos;t matter what you leave beyond the returned length.</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Given nums = [0,1,2,2,3,0,4,2], val = 2,</span><br><span class="line"></span><br><span class="line">Your function should return length = 5, with the first five elements of nums containing 0, 1, 3, 0, and 4.</span><br><span class="line"></span><br><span class="line">Note that the order of those five elements can be arbitrary.</span><br><span class="line"></span><br><span class="line">It doesn&apos;t matter what values are set beyond the returned length.</span><br></pre></td></tr></table></figure></p><p>Clarification:</p><p>Confused why the returned value is an integer but your answer is an array?</p><p>Note that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.</p><p>Internally you can think of this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// nums is passed in by reference. (i.e., without making a copy)</span><br><span class="line">int len = removeElement(nums, val);</span><br><span class="line"></span><br><span class="line">// any modification to nums in your function would be known by the caller.</span><br><span class="line">// using the length returned by your function, it prints the first len elements.</span><br><span class="line">for (int i = 0; i &lt; len; i++) &#123;</span><br><span class="line">    print(nums[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这又是一道水题目，移除与目标相同的元素，返回数组中剩余后的数值即可。<br>C code<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">removeElement</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> same=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize-same;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i]==val)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            numsSize-same减去后边的于其相同的部分 -1减去当最后一个的时候下标的变化</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;numsSize-same<span class="number">-1</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                nums[j]=nums[j+<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            same++;</span><br><span class="line">            i=i<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> numsSize-same;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-27-remove-element/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode-35. Search Insert Position 查找插入位置</title>
      <link>https://aclihui.com/leetcode-35-search-insert-position/</link>
      <guid>https://aclihui.com/leetcode-35-search-insert-position/</guid>
      <pubDate>Sun, 19 Aug 2018 13:14:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given a sorted array and a target value, return the index if the targe
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p><p>You may assume no duplicates in the array.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,3,5,6], 5</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,3,5,6], 2</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure></p><p>Example 3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,3,5,6], 7</span><br><span class="line">Output: 4</span><br></pre></td></tr></table></figure></p><p>Example 4:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,3,5,6], 0</span><br><span class="line">Output: 0</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>此题比较简单</p><p>分成两种情况</p><ol><li>目标数在最后边</li><li>目标数在数组中某位的前边或者相等  <h4 id="1-目标数在最后边"><a href="#1-目标数在最后边" class="headerlink" title="1. 目标数在最后边"></a>1. 目标数在最后边</h4>这种简单，直接返回数组的大小就好。<h4 id="2-目标数在数组中某位的前边或者相等"><a href="#2-目标数在数组中某位的前边或者相等" class="headerlink" title="2. 目标数在数组中某位的前边或者相等"></a>2. 目标数在数组中某位的前边或者相等</h4>这种也相对简单，返回当前比较的数即可。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(target&gt;nums[numsSize<span class="number">-1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> numsSize;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(target&lt;=nums[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-35-search-insert-position/#disqus_thread</comments>
    </item>
    
    <item>
      <title>leetcode-9-palindrome-number 回文数</title>
      <link>https://aclihui.com/leetcode-9-palindrome-number/</link>
      <guid>https://aclihui.com/leetcode-9-palindrome-number/</guid>
      <pubDate>Sun, 19 Aug 2018 12:25:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Determine whether an integer is a palindrome. An integer is a palindro
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: 121</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: -121</span><br><span class="line">Output: false</span><br><span class="line"></span><br><span class="line">Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.</span><br></pre></td></tr></table></figure></p><p>Example 3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 10</span><br><span class="line">Output: false</span><br><span class="line">Explanation: Reads 01 from right to left. Therefore it is not a palindrome.</span><br></pre></td></tr></table></figure></p><p>Follow up:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Coud you solve it without converting the integer to a string?</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一道比较简单的题目<br>只要分析出来三个判断就可以</p><ol><li>等于零</li><li>小于零</li><li>大于零<h4 id="等于零"><a href="#等于零" class="headerlink" title="等于零"></a>等于零</h4>等于零肯定成立，因为零无论正着念，倒着读都是零<h4 id="小于零"><a href="#小于零" class="headerlink" title="小于零"></a>小于零</h4>有题目知等于零的时候不成立<h4 id="大于零"><a href="#大于零" class="headerlink" title="大于零"></a>大于零</h4>这是相对来说比较复杂的地方了，设置参数将x倒置比较即可<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span>(x==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x1=x;</span><br><span class="line">        <span class="keyword">int</span> y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x1!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp=x1%<span class="number">10</span>;</span><br><span class="line">            x1=x1/<span class="number">10</span>;</span><br><span class="line">            y=y*<span class="number">10</span>+tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x==y)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content:encoded>
      
      <comments>https://aclihui.com/leetcode-9-palindrome-number/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Fibonacci</title>
      <link>https://aclihui.com/Fibonacci/</link>
      <guid>https://aclihui.com/Fibonacci/</guid>
      <pubDate>Sun, 19 Aug 2018 09:41:37 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;今天恰好学到斐波那契数列&quot;&gt;&lt;a href=&quot;#今天恰好学到斐波那契数列&quot; class=&quot;headerlink&quot; title=&quot;今天恰好学到斐波那契数列&quot;&gt;&lt;/a&gt;今天恰好学到斐波那契数列&lt;/h2&gt;&lt;h3 id=&quot;js实现斐波那契数列&quot;&gt;&lt;a href=&quot;#js实
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="今天恰好学到斐波那契数列"><a href="#今天恰好学到斐波那契数列" class="headerlink" title="今天恰好学到斐波那契数列"></a>今天恰好学到斐波那契数列</h2><h3 id="js实现斐波那契数列"><a href="#js实现斐波那契数列" class="headerlink" title="js实现斐波那契数列"></a>js实现斐波那契数列</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第三个月</span></span><br><span class="line">        <span class="comment">//前置条件</span></span><br><span class="line">        <span class="keyword">var</span> day1=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> day2=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> sum=day1+day2;</span><br><span class="line">        <span class="keyword">var</span> day3=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//第三月</span></span><br><span class="line">        day3=day1+day2;</span><br><span class="line">        sum=sum+day3;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 第四个月</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="keyword">var</span> day1=day2;</span><br><span class="line">        <span class="keyword">var</span> day2=day3;</span><br><span class="line">        day3=day1+day2;</span><br><span class="line">        <span class="keyword">var</span> sum =sum+day3;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第五个月</span></span><br><span class="line">        <span class="keyword">var</span> day1=day2;</span><br><span class="line">        day2=day3;</span><br><span class="line">        day3=day1+day2;</span><br><span class="line">        sum+=day3;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//综上可得</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 重复的部分为</span></span><br><span class="line"><span class="comment">        * day1=day2</span></span><br><span class="line"><span class="comment">        * day2=day3</span></span><br><span class="line"><span class="comment">        * day3=day1+day2;</span></span><br><span class="line"><span class="comment">        * sum+=day3</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//借助for循环</span></span><br><span class="line">        <span class="comment">//前置条件</span></span><br><span class="line">        <span class="keyword">var</span> day1=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> day2=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> sum=day1+day2;</span><br><span class="line">        <span class="keyword">var</span> day3=day1+day2;</span><br><span class="line">        <span class="keyword">var</span> tar=<span class="built_in">parseInt</span>(prompt(<span class="string">"请输入斐波那契的月份信息(且月份大约三)"</span>));</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">3</span>;i&lt;tar;i++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            day1=day2;</span><br><span class="line">            day2=day3;</span><br><span class="line">            day3=day1+day2;</span><br><span class="line">            sum+=day3;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(sum)</span><br></pre></td></tr></table></figure><p>由前三个总结出 最后在第N天的时候拥有兔子的数量</p>]]></content:encoded>
      
      <comments>https://aclihui.com/Fibonacci/#disqus_thread</comments>
    </item>
    
    <item>
      <title>half-year</title>
      <link>https://aclihui.com/half-year/</link>
      <guid>https://aclihui.com/half-year/</guid>
      <pubDate>Sun, 19 Aug 2018 00:59:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;建站半年&quot;&gt;&lt;a href=&quot;#建站半年&quot; class=&quot;headerlink&quot; title=&quot;建站半年&quot;&gt;&lt;/a&gt;建站半年&lt;/h2&gt;&lt;p&gt;恍恍惚惚，网站建造已经有半年了，虽然中间也有放弃此网站的想法，但是，忽然发现这个网站对我的作用还是蛮大的，做为我的一个重要的
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="建站半年"><a href="#建站半年" class="headerlink" title="建站半年"></a>建站半年</h2><p>恍恍惚惚，网站建造已经有半年了，虽然中间也有放弃此网站的想法，但是，忽然发现这个网站对我的作用还是蛮大的，做为我的一个重要的站点，半年的纪念是一个伟大的日子啊。<br>半年了，回想半年前建站的的时候拥有的雄心壮志，和一些东西，以及网站的意义不禁涌上心头，为什么域名是AC不是其他的我想你是知道的吧。而且好像含义还是蛮深的呢<br>在半年其中间我也想过放弃这个网站的想法，但是海曙因为其种种还是舍不得，这个比较重要的网站。<br>半年的风霜有很多，有些想法也会随着时间的流逝而逐渐的改变。建站的时间，有点长了，半年间恍恍惚惚，改了好几次的网站名字，改了好多次的网站模板，重新做了好多次的网站，一次次推到重做，一次次的下载文章，还原为文章，数不清了丢失多少个简单的的文章，或许只有Google的搜索引擎知道我改了多少的名字和换了多少的主题吧，把很多的水文都一次次的删除，也是一项小工程吧。（苦笑<br>网站建站初期我记得还是简单的http到后来的https再到后来的全站CDN HTTP （时间最短）在到后来的全站CDN HTTPS 好像过去了太多太多。<br>希望在未来的日子里还有机会去维护这个网站，还能将网站做的更加简洁漂亮。</p><pre><code>---时间2018年8月30号</code></pre>]]></content:encoded>
      
      <comments>https://aclihui.com/half-year/#disqus_thread</comments>
    </item>
    
    <item>
      <title>docker容器操作</title>
      <link>https://aclihui.com/docker-con-command/</link>
      <guid>https://aclihui.com/docker-con-command/</guid>
      <pubDate>Thu, 09 Aug 2018 03:25:24 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;新建并启动容器&quot;&gt;&lt;a href=&quot;#新建并启动容器&quot; class=&quot;headerlink&quot; title=&quot;新建并启动容器&quot;&gt;&lt;/a&gt;新建并启动容器&lt;/h2&gt;&lt;p&gt;docker run command is equel to the command&lt;br&gt;&lt;fig
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="新建并启动容器"><a href="#新建并启动容器" class="headerlink" title="新建并启动容器"></a>新建并启动容器</h2><p>docker run command is equel to the command<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker create</span><br><span class="line">sudo docker start</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run ubuntu /bash/<span class="built_in">echo</span> <span class="string">'hello world!'</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/docker-con-command/#disqus_thread</comments>
    </item>
    
    <item>
      <title>随笔</title>
      <link>https://aclihui.com/2018-8-8-note/</link>
      <guid>https://aclihui.com/2018-8-8-note/</guid>
      <pubDate>Wed, 08 Aug 2018 11:10:43 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;起因-今天在学习docker的时候忽然发现centos7精简版的许多东西都没有因此自己下载&quot;&gt;&lt;a href=&quot;#起因-今天在学习docker的时候忽然发现centos7精简版的许多东西都没有因此自己下载&quot; class=&quot;headerlink&quot; title=&quot;起因
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="起因-今天在学习docker的时候忽然发现centos7精简版的许多东西都没有因此自己下载"><a href="#起因-今天在学习docker的时候忽然发现centos7精简版的许多东西都没有因此自己下载" class="headerlink" title="起因 今天在学习docker的时候忽然发现centos7精简版的许多东西都没有因此自己下载"></a>起因 今天在学习docker的时候忽然发现centos7精简版的许多东西都没有因此自己下载</h2><p>遇到了很多很多不知道的，特此写了份随笔  </p><h3 id="2018-8-8"><a href="#2018-8-8" class="headerlink" title="2018-8-8"></a>2018-8-8</h3><blockquote><p>想下载一个bash游戏,遇到的坑。</p></blockquote><h4 id="首先是crul下载"><a href="#首先是crul下载" class="headerlink" title="首先是crul下载"></a>首先是crul下载</h4><h4 id="再是wget下载"><a href="#再是wget下载" class="headerlink" title="再是wget下载"></a>再是wget下载</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install wget</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://aclihui.com/2018-8-8-note/#disqus_thread</comments>
    </item>
    
    <item>
      <title>docker基础命令代码</title>
      <link>https://aclihui.com/docker-base-command/</link>
      <guid>https://aclihui.com/docker-base-command/</guid>
      <pubDate>Fri, 03 Aug 2018 01:57:30 GMT</pubDate>
      <description>
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;部分未完成 &lt;/p&gt;
&lt;p&gt;存储和载入镜像&lt;br&gt;上传镜像&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;docker-iamges&quot;&gt;&lt;a href=&quot;#docker-iamges&quot; class=&quot;headerlink&quot; title=&quot;do
        
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>部分未完成 </p><p>存储和载入镜像<br>上传镜像</p></blockquote><h2 id="docker-iamges"><a href="#docker-iamges" class="headerlink" title="docker iamges"></a>docker iamges</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images</span><br></pre></td></tr></table></figure><p>信息解读  </p><table><thead><tr><th>表格名称</th><th>中文译名</th><th>作用解释</th><th>备注</th></tr></thead><tbody><tr><td>REPOSITORY</td><td>仓库</td><td>来自于哪个仓库</td><td>无</td></tr><tr><td>TAG</td><td>标签</td><td>标签信息</td><td>无</td></tr><tr><td>IMAGE ID</td><td>镜像ID</td><td>唯一标示镜像</td><td>无</td></tr><tr><td>CREATED</td><td>创建时间</td><td>镜像创建的时间</td><td>标记的是原镜像创建的时间，和自身什么时候下载没关系</td></tr><tr><td>SIZE</td><td>大小</td><td>镜像的大小</td><td>无</td></tr></tbody></table><p><strong>镜像的ID唯一标示进行</strong><br><strong>镜像大小信息只是表示镜像的逻辑体积大小，实际上由于相同的镜像层本地只会储存一份，物理上占用的存储空间会小于各镜像的逻辑体积之和</strong><br><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-images.png" alt=""></p><h2 id="docker-images-other-command"><a href="#docker-images-other-command" class="headerlink" title="docker images other command"></a>docker images other command</h2><p>-a ,–all=ture|false:列出所有的镜像文件（包括临时文件）,默认为否<br>–digests=true|false:列出所有镜像的数字摘要值，默认为否<br>-f,–filter=[]:过滤列出的镜像，如dangling=true 值显示没有被使用的镜像；也可指定带有特定标注的镜像等；<br>–formal=”TEMPLATE”控制输出格式，如.ID代表ID信息，.Repository代表库信息等<br>–no-trunc=ture|false:对输出结果中 的太长的部分是否进行截断，such as the ID info ,default set is YES;<br>-q,–quiet=true|false:Only output the ID info ,defaut  set is no;  </p><h2 id="docker-images-NOTE"><a href="#docker-images-NOTE" class="headerlink" title="docker images NOTE"></a>docker images NOTE</h2><p><strong>其中，对输出结果进行控制的选项如-f,–filter=[],–no-trunc=true|false、-q,–quiet=true|false 等，大部分子命令都支持</strong>  </p><h2 id="docker-inspect"><a href="#docker-inspect" class="headerlink" title="docker inspect"></a>docker inspect</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker inspect ubuntu:18.04</span><br></pre></td></tr></table></figure><p><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-inspect.png" alt="docker-inspect-image"><br>因为inspect 返回放数据为json 的类型的，以此可以带餐查询<br>eg:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker inspect -f &#123;&#123;<span class="string">".Architecture"</span>&#125;&#125; ubuntu:18.04</span><br></pre></td></tr></table></figure></p><p><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-inspect-json-eg.png" alt=""></p><h2 id="docker-search"><a href="#docker-search" class="headerlink" title="docker search"></a>docker search</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker search nginx</span><br></pre></td></tr></table></figure><p><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-search-nginx.png" alt="docker-search-nginx"><br><strong>docker search 的命令更新了很多,此处暂时不全部尝试。</strong>  </p><h3 id="为镜像加标签"><a href="#为镜像加标签" class="headerlink" title="为镜像加标签"></a>为镜像加标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo docker tag 原镜像名称 新镜像名称</span><br></pre></td></tr></table></figure><p>such as</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker tag ubuntu:latest myubuntu:latest</span><br></pre></td></tr></table></figure><p><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-create-images-by-tag.png" alt=""></p><h2 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rmi NAME:TAG</span><br></pre></td></tr></table></figure><p>such as<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rmi ubuntu:18.04</span><br></pre></td></tr></table></figure></p><p><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-rmi-image.png" alt=""></p><h3 id="docker-根据ID删除镜像"><a href="#docker-根据ID删除镜像" class="headerlink" title="docker 根据ID删除镜像"></a>docker 根据ID删除镜像</h3><p>删除步骤</p><ul><li>首先找到相对应的ID</li><li>在删除对应的镜像<br><strong>如果相对应的正在运行的容器所依赖的镜像  需要先删除响应的容器文件,再继续做</strong> <h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器的ID</span><br></pre></td></tr></table></figure></li></ul><p><strong>现在还没有发现有其他的方法去删除容器</strong></p><h5 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h5><h6 id="运行新容器"><a href="#运行新容器" class="headerlink" title="运行新容器"></a>运行新容器</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -it ubuntu:16.04 <span class="built_in">echo</span> <span class="string">'hello world!'</span></span><br></pre></td></tr></table></figure><p><strong>注意：此处的i 是让docker分配一个伪终端pseudo-tty t的</strong></p><h5 id="查看运行的镜像"><a href="#查看运行的镜像" class="headerlink" title="查看运行的镜像"></a>查看运行的镜像</h5><p><strong>查看当前运行的容器</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps</span><br></pre></td></tr></table></figure></p><p>参数 -a 是查看存在的所有容器（包括停止的）<br>参数 -l 是显示最新启动的一个容器<br>参数 -q 是仅显示容器的ID<br>参数 -s Display total file sizes</p><h6 id="删除容器-1"><a href="#删除容器-1" class="headerlink" title="删除容器"></a>删除容器</h6><h6 id="删除单个容器"><a href="#删除单个容器" class="headerlink" title="删除单个容器"></a>删除单个容器</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps -a  </span><br><span class="line">sudo docker rm <span class="string">'container ID'</span></span><br></pre></td></tr></table></figure><h6 id="删除多个镜像"><a href="#删除多个镜像" class="headerlink" title="删除多个镜像"></a>删除多个镜像</h6><p>删除status为退出的container<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rm $(sudo docker -qf status=exited)</span><br></pre></td></tr></table></figure></p><p><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-rm-command.png" alt=""></p><h6 id="删除镜像-1"><a href="#删除镜像-1" class="headerlink" title="删除镜像"></a>删除镜像</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rmi 镜像ID</span><br></pre></td></tr></table></figure><p><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-rmi-image-id.png" alt=""></p><h2 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h2><h3 id="基于已有镜像创建镜像"><a href="#基于已有镜像创建镜像" class="headerlink" title="基于已有镜像创建镜像"></a>基于已有镜像创建镜像</h3><p>command such as sudo docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</p><h2 id="存储和载入镜像"><a href="#存储和载入镜像" class="headerlink" title="存储和载入镜像"></a>存储和载入镜像</h2><h3 id="存储镜像"><a href="#存储镜像" class="headerlink" title="存储镜像"></a>存储镜像</h3><h3 id="载入镜像"><a href="#载入镜像" class="headerlink" title="载入镜像"></a>载入镜像</h3><h2 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h2>]]></content:encoded>
      
      <comments>https://aclihui.com/docker-base-command/#disqus_thread</comments>
    </item>
    
    <item>
      <title>docker pull 试用</title>
      <link>https://aclihui.com/docker-pull-test/</link>
      <guid>https://aclihui.com/docker-pull-test/</guid>
      <pubDate>Fri, 03 Aug 2018 00:17:27 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;pull-image&quot;&gt;&lt;a href=&quot;#pull-image&quot; class=&quot;headerlink&quot; title=&quot;pull image&quot;&gt;&lt;/a&gt;pull image&lt;/h2&gt;&lt;p&gt;在命令行中输入如下代码&lt;br&gt;&lt;figure class=&quot;highligh
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="pull-image"><a href="#pull-image" class="headerlink" title="pull image"></a>pull image</h2><p>在命令行中输入如下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull centos:7</span><br></pre></td></tr></table></figure></p><p><strong> CENTOS 是NAME(镜像名称) : 后面的是版本号 </strong><br><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docke-centos-pull.png" alt=""></p><h2 id="docker-run-image"><a href="#docker-run-image" class="headerlink" title="docker run image"></a>docker run image</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run centos:7 bash</span><br></pre></td></tr></table></figure><p>测试代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure></p><p>效果图<br><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-run-centos-bash.png" alt=""></p><h2 id="exit-from-the-image"><a href="#exit-from-the-image" class="headerlink" title="exit from the image"></a>exit from the image</h2><p>code<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></p><p><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-exit-image-centos.png" alt=""></p>]]></content:encoded>
      
      <comments>https://aclihui.com/docker-pull-test/#disqus_thread</comments>
    </item>
    
    <item>
      <title>开始学习docker</title>
      <link>https://aclihui.com/docker-start/</link>
      <guid>https://aclihui.com/docker-start/</guid>
      <pubDate>Thu, 02 Aug 2018 09:44:36 GMT</pubDate>
      <description>
      
        
        
          &lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;今天开始学习docker,记一下笔记&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;运行环境&quot;&gt;&lt;a href=&quot;#运行环境&quot; class=&quot;headerlink&quot; title=&quot;运行环境
        
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><blockquote><p>今天开始学习docker,记一下笔记</p></blockquote></blockquote><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><table><thead><tr><th></th><th>名称</th><th>版本</th></tr></thead><tbody><tr><td>操作系统</td><td>CENTOS</td><td>centos7-1804</td></tr></tbody></table><h3 id="core-version"><a href="#core-version" class="headerlink" title="core version"></a>core version</h3><p>used by uname -a to check it<br>the core version must update to 3.10<br>非常奇怪的是centOS 我下载的最新的内核版本就是3.10 （或许是3.10 当下最稳定吧<br><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/20180802175815.png" alt=""></p><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><h3 id="添加软件源"><a href="#添加软件源" class="headerlink" title="添加软件源"></a>添加软件源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo tee /etc/yum.repos.d/docker.repo &lt;&lt;- &apos;EOF&apos;  </span><br><span class="line">[dockerrepo]  </span><br><span class="line">name=Docker Repository  </span><br><span class="line">baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/  </span><br><span class="line">enabled=1  </span><br><span class="line">gpgcheck=1  </span><br><span class="line">gpgkey=https://yum.dockerproject.org/gpg  </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="更新软件源缓存"><a href="#更新软件源缓存" class="headerlink" title="更新软件源缓存"></a>更新软件源缓存</h3><p> sudo yum update<br> sudo yum install -y docker-engine<br> <img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-yum-add-repo.png" alt=""><br> docker 大小<br> <img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-size-centos.png" alt=""><br> 看起来蛮小的不是吗<br> 安装成功<br> <img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/centos-install-success.png" alt="安装成功"></p><h3 id="docker-version-版本检测"><a href="#docker-version-版本检测" class="headerlink" title="docker version 版本检测"></a>docker version 版本检测</h3><p> <img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-version-centos-2018-08-02.png" alt=""></p><p> ###报错<br> <img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-version-error.png" alt=""></p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>启动docker 服务以管理员方式运行指令<br> <img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-service-start.png" alt=""></p><h2 id="RUN-hello-world"><a href="#RUN-hello-world" class="headerlink" title="RUN hello-world"></a>RUN hello-world</h2><p> <img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/docker-run-hello-world.png" alt=""></p>]]></content:encoded>
      
      <comments>https://aclihui.com/docker-start/#disqus_thread</comments>
    </item>
    
    <item>
      <title>跳转页面</title>
      <link>https://aclihui.com/gonext/</link>
      <guid>https://aclihui.com/gonext/</guid>
      <pubDate>Sat, 28 Jul 2018 08:21:27 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;代码如下：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>代码如下：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$t_url = preg_replace('/^url=(.*)$/i','$1',$_SERVER["QUERY_STRING"]);  </span><br><span class="line">if(!emptyempty($t_url)) &#123;  </span><br><span class="line">    preg_match('/(http|https):\/\//',$t_url,$matches);  </span><br><span class="line">    if($matches)&#123;  </span><br><span class="line">        $url=$t_url;  </span><br><span class="line">        $title='页面加载中,请稍候...';  </span><br><span class="line">    &#125; else &#123;  </span><br><span class="line">        preg_match('/\./i',$t_url,$matche);  </span><br><span class="line">        if($matche)&#123;  </span><br><span class="line">            $url='http://'.$t_url;  </span><br><span class="line">            $title='页面加载中,请稍候...';  </span><br><span class="line">        &#125; else &#123;  </span><br><span class="line">            $url='https://www.yugepower.com/';  </span><br><span class="line">            $title='参数错误，正在返回首页...';  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; else &#123;  </span><br><span class="line">    $title='参数缺失，正在返回首页...';  </span><br><span class="line">    $url='https://www.yugepower.com/';</span><br><span class="line">&#125;  </span><br><span class="line">?&gt;  </span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"1;url='&lt;?php echo $url;?&gt;';"</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>&lt;?php echo $title;?&gt;<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">  </span></span><br><span class="line"><span class="undefined">body&#123;background:#000&#125;.loading&#123;-webkit-animation:fadein 2s;-moz-animation:fadein 2s;-o-animation:fadein 2s;animation:fadein 2s&#125;@-moz-keyframes fadein&#123;from&#123;opacity:0&#125;to&#123;opacity:1&#125;&#125;@-webkit-keyframes fadein&#123;from&#123;opacity:0&#125;to&#123;opacity:1&#125;&#125;@-o-keyframes fadein&#123;from&#123;opacity:0&#125;to&#123;opacity:1&#125;&#125;@keyframes fadein&#123;from&#123;opacity:0&#125;to&#123;opacity:1&#125;&#125;.spinner-wrapper&#123;position:absolute;top:0;left:0;z-index:300;height:100%;min-width:100%;min-height:100%;background:rgba(255,255,255,0.93)&#125;.spinner-text&#123;position:absolute;top:50%;left:50%;margin-left:-90px;margin-top: 2px;color:#BBB;letter-spacing:1px;font-weight:700;font-size:36px;font-family:Arial&#125;.spinner&#123;position:absolute;top:50%;left:50%;display:block;margin-left:-160px;width:1px;height:1px;border:25px solid rgba(100,100,100,0.2);-webkit-border-radius:50px;-moz-border-radius:50px;border-radius:50px;border-left-color:transparent;border-right-color:transparent;-webkit-animation:spin 1.5s infinite;-moz-animation:spin 1.5s infinite;animation:spin 1.5s infinite&#125;@-webkit-keyframes spin&#123;0%,100%&#123;-webkit-transform:rotate(0deg) scale(1)&#125;50%&#123;-webkit-transform:rotate(720deg) scale(0.6)&#125;&#125;@-moz-keyframes spin&#123;0%,100%&#123;-moz-transform:rotate(0deg) scale(1)&#125;50%&#123;-moz-transform:rotate(720deg) scale(0.6)&#125;&#125;@-o-keyframes spin&#123;0%,100%&#123;-o-transform:rotate(0deg) scale(1)&#125;50%&#123;-o-transform:rotate(720deg) scale(0.6)&#125;&#125;@keyframes spin&#123;0%,100%&#123;transform:rotate(0deg) scale(1)&#125;50%&#123;transform:rotate(720deg) scale(0.6)&#125;&#125;  </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading"</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"spinner-wrapper"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"spinner-text"</span>&gt;</span>页面加载中,请稍候...<span class="tag">&lt;/<span class="name">span</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"spinner"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>代码来源： 张戈博客 zhengge.net</p>]]></content:encoded>
      
      <comments>https://aclihui.com/gonext/#disqus_thread</comments>
    </item>
    
    <item>
      <title>网页素材</title>
      <link>https://aclihui.com/webatom/</link>
      <guid>https://aclihui.com/webatom/</guid>
      <pubDate>Sat, 28 Jul 2018 07:02:57 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;显示网站建站时间&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>显示网站建站时间<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--显示网站建站的时间 start--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"credit"</span>&gt;</span></span><br><span class="line">٩(๑❛ᴗ❛๑)۶本站已坚持运行了:</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">BirthDay=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"05,20,2017"</span>);</span></span><br><span class="line"><span class="javascript">today=<span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="undefined">timeold=(today.getTime()-BirthDay.getTime());</span></span><br><span class="line"><span class="undefined">sectimeold=timeold/1000</span></span><br><span class="line"><span class="javascript">secondsold=<span class="built_in">Math</span>.floor(sectimeold);</span></span><br><span class="line"><span class="undefined">msPerDay=24*60*60*1000</span></span><br><span class="line"><span class="undefined">e_daysold=timeold/msPerDay</span></span><br><span class="line"><span class="javascript">daysold=<span class="built_in">Math</span>.floor(e_daysold);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(daysold+<span class="string">"天 !"</span>);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--显示网站建站的时间 end--&gt;</span></span><br></pre></td></tr></table></figure></p><p>来源: <a href="http://www.hzv5.cn" target="_blank" rel="noopener">http://www.hzv5.cn</a> 的源代码</p>]]></content:encoded>
      
      <comments>https://aclihui.com/webatom/#disqus_thread</comments>
    </item>
    
    <item>
      <title>js网页代码总结</title>
      <link>https://aclihui.com/js/</link>
      <guid>https://aclihui.com/js/</guid>
      <pubDate>Sat, 28 Jul 2018 06:51:32 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;js网页代码总结&quot;&gt;&lt;a href=&quot;#js网页代码总结&quot; class=&quot;headerlink&quot; title=&quot;js网页代码总结&quot;&gt;&lt;/a&gt;js网页代码总结&lt;/h1&gt;&lt;h2 id=&quot;为什么写&quot;&gt;&lt;a href=&quot;#为什么写&quot; class=&quot;headerlink&quot; 
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="js网页代码总结"><a href="#js网页代码总结" class="headerlink" title="js网页代码总结"></a>js网页代码总结</h1><h2 id="为什么写"><a href="#为什么写" class="headerlink" title="为什么写"></a>为什么写</h2><p>  当下的网页js有很多，但是总结起来的非常的少，于是乎此文就是为总结js网页代码的一片文章。</p><h2 id="代码区域"><a href="#代码区域" class="headerlink" title="代码区域"></a>代码区域</h2><h3 id="标题栏切换特效"><a href="#标题栏切换特效" class="headerlink" title="标题栏切换特效"></a>标题栏切换特效</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--标题栏切换特效 start--&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> OriginTitile = <span class="built_in">document</span>.title;</span><br><span class="line"><span class="keyword">var</span> titleTime;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">$(<span class="string">'[rel="shortcut icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"//www.hzv5.cn/logo.jpg"</span>);</span><br><span class="line"><span class="built_in">document</span>.title = <span class="string">'(⊙_⊙) 哎呀！崩溃啦~ •'</span> + OriginTitile;</span><br><span class="line">clearTimeout(titleTime);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">$(<span class="string">'[rel="shortcut icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"//hzv5.cn/logo.jpg"</span>);</span><br><span class="line"><span class="built_in">document</span>.title = <span class="string">'๑乛◡乛๑ 又好啦，嘿嘿~ •'</span> + OriginTitile;</span><br><span class="line">titleTime = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">document</span>.title = OriginTitile;</span><br><span class="line">&#125;, <span class="number">1500</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!--标题栏切换特效 end--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="给复制内容增加版权信息"><a href="#给复制内容增加版权信息" class="headerlink" title="给复制内容增加版权信息"></a>给复制内容增加版权信息</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--给复制内容增加版权信息 start--&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">"body"</span>).on(<span class="string">'copy'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span>.getSelection == <span class="string">"undefined"</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">var</span> body_element = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'body'</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> selection = <span class="built_in">window</span>.getSelection();</span><br><span class="line">    <span class="keyword">if</span> ((<span class="string">""</span> + selection).length &lt; <span class="number">30</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">var</span> newdiv = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">    newdiv.style.position = <span class="string">'absolute'</span>;</span><br><span class="line">    newdiv.style.left = <span class="string">'-99999px'</span>;</span><br><span class="line">    body_element.appendChild(newdiv);</span><br><span class="line">    newdiv.appendChild(selection.getRangeAt(<span class="number">0</span>).cloneContents());</span><br><span class="line">    <span class="comment">//提示复制成功代码start</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.getSelection)&#123;</span><br><span class="line">        selection = <span class="built_in">window</span>.getSelection();</span><br><span class="line">        alert(<span class="string">"复制成功~\n若转载请注明出处："</span>+<span class="built_in">document</span>.location.href);</span><br><span class="line">        <span class="comment">//document.write("复制成功~\n转载请注明出处："+document.location.href);</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">document</span>.getSelection)&#123;<span class="comment">//IE10</span></span><br><span class="line">        selection= <span class="built_in">document</span>.getSelection();</span><br><span class="line">        alert(<span class="string">"复制成功~\n若转载请注明出处："</span>+<span class="built_in">document</span>.location.href);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">document</span>.selection)&#123;<span class="comment">//IE6+10-</span></span><br><span class="line">        selection= <span class="built_in">document</span>.selection.createRange().text;</span><br><span class="line">        alert(<span class="string">"复制成功~\n若转载请注明出处："</span>+<span class="built_in">document</span>.location.href);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        selection= <span class="string">""</span>;</span><br><span class="line">        alert(<span class="string">"浏览器兼容问题导致复制失败！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//提示复制成功代码end</span></span><br><span class="line">    <span class="keyword">if</span> (selection.getRangeAt(<span class="number">0</span>).commonAncestorContainer.nodeName == <span class="string">"PRE"</span>) &#123;</span><br><span class="line">        newdiv.innerHTML = <span class="string">"&lt;pre&gt;"</span> + newdiv.innerHTML + <span class="string">"&lt;/pre&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    newdiv.innerHTML += <span class="string">"&lt;/br&gt;&lt;/br&gt;若转载请注明出处: &lt;a href='"</span> + <span class="built_in">document</span>.location.href + <span class="string">"'&gt;"</span> + <span class="built_in">document</span>.location.href + <span class="string">"&lt;/a&gt; &amp;copy; hzv5.cn"</span>;</span><br><span class="line">    selection.selectAllChildren(newdiv);</span><br><span class="line">    <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; body_element.removeChild(newdiv); &#125;, <span class="number">200</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!--给复制内容增加版权信息 end--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="鼠标点击出现随机数字"><a href="#鼠标点击出现随机数字" class="headerlink" title="鼠标点击出现随机数字"></a>鼠标点击出现随机数字</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--鼠标点击出现随机数字 start--&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"body"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"天真"</span>,<span class="string">"富强"</span>, <span class="string">"民主"</span>, <span class="string">"文明"</span>, <span class="string">"和谐"</span>, <span class="string">"自由"</span>, <span class="string">"平等"</span>, <span class="string">"公正"</span> ,<span class="string">"法治"</span>, <span class="string">"爱国"</span>, <span class="string">"敬业"</span>, <span class="string">"诚信"</span>, <span class="string">"友善"</span>);</span><br><span class="line">        <span class="keyword">var</span> $i = $(<span class="string">"&lt;span/&gt;"</span>).text(a[a_idx]);</span><br><span class="line">        a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">        <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">        y = e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            <span class="string">"z-index"</span>: <span class="number">99999</span>,</span><br><span class="line">            <span class="string">"top"</span>: y - <span class="number">20</span>,</span><br><span class="line">            <span class="string">"left"</span>: x,</span><br><span class="line">            <span class="string">"position"</span>: <span class="string">"absolute"</span>,</span><br><span class="line">            <span class="string">"font-weight"</span>: <span class="string">"bold"</span>,</span><br><span class="line">            <span class="string">"color"</span>: <span class="string">"#ff0000"</span></span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">"body"</span>).append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">            <span class="string">"top"</span>: y - <span class="number">180</span>,</span><br><span class="line">            <span class="string">"opacity"</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">1800</span>,</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            $i.remove();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">window, document, undefined</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> hearts = [];</span><br><span class="line">    <span class="built_in">window</span>.requestAnimationFrame = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">window</span>.requestAnimationFrame || <span class="built_in">window</span>.webkitRequestAnimationFrame || <span class="built_in">window</span>.mozRequestAnimationFrame || <span class="built_in">window</span>.oRequestAnimationFrame || <span class="built_in">window</span>.msRequestAnimationFrame ||</span><br><span class="line">        <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">            setTimeout(callback, <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">    init();</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        css(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: absolute;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>);</span><br><span class="line">        attachEvent();</span><br><span class="line">        gameloop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">gameloop</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; hearts.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hearts[i].alpha &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">document</span>.body.removeChild(hearts[i].el);</span><br><span class="line">                hearts.splice(i, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            hearts[i].y-= <span class="number">1.6</span>;</span><br><span class="line">            hearts[i].scale += <span class="number">0.01</span>;</span><br><span class="line">            hearts[i].alpha -= <span class="number">0.01</span>;</span><br><span class="line">            hearts[i].el.style.cssText = <span class="string">"left:"</span> + hearts[i].x + <span class="string">"px;top:"</span> + hearts[i].y + <span class="string">"px;opacity:"</span> + hearts[i].alpha + <span class="string">";transform:scale("</span> + hearts[i].scale + <span class="string">","</span> + hearts[i].scale + <span class="string">") rotate(45deg);background:"</span> + hearts[i].color;</span><br><span class="line">        &#125;</span><br><span class="line">        requestAnimationFrame(gameloop);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">attachEvent</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> old = <span class="keyword">typeof</span> <span class="built_in">window</span>.onclick === <span class="string">"function"</span> &amp;&amp; <span class="built_in">window</span>.onclick;</span><br><span class="line">        <span class="built_in">window</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">            old &amp;&amp; old();</span><br><span class="line">            createHeart(event);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createHeart</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> d = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span><br><span class="line">        d.className = <span class="string">"heart"</span>;</span><br><span class="line">        hearts.push(&#123;</span><br><span class="line">            el: d,</span><br><span class="line">            x: event.clientX - <span class="number">2</span>,</span><br><span class="line">            y: event.clientY - <span class="number">2</span>,</span><br><span class="line">            scale: <span class="number">1</span>,</span><br><span class="line">            alpha: <span class="number">1</span>,</span><br><span class="line">            color: randomColor()</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">css</span>(<span class="params">css</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> style = <span class="built_in">document</span>.createElement(<span class="string">"style"</span>);</span><br><span class="line">        style.type = <span class="string">"text/css"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            style.appendChild(<span class="built_in">document</span>.createTextNode(css));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ex) &#123;</span><br><span class="line">            style.styleSheet.cssText = css;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(style);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">randomColor</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"rgb("</span> + (~~ (<span class="built_in">Math</span>.random() * <span class="number">255</span>)) + <span class="string">","</span> + (~~ (<span class="built_in">Math</span>.random() * <span class="number">255</span>)) + <span class="string">","</span> + (~~ (<span class="built_in">Math</span>.random() * <span class="number">255</span>)) + <span class="string">")"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;!--鼠标点击出现随机数字 end--&gt;</span></span><br></pre></td></tr></table></figure><p>来源: <a href="http://www.hzv5.cn" target="_blank" rel="noopener">http://www.hzv5.cn</a> 的源代码</p>]]></content:encoded>
      
      <comments>https://aclihui.com/js/#disqus_thread</comments>
    </item>
    
    <item>
      <title>博客起航</title>
      <link>https://aclihui.com/start/</link>
      <guid>https://aclihui.com/start/</guid>
      <pubDate>Thu, 26 Jul 2018 04:00:16 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;博客起航&quot;&gt;&lt;a href=&quot;#博客起航&quot; class=&quot;headerlink&quot; title=&quot;博客起航&quot;&gt;&lt;/a&gt;博客起航&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="博客起航"><a href="#博客起航" class="headerlink" title="博客起航"></a>博客起航</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博客搭建过很多很多，我也和其他的人走了相同的道路。<br>首先是查找免费的域名，空间等一切免费的东西。<br>然后发现免费的东西限制太多，控制权不在自己手中，其他人想删就删，于是乎自己买服务器，自己买域名，当然也有很多的学费域名。用建站程序建站。<br>到了现在，发现其实我只需要一个安安静静写文字的场所就好，于是乎，此网站就因此成立。</p><h2 id="这个网站是干什么的？"><a href="#这个网站是干什么的？" class="headerlink" title="这个网站是干什么的？"></a>这个网站是干什么的？</h2><p>这个问题其实是最令人深思的，也是最简单的，网站不知道是干什么的开有什么用。网站不知道干什么的，也肯定开的时间不会太长。</p><p>这个网站是作为YUGE来写的，写的内容是对知识和生活的感知和思考。</p><hr><p>时间：2018-7-28</p><hr>]]></content:encoded>
      
      <comments>https://aclihui.com/start/#disqus_thread</comments>
    </item>
    
    <item>
      <title>imgtest</title>
      <link>https://aclihui.com/imgtest/</link>
      <guid>https://aclihui.com/imgtest/</guid>
      <pubDate>Sat, 21 Jul 2018 04:40:42 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;博客启航&quot;&gt;&lt;a href=&quot;#博客启航&quot; class=&quot;headerlink&quot; title=&quot;博客启航&quot;&gt;&lt;/a&gt;博客启航&lt;/h1&gt;&lt;p&gt;两天前 YUGE’S BLOG 正式启用，昨天对于BLOG的所有的设置几乎已经完成，今天将图片的测试完成后部署就完成了，下面
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="博客启航"><a href="#博客启航" class="headerlink" title="博客启航"></a>博客启航</h1><p>两天前 YUGE’S BLOG 正式启用，昨天对于BLOG的所有的设置几乎已经完成，今天将图片的测试完成后部署就完成了，下面带上一张图。<br><img src="https://yugepic-1253731526.cos.ap-beijing.myqcloud.com/dcb60a5eba55a1495e43570047b11048.jpg" alt=""></p>]]></content:encoded>
      
      <comments>https://aclihui.com/imgtest/#disqus_thread</comments>
    </item>
    
    <item>
      <title>宝塔面板的内存占用率过高的解决方案</title>
      <link>https://aclihui.com/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9A%84%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <guid>https://aclihui.com/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9A%84%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <pubDate>Fri, 22 Jun 2018 16:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;昨天晚上想要解决阿里云服务器(为什么是单指阿里云，因为我的另一台服务器（VU），挂了一个WP,和一个DZ占用率都低于20%)内存占用过高的问
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>昨天晚上想要解决阿里云服务器(为什么是单指阿里云，因为我的另一台服务器（VU），挂了一个WP,和一个DZ占用率都低于20%)内存占用过高的问题但是迟迟没有解决，曾经也发过工单，但是都没有解决，时至今日，终于找到解决的办法于是，这篇文章就因此成型。</p><p></p><h2>过程：</h2><br>经过进程查找<p></p><p><img src="https://www.aclihui.com/wp-content/uploads/2018/08/900.png"></p><p>这一个PHP-Fpm 占用的数量甚多，且单个占用的亮比较大，于是猜测是否是这个服务项的影响呢？</p><p>于是乎 去网页搜查，经过不懈的查找终于找到了新技能get的地方（限制并发的数量）</p><p>在如下网页找到解决方案</p><p><a href="https://www.bt.cn/bbs/thread-1132-1-1.html" target="_blank" rel="noopener">https://www.bt.cn/bbs/thread-1132-1-1.html</a></p><p>找到总控的软件设置-&gt;PHP7.2(因人而异)-&gt;设置-&gt;性能调整，修改成如下图所示：</p><p><img src="https://www.aclihui.com/wp-content/uploads/2018/08/563.png"></p><p>内存占用率明显下降，降至30%左右（未优化前80%上下）。</p><p></p><h2>遗留问题</h2><br>至于为什么同样的宝塔面板，VU家的内存（1G）占用率低，阿里的内存(2G)占用率高，问题还在调查中，单指猜测，宝塔在1H1G的服务器上限制了PHP的并发的数量，而在1H2G的服务器上减少了对服务器并发数量的限制。<p></p><p></p><h2>问题拓展</h2><br>如何在命令行下调整呢，在查资料的过程中也有所涉及，相应网址如下:<p></p><p><a href="https://www.kancloud.cn/digest/php-src/136260" target="_blank" rel="noopener">看云论坛</a></p><p class="entry-title"><a href="http://zhaokaifeng.com/?p=653" target="_blank" rel="noopener">解决CentOS 7中php-fpm进程数过多导致服务器内存资源消耗较大的问题</a></p>]]></content:encoded>
      
      <comments>https://aclihui.com/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E7%9A%84%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/#disqus_thread</comments>
    </item>
    
    <item>
      <title>four-month</title>
      <link>https://aclihui.com/four-month/</link>
      <guid>https://aclihui.com/four-month/</guid>
      <pubDate>Tue, 19 Jun 2018 04:35:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;时间：-2018-6-19-12：32&quot;&gt;&lt;a href=&quot;#时间：-2018-6-19-12：32&quot; class=&quot;headerlink&quot; title=&quot;时间： 2018-6-19 12：32&quot;&gt;&lt;/a&gt;时间： 2018-6-19 12：32&lt;/h2&gt;&lt;p&gt;&lt;/
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="时间：-2018-6-19-12：32"><a href="#时间：-2018-6-19-12：32" class="headerlink" title="时间： 2018-6-19 12：32"></a>时间： 2018-6-19 12：32</h2><p></p><h1>起因:今天看来一下时间</h1><br>四个月 2018-02-19—2018-06-19<p></p><p></p><h1>四个月的感悟</h1><br>四个月内（或者从第一个域名（2017-05-21–2018-05-21）开始）摸索了很久的域名和主题还有服务器的信息，我也相同的经历了他们的过程，从寻找免费域名主机，到寻找<p></p>]]></content:encoded>
      
      <comments>https://aclihui.com/four-month/#disqus_thread</comments>
    </item>
    
    <item>
      <title>code-birthday</title>
      <link>https://aclihui.com/code-birthday/</link>
      <guid>https://aclihui.com/code-birthday/</guid>
      <pubDate>Tue, 12 Jun 2018 16:18:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;div id=&quot;problem_description&quot; class=&quot;content active&quot;&gt;&lt;br&gt;&lt;div cla
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><div id="problem_description" class="content active"><br><div class="markdown-body transition visible"><br><div class="panel_content">每个人对自己的生日肯定是铭记于心，淘淘也不例外，因为生日的时候会有蛋糕、礼物等等等等，想想都那么开心、甜蜜。<br>某一天，范老师给大家出了一个题目，要求每个小朋友算一算今年自己的生日是今年的第几天呢？淘淘想了很久才算出来，你能帮助淘淘快点算出来吗？幸运的是淘淘生日不是2月29日，否则淘淘将至少苦恼4年才轮到一次。</div><br></div><br></div><br>## 输入<br><div id="problem_input" class="content active"><br><div class="markdown-body transition visible"><br><div class="panel_content">一行，两个整数m和d，分别表示2018年淘淘生日的月份和淘淘生日的日子。<br><div></div><br></div><br></div><br></div><br>## 输出<br><div id="problem_output" class="content active"><br><div class="markdown-body transition visible"><br><div class="panel_content">一个整数，输出淘淘2018年第几天过生日。</div><br></div><br></div><br><div class="title active">样例输入<i class="dropdown icon"></i></div><br><div class="content active"><br><pre class="ui bottom attached segment transition visible"><span id="problem_sample_input" class="sample_input">2 1<br></span></pre><br></div><br><div class="title active">样例输出<i class="dropdown icon"></i></div><br><div class="content active"><br><pre class="ui bottom attached segment transition visible"><span id="problem_sample_output" class="sample_output">32</span></pre><br>代码：<br><pre>#include&lt;stdio.h&gt;<br>int main()<br>{<br>    int m,d;<br>    int sum=0;<br>    int i;<br>    int month[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};<br>    scanf(“%d%d”,&amp;m,&amp;d);<br>        for(i=1;i&lt;m;i++)<br>        {<br>            sum=sum+month[i];<br>        }<br>        sum=sum+d;<br>    printf(“%d”,sum);<br>    return 0;<br>}</pre><br></div>]]></content:encoded>
      
      <comments>https://aclihui.com/code-birthday/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CODE-淘淘的Q币</title>
      <link>https://aclihui.com/code-qbi/</link>
      <guid>https://aclihui.com/code-qbi/</guid>
      <pubDate>Tue, 12 Jun 2018 15:43:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;&lt;div id=&quot;problem_description&quot; class=&quot;content active&quot;&gt;&lt;/div&gt;&lt;/p
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><div id="problem_description" class="content active"></div></p><p><div class="markdown-body transition visible"></div></p><p><div></div><br>淘淘使用QQ时总觉得自己的Q币太少不够用，希望谁能送给自己尽量多的Q币，晚上睡觉时还想着这个事情。<br>淘淘梦中来到了一个海岛上，查看了一遍以后，他发现岛上有很多的坑，这些坑呈一直线分布，虚拟的Q币居然变成了可以拿到的圆形金币，第1个坑里面有1枚，第2个坑里面没有，第3个坑里面有3枚，第4个坑里面没有，第5个坑里面有5枚，以此类推。<br>如果岛上有n个坑，你能告诉淘淘能抓到多少枚Q币吗？</p><p><br></p><p><div class="title active">输入<i class="dropdown icon"></i></div></p><p><div id="problem_input" class="content active"></div></p><div class="markdown-body transition visible"><p>一个整数n，表示有n个坑(1≤n≤10000)</p><p></p></div><br><p></p><p><div class="title active">输出<i class="dropdown icon"></i></div></p><p><div id="problem_output" class="content active"></div></p><div class="markdown-body transition visible"><p>一个整数，表示抓到Q币的总数。</p><p></p></div><br><p></p><p><div class="title active">样例输入<i class="dropdown icon"></i></div></p><p><div class="content active"></div></p><pre class="ui bottom attached segment transition visible"><span id="problem_sample_input" class="sample_input">3</span></pre><div class="title active">样例输出<i class="dropdown icon"></i></div><div class="content active"><pre class="ui bottom attached segment transition visible"><span id="problem_sample_output" class="sample_output">4</span></pre></div>代码实现：<pre>#include&lt;stdio.h&gt;int main(){    int n;    int i=1,sum=0;    scanf("%d",&amp;n);   for(i=1;i&lt;=n;i++)       {         if(i%2==0)        {            continue;        }        else        sum=sum+i;    }    printf("%d",sum);    return 0;}</pre>]]></content:encoded>
      
      <comments>https://aclihui.com/code-qbi/#disqus_thread</comments>
    </item>
    
    <item>
      <title>GitHub官方落实微软收购</title>
      <link>https://aclihui.com/github-and-microsoft/</link>
      <guid>https://aclihui.com/github-and-microsoft/</guid>
      <pubDate>Mon, 04 Jun 2018 15:49:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;合作成功啦&quot;&gt;&lt;a href=&quot;#合作成功啦&quot; class=&quot;headerlink&quot; title=&quot;合作成功啦&quot;&gt;&lt;/a&gt;合作成功啦&lt;/h2&gt;&lt;p&gt;大约到现在GitHub已经谈判好了，微软的2014年的开源政策也一直推进GitHub的发展，面对现在GitHub的收
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="合作成功啦"><a href="#合作成功啦" class="headerlink" title="合作成功啦"></a>合作成功啦</h2><p>大约到现在GitHub已经谈判好了，微软的2014年的开源政策也一直推进GitHub的发展，面对现在GitHub的收购，希望在微软的帮助下GitHub变的更好吧！</p><p></p><h1>原文</h1><p></p><p></p><h2 class="lh-condensed">A bright future for GitHub</h2><p></p><p><ul class="d-flex flex-wrap mt-1 mb-2 list-style-none text-gray"><br>     <li class="my-1 mr-4 no-wrap"> Jun 04, 2018</li><br>     <li class="my-1 mr-4 no-wrap"><a class="d-flex flex-items-center text-gray no-underline" href="https://github.com/defunkt" data-ga-click="User, click, text:defunkt" target="_blank" rel="noopener"><span class="d-inline-block v-align-middle overflow-hidden mr-1 rounded-1"><img class="avatar avatar-small" src="https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=20" srcset="https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=20 1x, https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=40 2x, https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=60 3x, https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=80 4x" alt="defunkt" width="20" height="20" data-proofer-ignore="true"></span>defunkt</a></li><br></ul></p><div class="content markdown-body"><br><br><img title="" src="https://user-images.githubusercontent.com/98681/40890924-4bad5ce0-6732-11e8-9648-192aa71f0830.png" alt="GitHub and Microsoft"><br><br>I am very excited to announce that <a href="https://news.microsoft.com/?p=406917" target="_blank" rel="noopener">Microsoft is acquiring GitHub</a> and expect the agreement to close by the end of the year. While it will still take a few months to finalize, we wanted to share the news as soon as we were able.<br><br>When GitHub first launched ten years ago, I could have never imagined this headline. Git was a powerful but niche tool, clouds were just things in the sky, and Microsoft was a very different company. Open source and business, people said at the time, mixed as well as oil and water.<br><br>We disagreed. As developers, we knew this was a false dichotomy—we had been using open source software successfully in a business setting for a long time. What we really needed was an easier way to work with others regardless of whether the code was public, private, or something in-between. We wanted to do it using Git, we wanted anyone in the world to be able to join in, and we didn’t want it to cost a dime if it was open source. So we created GitHub.<br><br>Now, of course, things are different. Git is far and away the most popular version control system, clouds are mostly computers, and Microsoft is the most active organization on GitHub in the world. Their VS Code project alone is beloved by millions of developers, entirely open source, and built using GitHub’s Electron platform. Beyond that, today major enterprises regularly embrace open source. The world has realized how important happy, productive developers really are. And also, people have smartphones now.<br><br>What hasn’t changed, however, is our focus on the developer. From the beginning, we have been obsessed with building a product for the people using it. We want to make developers more productive and we want more people to become developers. From “Code to Cloud and Code to Edge”, GitHub’s mission is to help every developer—regardless of experience level—learn, code, and ship software effectively.<br><br>So as we look to the next decade of software development and beyond, we know it’s all about the developer. And as we’ve gotten to know the team at Microsoft over the past few years through collaborating on projects from Git LFS to Electron, we’ve learned that they agree. Their work on open source has inspired us, the success of the Minecraft and LinkedIn acquisitions has shown us they are serious about growing new businesses well, and the growth of Azure has proven they are an innovative development platform.<br><br>But more than that, their vision for the future closely matches our own. We both believe GitHub needs to remain an open platform for all developers. No matter your language, stack, platform, cloud, or license, GitHub will continue to be your home—the best place for software creation, collaboration, and discovery.<br><br>We both believe that software development needs to become easier, more accessible, more intelligent, and more open, so more people can become developers and existing developers can spend more time focusing on the unique problems they’re trying to solve.<br><br>We both see the growing need for developers and the growing importance of software in all facets of our lives.<br><br>And, most importantly, we both believe we can do greater things together than alone. Collaboration, after all, is at the heart of everything we do.<br><br>As part of this change, Nat Friedman will be taking on the role of GitHub’s CEO. We have been searching for a new CEO for some time and found in both Microsoft and Nat a partner we believe will strengthen and grow the GitHub community and company over the next few years. Nat has a ton of experience with software and the open source software community, having co-founded Xamarin and worked on numerous open source projects over the years, and is the perfect person to help GitHub grow and continue to make life better for developers.<br><br>As for me, I’ll be taking on a new role at Microsoft working closely with Nat and the team, and will share more details on that in the future.<br><br>I’m extremely proud of what GitHub and our community have accomplished over the past decade, and I can’t wait to see what lies ahead. The future of software development is bright and I’m thrilled to be joining forces with Microsoft to help make it a reality.<br><br><strong><a class="link-gray-dark" href="https://github.com/defunkt" target="_blank" rel="noopener">@defunkt</a></strong><br>CEO &amp; Co-Founder, GitHub<br><h1>机器翻译：</h1><br><h2 class="lh-condensed">GitHub的光明未来</h2><br><ul class="d-flex flex-wrap mt-1 mb-2 list-style-none text-gray"><br>     <li class="my-1 mr-4 no-wrap"> 2018年6月4日</li><br>     <li class="my-1 mr-4 no-wrap"><a class="d-flex flex-items-center text-gray no-underline" href="https://github.com/defunkt" data-ga-click="User, click, text:defunkt" target="_blank" rel="noopener"><span class="d-inline-block v-align-middle overflow-hidden mr-1 rounded-1"><img class="avatar avatar-small" src="https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=20" srcset="https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=20 1x, https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=40 2x, https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=60 3x, https://avatars0.githubusercontent.com/defunkt?v=3&amp;s=80 4x" alt="德芬克特" width="20" height="20" data-proofer-ignore="true"></span>德芬克特</a></li><br></ul><br><div class="content markdown-body"><br><br><img title="" src="https://user-images.githubusercontent.com/98681/40890924-4bad5ce0-6732-11e8-9648-192aa71f0830.png" alt="GitHub和微软"><br><br>我很高兴地宣布，<a href="https://news.microsoft.com/?p=406917" target="_blank" rel="noopener">微软正在收购GitHub，</a>并预计该协议将在年底前完成。虽然还需要几个月才能完成，但我们希望尽快分享这个消息。<br><br>当GitHub十年前首次推出时，我从未想到这个标题。Git是一个功能强大但利基的工具，云只是天空中的东西，而微软是一个非常不同的公司。开源和商业，当时人们说，混合以及石油和水。<br><br>我们不同意。作为开发人员，我们知道这是一种虚假的二分法 - 我们长期以来一直在商业环境中成功地使用开源软件。我们真正需要的是与其他人合作的更简单的方式，无论代码是公开的，私人的还是其他内容。我们希望使用Git来实现，我们希望世界上的任何人都能加入进来，如果它是开源的，我们不希望它花费一分钱。所以我们创建了GitHub。<br><br>当然，事情是不同的。Git是最受欢迎的版本控制系统，云计算主要是计算机，微软是全球最活跃的GitHub组织。他们的VS Code项目由数百万开发人员完全支持，完全开放源代码，并使用Gi​​tHub的Electron平台构建。除此之外，今天的主要企业经常接受开源。世界已经意识到开发人员的真正重要性和重要性。而且，人们现在拥有智能手机。<br><br>然而，没有改变的是我们对开发者的关注。从一开始，我们一直着迷于为使用它的人们创造一种产品。我们希望让开发人员提高工作效率，并希望更多人成为开发人员。从“代码到云和代码到边缘”，GitHub的使命是帮助每个开发人员（无论经验水平如何）有效地学习，编写代码并提供软件。<br><br>因此，当我们展望未来十年的软件开发及其后，我们知道这都是关于开发人员。正如我们在过去几年中通过合作从Git LFS到Electron的项目一样了解了微软的团队，我们了解到他们同意。他们在开源领域的工作激励了我们，Minecraft和LinkedIn收购的成功向我们表明他们认真对待拓展新业务的认真态度，Azure的发展已经证明他们是一个创新的开发平台。<br><br>但更重要的是，他们对未来的展望与我们自己的展望非常契合。我们都认为GitHub需要为所有开发人员保持一个开放的平台。无论您的语言，堆栈，平台，云或许可证如何，GitHub都将继续成为您的家 - 软件创建，协作和发现的最佳场所。<br><br>我们都相信软件开发需要变得更容易，更易于访问，更智能，更开放，因此更多的人可以成为开发人员，现有开发人员可以花更多时间专注于他们试图解决的独特问题。<br><br>我们都看到了开发人员日益增长的需求以及软件在我们生活的各个方面越来越重要。<br><br>最重要的是，我们都相信我们可以一起做更多的事情，而不是单独做。毕竟，合作是我们所做事情的核心。<br><br>作为这一变化的一部分，Nat Friedman将担任GitHub CEO的角色。我们一直在寻找新的首席执行官一段时间，并且在微软和纳特都找到了我们认为将在未来几年内加强和发展GitHub社区和公司的合作伙伴。Nat在软件和开源软件社区拥有丰富的经验，与他共同创立了Xamarin，并且多年来一直致力于开发众多开源项目，并且是帮助GitHub成长并继续为开发人员带来更好生活的完美人选。<br><br>对我来说，我将在微软与Nat和团队紧密合作中担任新的角色，并将在未来分享更多细节。<br><br>我对GitHub和我们的社区在过去十年中取得的成就感到非常自豪，我迫不及待地想要看看未来会发生什么。软件开发的未来是光明的，我很高兴能够与微软联手帮助实现这一目标。<br><br><strong><a class="link-gray-dark" href="https://github.com/defunkt" target="_blank" rel="noopener">@defunkt</a></strong><br>首席执行官兼联合创始人，GitHub<br><h1>微软文章：</h1><br><header class="entry-header m-blog-content"><br><h1 class="entry-title c-heading-3">Microsoft + GitHub = Empowering Developers</h1><br><div><br><p class="c-meta-text">Jun 4, 2018   |   <a class="c-hyperlink u-underline" title="Satya Nadella" href="https://blogs.microsoft.com/blog/author/satyanadella/" aria-label="See more written by Satya Nadella" target="_blank" rel="noopener">Satya Nadella - Chief Executive Officer, Microsoft</a></p><br><br></div><br></header><img class="attachment-post-thumbnail size-post-thumbnail wp-post-image" src="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit.jpg" sizes="(max-width: 1017px) 100vw, 1017px" srcset="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit.jpg 1017w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit-254x300.jpg 254w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit-768x906.jpg 768w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit-868x1024.jpg 868w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit-915x1080.jpg 915w" alt="" aria-label="Image of satya github"><br><div class="entry-content m-blog-content"><br><br>Today, we <a href="https://news.microsoft.com/?p=406917" target="_blank" rel="noopener">announced</a> an agreement to acquire GitHub, the world’s leading software development platform. I want to share what this acquisition will mean for our industry and for developers.<br><br>The era of the intelligent cloud and intelligent edge is upon us. Computing is becoming embedded in the world, with every part of our daily life and work and every aspect of our society and economy being transformed by digital technology.<br><br>Developers are the builders of this new era, writing the world’s code. And GitHub is their home.<br><br>As every industry – from precision medicine to precision agriculture, from personalized education to personalized banking – is being impacted by technology, the developer community will only grow in numbers and importance. Developer workflows will drive and influence business processes and functions across the organization – from marketing, sales and service, to IT and HR. And value creation and growth across every industry will increasingly be determined by the choices developers make.<br><br>In short, developers will be at the center of solving the world’s most pressing challenges. However, the real power comes when every developer can create together, collaborate, share code and build on each other’s work. In all walks of life, we see the power of communities, and this is true for software development and developers.<br><br>That is why we are so excited about today’s announcement. More than 28 million developers already collaborate on GitHub, and it is home to more than 85 million code repositories used by people in nearly every country. From the largest corporations to the smallest startups, GitHub is the destination for developers to learn, share and work together to create software. It’s a destination for Microsoft too. We are the most active organization on GitHub, with more than 2 million “commits,” or updates, made to projects.<br><br>Microsoft has been a developer-focused company from the very first product we created to the platforms and tools we offer today. Building technology so that others can build technology is core to our mission to empower every person and every organization on the planet to achieve more.<br><figure id="attachment_52553877" class="wp-caption alignnone"><a href="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit.jpg" target="_blank" rel="noopener"><img class="wp-image-52553877 size-full" src="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit.jpg" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit.jpg 1200w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit-300x200.jpg 300w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit-768x512.jpg 768w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit-1024x683.jpg 1024w" alt="" width="1200" height="800"></a><figcaption class="wp-caption-text">Chris Wanstrath (left), Github CEO and co-founder; Nat Friedman, Microsoft corporate vice president, Developer Services; Satya Nadella, Microsoft CEO; and Amy Hood, Microsoft Chief Financial Officer.</figcaption></figure><br>Microsoft is also committed to empowering communities, from the world’s professionals to IT professionals to gamers. We believe in the power of communities to achieve much more than what their members can do on their own. It’s our ability to work together that helps our dreams become reality, and we are dedicated to cultivating and growing communities to do just that.<br><br>And Microsoft is all-in on open source. We have been on a journey with open source, and today we are active in the open source ecosystem, we contribute to open source projects, and some of our most vibrant developer tools and frameworks are open source. When it comes to our commitment to open source, judge us by the actions we have taken in the recent past, our actions today, and in the future.<br><br>Given all of this, together with GitHub, we see three clear opportunities ahead.<br><br>First, we will empower developers at every stage of the development lifecycle – from ideation to collaboration to deployment to the cloud. Going forward, GitHub will remain an open platform, which any developer can plug into and extend. Developers will continue to be able to use the programming languages, tools and operating systems of their choice for their projects – and will still be able to deploy their code on any cloud and any device.<br><br>Second, we will accelerate enterprise developers’ use of GitHub, with our direct sales and partner channels and access to Microsoft’s global cloud infrastructure and services.<br><br>Finally, we will bring Microsoft’s developer tools and services to new audiences.<br><br>Most importantly, we recognize the responsibility we take on with this agreement. We are committed to being stewards of the GitHub community, which will retain its developer-first ethos, operate independently and remain an open platform. We will always listen to developer feedback and invest in both fundamentals and new capabilities.<br><br>Once the acquisition closes later this year, GitHub will be led by CEO Nat Friedman, an open source veteran and founder of Xamarin, who will continue to report to Microsoft Cloud + AI Group Executive Vice President Scott Guthrie; GitHub CEO and Co-Founder Chris Wanstrath will be a technical fellow at Microsoft, also reporting to Scott. You can see how Chris, Nat and I envision the opportunity ahead in this <a href="http://aka.ms/ms06042018" target="_blank" rel="noopener">public presentation</a>.<br><br>Together we will continue to advance GitHub as a platform loved by developers and trusted by organizations.<br><p class="tag-list">Tags: <a href="https://blogs.microsoft.com/blog/tag/chris-wanstrath/" rel="noopener" aria-label="See more stories about Chris Wanstrath" target="_blank">Chris Wanstrath</a>, <a href="https://blogs.microsoft.com/blog/tag/developers/" rel="noopener" aria-label="See more stories about developers" target="_blank">developers</a>, <a href="https://blogs.microsoft.com/blog/tag/github/" rel="noopener" aria-label="See more stories about GitHub" target="_blank">GitHub</a>, <a href="https://blogs.microsoft.com/blog/tag/nat-friedman/" rel="noopener" aria-label="See more stories about Nat Friedman" target="_blank">Nat Friedman</a>, <a href="https://blogs.microsoft.com/blog/tag/satya-nadella/" rel="noopener" aria-label="See more stories about Satya Nadella" target="_blank">Satya Nadella</a></p><br><br><h1>机器翻译：</h1><br><header class="entry-header m-blog-content"><br><h1 class="entry-title c-heading-3">Microsoft + GitHub =授权开发人员</h1><br><div><br><p class="c-meta-text">2018年6月4日|   <a class="c-hyperlink u-underline" title="Satya Nadella" href="https://blogs.microsoft.com/blog/author/satyanadella/" aria-label="See more written by Satya Nadella" target="_blank" rel="noopener">Satya Nadella - 微软首席执行官</a></p><br><br></div><br></header><img class="attachment-post-thumbnail size-post-thumbnail wp-post-image" src="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit.jpg" sizes="(max-width: 1017px) 100vw, 1017px" srcset="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit.jpg 1017w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit-254x300.jpg 254w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit-768x906.jpg 768w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit-868x1024.jpg 868w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0329-Edit-915x1080.jpg 915w" alt="" aria-label="Image of satya github"><br><div class="entry-content m-blog-content"><br><br>今天，我们<a href="https://news.microsoft.com/?p=406917" target="_blank" rel="noopener">宣布</a>了收购世界领先的软件开发平台GitHub的协议。我想分享这次收购对我们的行业和开发者意味着什么。<br><br>智慧云和智能优势的时代即将到来。计算正在变得嵌入世界，我们的日常生活和工作的每一部分以及我们社会和经济的每个方面都被数字技术所改变。<br><br>开发人员是这个新时代的创建者，编写世界代码。而GitHub是他们的家。<br><br>随着每一个行业 - 从精准医学到精准农业，从个性化教育到个性化银行 - 都受到技术的影响，开发者社区只会在数量和重要性方面不断增长。开发人员工作流程将推动并影响整个组织的业务流程和功能 - 从营销，销售和服务到IT和HR。每个行业的价值创造和增长将越来越取决于开发者的选择。<br><br>总之，开发人员将成为解决全球最紧迫挑战的中心。但是，每个开发人员都可以共同创建，协作，共享代码并构建彼此的工作，从而获得真正的力量。在各行各业中，我们都看到了社区的力量，这对于软件开发人员和开发人员来说也是如此。<br><br>这就是为什么我们对今天的宣布如此激动。超过2800万的开发者已经在GitHub上进行合作，并且它拥有几乎每个国家的人们使用的超过8500万个代码库。从最大的公司到最小的初创公司，GitHub是开发人员学习，共享和共同创建软件的目的地。它也是微软的目的地。我们是GitHub上最活跃的组织，对项目提供超过200万次“提交”或更新。<br><br>从我们创建的第一款产品到我们今天提供的平台和工具，微软一直是一家以开发人员为中心的公司。构建技术以便其他人可以构建技术是我们赋予地球上每个人和每个组织实现更多目标的使命的核心。<br><figure id="attachment_52553877" class="wp-caption alignnone"><a href="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit.jpg" target="_blank" rel="noopener"><img class="wp-image-52553877 size-full" title="" src="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit.jpg" sizes="(max-width: 1200px) 100vw, 1200px" srcset="https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit.jpg 1200w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit-300x200.jpg 300w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit-768x512.jpg 768w, https://blogs.microsoft.com/uploads/prod/2018/06/IMG_0271-Edit-1024x683.jpg 1024w" alt="" width="1200" height="800"></a><figcaption class="wp-caption-text">Github首席执行官兼联合创始人Chris Wanstrath（左）微软公司开发服务副总裁Nat Friedman; 微软首席执行官Satya Nadella; 和微软首席财务官Amy Hood。</figcaption></figure><br>微软还致力于为全球专业人士，IT专业人员和玩家提供强大的社区支持。我们相信社区的力量远远超过其成员可以独立完成的事情。这是我们共同努力的能力，有助于我们的梦想成为现实，我们致力于培养和发展社区以做到这一点。<br><br>而且微软全力以赴开源。我们一直在开源的旅程中，今天我们活跃在开源生态系统中，我们为开源项目做出贡献，我们的一些最具活力的开发人员工具和框架也是开源的。当谈到我们对开源的承诺时，通过我们近期采取的行动，我们今天和未来的行动来评判我们。<br><br>鉴于所有这些，与GitHub一起，我们看到了三个明显的机会。<br><br>首先，我们将授权开发人员在开发生命周期的每个阶段 - 从构思到协作到部署到云。展望未来，GitHub将仍然是一个开放平台，任何开发人员都可以插入和扩展。开发人员将继续为他们的项目使用他们选择的编程语言，工具和操作系统 - 并且仍然能够在任何云和任何设备上部署他们的代码。<br><br>其次，我们将加快企业开发人员使用GitHub，与我们的直销和合作伙伴渠道以及微软全球云基础架构和服务的接入。<br><br>最后，我们将把微软的开发者工具和服务带给新的受众。<br><br>最重要的是，我们承认我们对此协议承担的责任。我们致力于成为GitHub社区的管理者，GitHub社区将保留其开发者优先的风格，独立运营并保持开放平台。我们会一直聆听开发者的反馈意见，并投资基础和新功能。<br><br>今年晚些时候收购完成后，GitHub将由首席执行官纳特弗里德曼领导，后者是一位开源的资深人士和Xamarin的创始人，他将继续向微软云+ AI集团执行副总裁Scott Guthrie汇报; GitHub首席执行官兼联合创始人Chris Wanstrath将成为微软的技术人员，并向Scott报告。你可以看到克里斯，纳特和我在这次<a href="http://aka.ms/ms06042018" target="_blank" rel="noopener">公开演讲中</a>如何展望未来的机会。<br><br>我们将一起继续推动GitHub成为开发人员喜爱的平台，并被组织信任。<br><p class="tag-list">标签：<a href="https://blogs.microsoft.com/blog/tag/chris-wanstrath/" rel="noopener" aria-label="See more stories about Chris Wanstrath" target="_blank">Chris Wanstrath</a>，<a href="https://blogs.microsoft.com/blog/tag/developers/" rel="noopener" aria-label="See more stories about developers" target="_blank">开发人员</a>，<a href="https://blogs.microsoft.com/blog/tag/github/" rel="noopener" aria-label="See more stories about GitHub" target="_blank">GitHub</a>，<a href="https://blogs.microsoft.com/blog/tag/nat-friedman/" rel="noopener" aria-label="See more stories about Nat Friedman" target="_blank">Nat Friedman</a>，<a href="https://blogs.microsoft.com/blog/tag/satya-nadella/" rel="noopener" aria-label="See more stories about Satya Nadella" target="_blank">Satya Nadella</a></p><br><br></div><br></div><br></div><br></div>]]></content:encoded>
      
      <comments>https://aclihui.com/github-and-microsoft/#disqus_thread</comments>
    </item>
    
    <item>
      <title>母亲节快乐</title>
      <link>https://aclihui.com/2018-mother-day/</link>
      <guid>https://aclihui.com/2018-mother-day/</guid>
      <pubDate>Fri, 11 May 2018 16:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;母亲节快乐&quot;&gt;&lt;a href=&quot;#母亲节快乐&quot; class=&quot;headerlink&quot; title=&quot;母亲节快乐&quot;&gt;&lt;/a&gt;母亲节快乐&lt;/h1&gt;&lt;div&gt;今天是2018年的母亲节，每个母亲都是相当伟大，包括各位的母亲都相当伟大，在这个每个母亲荣耀的时刻，晓辉在这里祝
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="母亲节快乐"><a href="#母亲节快乐" class="headerlink" title="母亲节快乐"></a>母亲节快乐</h1><div>今天是2018年的母亲节，每个母亲都是相当伟大，包括各位的母亲都相当伟大，在这个每个母亲荣耀的时刻，晓辉在这里祝各位母亲，母亲节快乐，愿所有儿女与父母长时间相伴。</div>]]></content:encoded>
      
      <comments>https://aclihui.com/2018-mother-day/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux新建文件，切换目录，查看当前路径</title>
      <link>https://aclihui.com/linux-dir/</link>
      <guid>https://aclihui.com/linux-dir/</guid>
      <pubDate>Fri, 27 Apr 2018 16:14:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;Linux新建文件，切换目录，查看当前路径&quot;&gt;&lt;a href=&quot;#Linux新建文件，切换目录，查看当前路径&quot; class=&quot;headerlink&quot; title=&quot;Linux新建文件，切换目录，查看当前路径&quot;&gt;&lt;/a&gt;Linux新建文件，切换目录，查看当前路径&lt;/
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="Linux新建文件，切换目录，查看当前路径"><a href="#Linux新建文件，切换目录，查看当前路径" class="headerlink" title="Linux新建文件，切换目录，查看当前路径"></a>Linux新建文件，切换目录，查看当前路径</h1><p></p><h2>新建文件</h2><p></p><p><pre>touch file</pre></p><p></p><h2>切换目录</h2><p></p><p><pre>cd /etc/</pre></p><p></p><h2>查看当前路径</h2><p></p><p><pre>pwd</pre></p><p></p><h2>快捷键</h2><br>TAB //补全命令，补全目录、补全命令参数Ctrl +C //做一个中断<p></p><p><table></table></p><p><thead></thead></p><p><tr></tr></p><p><td><strong>按键</strong></td></p><p><td><strong>作用</strong></td><br><br></p><p><tbody></tbody></p><p><tr></tr></p><p><td>Ctrl+d</td></p><p><td>键盘输入结束或退出终端</td><br></p><p><tr></tr></p><p><td>Ctrl+s</td></p><p><td>暂停当前程序，暂停后按下任意键恢复运行</td><br></p><p><tr></tr></p><p><td>Ctrl+z</td></p><p><td>将当前程序放到后台运行，恢复到前台为命令fg</td><br></p><p><tr></tr></p><p><td>Ctrl+a</td></p><p><td>将光标移至输入行头，相当于Home键</td><br></p><p><tr></tr></p><p><td>Ctrl+e</td></p><p><td>将光标移至输入行末，相当于End键</td><br></p><p><tr></tr></p><p><td>Ctrl+k</td></p><p><td>删除从光标所在位置到行末</td><br></p><p><tr></tr></p><p><td>Alt+Backspace</td></p><p><td>向前删除一个单词</td><br></p><p><tr></tr></p><p><td>Shift+PgUp</td></p><p><td>将终端显示向上滚动</td><br></p><p><tr></tr></p><p><td>Shift+PgDn</td></p><p><td>将终端显示向下滚动</td><br><br><br><br>&nbsp;</p>]]></content:encoded>
      
      <comments>https://aclihui.com/linux-dir/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux中who的用法</title>
      <link>https://aclihui.com/linux-who-use/</link>
      <guid>https://aclihui.com/linux-who-use/</guid>
      <pubDate>Thu, 26 Apr 2018 16:14:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;linux-中的who的用法&quot;&gt;&lt;a href=&quot;#linux-中的who的用法&quot; class=&quot;headerlink&quot; title=&quot;linux 中的who的用法&quot;&gt;&lt;/a&gt;linux 中的who的用法&lt;/h1&gt;&lt;p&gt;who的使用方法非常多，比较喜欢Linux中
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="linux-中的who的用法"><a href="#linux-中的who的用法" class="headerlink" title="linux 中的who的用法"></a>linux 中的who的用法</h1><p>who的使用方法非常多，比较喜欢Linux中的who的用法</p><p>下面是Linux中的who 的使用的方法</p><p>经典的  </p><table><br><thead><br><tr><br><td><strong>参数</strong></td><br><td><strong>说明</strong></td><br></tr><br></thead><br><tbody><br><tr><br><td>-a</td><br><td>打印能打印的全部</td><br></tr><br><tr><br><td>-d</td><br><td>打印死掉的进程</td><br></tr><br><tr><br><td>-m</td><br><td>同am i,mom likes</td><br></tr><br><tr><br><td>-q</td><br><td>打印当前登录用户数及用户名</td><br></tr><br><tr><br><td>-u</td><br><td>打印当前登录用户登录信息</td><br></tr><br><tr><br><td>-r</td><br><td>打印运行等级</td><br></tr><br></tbody><br></table>]]></content:encoded>
      
      <comments>https://aclihui.com/linux-who-use/#disqus_thread</comments>
    </item>
    
    <item>
      <title>为什么我要写博客？</title>
      <link>https://aclihui.com/why-i-open-blog/</link>
      <guid>https://aclihui.com/why-i-open-blog/</guid>
      <pubDate>Thu, 25 Jan 2018 16:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h2 id=&quot;思考&quot;&gt;&lt;a href=&quot;#思考&quot; class=&quot;headerlink&quot; title=&quot;思考&quot;&gt;&lt;/a&gt;思考&lt;/h2&gt;&lt;p&gt;博客，这是个上个世纪的名词了，为什么我要写博客？&lt;br&gt;看过许多相关的知名的博客，有与SEO相关的&lt;a href=&quot;http://luson
        
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>博客，这是个上个世纪的名词了，为什么我要写博客？<br>看过许多相关的知名的博客，有与SEO相关的<a href="http://lusongsong.com" target="_blank" rel="noopener">卢松松博客,</a>有相关于CSS知识的<a href="http://beiyuu.com/" target="_blank" rel="noopener">BeiYuu博客</a>，还有一个关于软件历史的<a href="http://liuyandong.com" target="_blank" rel="noopener">软件那些事儿</a>每个博客都有自己的专题，而我一个97后又会写出什么呢？<br>在BeiYuu看到Steve Losh的博客介绍真的很棒。<br>I’m a programmer, photographer, dancer &amp; bassist from Rochester, New York.”<br>是啊，这和我想要的生活多么相似。<br>I’m a programmer, photographer, piano music lover &amp;sport lover from China.”<br>本人很喜欢编程，摄影，听钢琴曲，运动，看到那篇博客自己恍然大悟，于是想写一个自己的博客，于是思考成形了。<br>副标题来源于<a href="https://www.kymjs.com/" target="_blank" rel="noopener">开源实验室</a>，这句话在我看到第一眼的时候就觉得很正确，于是副标题成形。  </p><h2 id="折腾的路程"><a href="#折腾的路程" class="headerlink" title="折腾的路程"></a>折腾的路程</h2><p>为了博客着实折腾了很久，在这期间开通了 <a href="https://www.jianshu.com/u/a787e7da3fb3" target="_blank" rel="noopener">简书</a> 博客，csdn博客（早就忘掉地址了），后来折腾GitHub pages ,做了基于hexo的网站，但心中满是不理想，想把博客做的内容为主，不想在一边写博客一边翻代码，在试了很多博客系统（wordpress,typecho,emblog..)后选择wordpress为建站模板，这个网站就起步了。</p><p><div></div></p><h2 id="其他注释"><a href="#其他注释" class="headerlink" title="其他注释"></a>其他注释</h2><p><b><div>此篇文章首发在我的第一的备案的域名中，但具体发布的时间也已经模糊不清了，当下找到的最近的时间点是在2018-1-26的时间发布的文章，不出意外的话就应该是这个时间</div></b></p>]]></content:encoded>
      
      <comments>https://aclihui.com/why-i-open-blog/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
