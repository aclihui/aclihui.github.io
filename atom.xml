<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HUI BLOG</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://aclihui.com/"/>
  <updated>2018-12-03T01:25:56.100Z</updated>
  <id>https://aclihui.com/</id>
  
  <author>
    <name>HUI</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://aclihui.com/2018/12/01/hello-world/"/>
    <id>https://aclihui.com/2018/12/01/hello-world/</id>
    <published>2018-12-01T12:22:54.750Z</published>
    <updated>2018-12-03T01:25:56.100Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安卓菜单</title>
    <link href="https://aclihui.com/2018/11/23/android-menu/"/>
    <id>https://aclihui.com/2018/11/23/android-menu/</id>
    <published>2018-11-23T04:54:45.000Z</published>
    <updated>2018-12-03T00:55:55.886Z</updated>
    
    <content type="html"><![CDATA[<p>安卓菜单有点重要，在这里记录一下</p><h1 id="main-xml"><a href="#main-xml" class="headerlink" title="main.xml"></a>main.xml</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/customStyle"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentTop</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerHorizontal</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"191dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="java-代码"><a href="#java-代码" class="headerlink" title="java 代码"></a>java 代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.aclihui.menu;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.widget.RelativeLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    RelativeLayout customStyle;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> MENU_00=Menu.FIRST;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> MENU_01=Menu.FIRST+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> MENU_02=Menu.FIRST+<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    menu.add(<span class="number">0</span>,MENU_00,<span class="number">1</span>,<span class="string">"红色"</span>);</span><br><span class="line">    menu.add(<span class="number">0</span>,MENU_01,<span class="number">2</span>,<span class="string">"灰色"</span>);</span><br><span class="line">    menu.add(<span class="number">0</span>,MENU_02,<span class="number">3</span>,<span class="string">"黑色"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        customStyle=(RelativeLayout)findViewById(R.id.customStyle);</span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                customStyle.setBackgroundColor(Color.RED);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                customStyle.setBackgroundColor(Color.GRAY);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                customStyle.setBackgroundColor(Color.BLACK);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安卓菜单有点重要，在这里记录一下&lt;/p&gt;
&lt;h1 id=&quot;main-xml&quot;&gt;&lt;a href=&quot;#main-xml&quot; class=&quot;headerlink&quot; title=&quot;main.xml&quot;&gt;&lt;/a&gt;main.xml&lt;/h1&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="Android" scheme="https://aclihui.com/categories/Android/"/>
    
    
      <category term="Android" scheme="https://aclihui.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>主题</title>
    <link href="https://aclihui.com/2018/11/03/newtheme/"/>
    <id>https://aclihui.com/2018/11/03/newtheme/</id>
    <published>2018-11-03T14:58:00.000Z</published>
    <updated>2018-12-03T01:43:36.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2018-12-1-使用indigo主题修改版作为网站主题"><a href="#2018-12-1-使用indigo主题修改版作为网站主题" class="headerlink" title="2018-12-1 使用indigo主题修改版作为网站主题"></a>2018-12-1 使用indigo主题修改版作为网站主题</h1><h1 id="2018-11-03-22-58-43-星期六挖坑写主题，在新主题写完发布前暂不更新QAQ"><a href="#2018-11-03-22-58-43-星期六挖坑写主题，在新主题写完发布前暂不更新QAQ" class="headerlink" title="2018-11-03 22:58:43 星期六挖坑写主题，在新主题写完发布前暂不更新QAQ."></a>2018-11-03 22:58:43 星期六挖坑写主题，在新主题写完发布前暂不更新QAQ.</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2018-12-1-使用indigo主题修改版作为网站主题&quot;&gt;&lt;a href=&quot;#2018-12-1-使用indigo主题修改版作为网站主题&quot; class=&quot;headerlink&quot; title=&quot;2018-12-1 使用indigo主题修改版作为网站主题&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="主题" scheme="https://aclihui.com/categories/%E4%B8%BB%E9%A2%98/"/>
    
    
      <category term="主题" scheme="https://aclihui.com/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>嘿嘿，生快哦。</title>
    <link href="https://aclihui.com/2018/10/05/bdg/"/>
    <id>https://aclihui.com/2018/10/05/bdg/</id>
    <published>2018-10-05T07:51:00.000Z</published>
    <updated>2018-12-03T01:41:24.302Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://aclihui-1253731526.cos.ap-beijing.myqcloud.com/gbd.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
      <category term="节日" scheme="https://aclihui.com/categories/%E8%8A%82%E6%97%A5/"/>
    
    
      <category term="节日" scheme="https://aclihui.com/tags/%E8%8A%82%E6%97%A5/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-628. Maximum Product of Three Numbers</title>
    <link href="https://aclihui.com/2018/09/04/leetcode-628-maximum-product-of-three-numbers/"/>
    <id>https://aclihui.com/2018/09/04/leetcode-628-maximum-product-of-three-numbers/</id>
    <published>2018-09-04T13:12:00.000Z</published>
    <updated>2018-12-03T01:39:14.762Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an integer array, find three numbers whose product is maximum and output the maximum product.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3]</span><br><span class="line">Output: 6</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,4]</span><br><span class="line">Output: 24</span><br></pre></td></tr></table></figure></p><p>Note:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The length of the given array will be in range [3,104] and all elements are in the range [-1000, 1000].  </span><br><span class="line">Multiplication of any three numbers in the input won&apos;t exceed the range of 32-bit signed integer.</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一道读题的题目，这是第二次出现快速排序，分析在注释中。</p><h4 id="代码-注释"><a href="#代码-注释" class="headerlink" title="代码+注释"></a>代码+注释</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 设计知识点：</span></span><br><span class="line"><span class="comment">            快速排序（减少时间复杂度，减少时间）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> *  错误用例</span></span><br><span class="line"><span class="comment"> *  Input:</span></span><br><span class="line"><span class="comment">    [-4,-3,-2,-1,60]</span></span><br><span class="line"><span class="comment">    Output:</span></span><br><span class="line"><span class="comment">    120</span></span><br><span class="line"><span class="comment">    Expected:</span></span><br><span class="line"><span class="comment">    720</span></span><br><span class="line"><span class="comment"> * 错误：</span></span><br><span class="line"><span class="comment"> *          1. 测试用例中出现了负数导致产品的值出现了比较错误，使实际的输出值不是最大</span></span><br><span class="line"><span class="comment"> * 解决方案</span></span><br><span class="line"><span class="comment"> *          1.采用将全部的数值转换成整数的方案</span></span><br><span class="line"><span class="comment"> * 缺点</span></span><br><span class="line"><span class="comment"> *          1.会使得最后的结果出错(错误无法避免，切换解决方案)</span></span><br><span class="line"><span class="comment"> *方案2：</span></span><br><span class="line"><span class="comment"> *          分别判断，分别返回</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 错误用例</span></span><br><span class="line"><span class="comment"> * [722,634,-504,-379,163,-613,-842,-578,750,951,-158,30,-238,-392,-487,-797,-157,-374,999,-5,-521,-879,-858,382,626,803,-347,903,-205,57,-342,186,-736,17,83,726,-960,343,-984,937,-758,-122,577,-595,-544,-559,903,-183,192,825,368,-674,57,-959,884,29,-681,-339,582,969,-95,-455,-275,205,-548,79,258,35,233,203,20,-936,878,-868,-458,-882,867,-664,-892,-687,322,844,-745,447,-909,-586,69,-88,88,445,-553,-666,130,-640,-918,-7,-420,-368,250,-786]</span></span><br><span class="line"><span class="comment"> *错误2 ：</span></span><br><span class="line"><span class="comment"> *      低估了数组的大小</span></span><br><span class="line"><span class="comment"> *解决方案:</span></span><br><span class="line"><span class="comment"> *     扩充int到long</span></span><br><span class="line"><span class="comment"> * 看了下大佬的还真是棒 而且简单的很 site:http://www.cnblogs.com/grandyang/p/7084957.html</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quiksort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = low;</span><br><span class="line">    <span class="keyword">int</span> j = high;</span><br><span class="line">    <span class="keyword">int</span> temp = a[i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( low &gt; high)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>((a[j] &gt;= temp) &amp;&amp; (i &lt; j))</span><br><span class="line">        &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        <span class="keyword">while</span>((a[i] &lt;= temp) &amp;&amp; (i &lt; j))</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        a[j]= a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    a[i] = temp;</span><br><span class="line">    quiksort(a,low,i<span class="number">-1</span>);</span><br><span class="line">    quiksort(a,j+<span class="number">1</span>,high);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maximumProduct</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    quiksort(nums,<span class="number">0</span>,numsSize<span class="number">-1</span>);</span><br><span class="line"><span class="comment">//    当nums[numsSize-1]&lt;=0 即全部均小于零 则 nums[0]*nums[1]*nums[numsSize-1]最大</span></span><br><span class="line">    <span class="comment">/*if(nums[numsSize-1]&lt;=0)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        return  nums[0]*nums[1]*nums[numsSize-1];</span></span><br><span class="line"><span class="comment">    &#125; else if(nums[numsSize-2]&lt;0)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">//        此时 nums[numsSize-1]&gt;0 &amp;&amp;nums[numsSize-2]&lt;0] 此时返回nums[0]*nums[1]*nums[numsSize-1]</span></span><br><span class="line"><span class="comment">        return  nums[0]*nums[1]*nums[numsSize-1];</span></span><br><span class="line"><span class="comment">    &#125; else if(nums[numsSize-2]==0) &#123;</span></span><br><span class="line"><span class="comment">//        此时直接返回0</span></span><br><span class="line"><span class="comment">        return 0;</span></span><br><span class="line"><span class="comment">    &#125;else if(nums[numsSize-3]&lt;=0)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        return nums[numsSize-1]*nums[numsSize-2]*nums[numsSize-3];</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    return nums[numsSize-3]*nums[numsSize-2]*nums[numsSize-1];*/</span></span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>,max1;</span><br><span class="line">    max=nums[numsSize<span class="number">-1</span>]*nums[<span class="number">0</span>]*nums[<span class="number">1</span>];</span><br><span class="line">    max1=nums[numsSize<span class="number">-1</span>]*nums[numsSize<span class="number">-2</span>]*nums[numsSize<span class="number">-3</span>];</span><br><span class="line">    <span class="keyword">if</span>(max&gt;max1)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>  max1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=&#123;<span class="number">722</span>,<span class="number">634</span>,<span class="number">-504</span>,<span class="number">-379</span>,<span class="number">163</span>,<span class="number">-613</span>,<span class="number">-842</span>,<span class="number">-578</span>,<span class="number">750</span>,<span class="number">951</span>,<span class="number">-158</span>,<span class="number">30</span>,<span class="number">-238</span>,<span class="number">-392</span>,<span class="number">-487</span>,<span class="number">-797</span>,<span class="number">-157</span>,<span class="number">-374</span>,<span class="number">999</span>,<span class="number">-5</span>,<span class="number">-521</span>,<span class="number">-879</span>,<span class="number">-858</span>,<span class="number">382</span>,<span class="number">626</span>,<span class="number">803</span>,<span class="number">-347</span>,<span class="number">903</span>,<span class="number">-205</span>,<span class="number">57</span>,<span class="number">-342</span>,<span class="number">186</span>,<span class="number">-736</span>,<span class="number">17</span>,<span class="number">83</span>,<span class="number">726</span>,<span class="number">-960</span>,<span class="number">343</span>,<span class="number">-984</span>,<span class="number">937</span>,<span class="number">-758</span>,<span class="number">-122</span>,<span class="number">577</span>,<span class="number">-595</span>,<span class="number">-544</span>,<span class="number">-559</span>,<span class="number">903</span>,<span class="number">-183</span>,<span class="number">192</span>,<span class="number">825</span>,<span class="number">368</span>,<span class="number">-674</span>,<span class="number">57</span>,<span class="number">-959</span>,<span class="number">884</span>,<span class="number">29</span>,<span class="number">-681</span>,<span class="number">-339</span>,<span class="number">582</span>,<span class="number">969</span>,<span class="number">-95</span>,<span class="number">-455</span>,<span class="number">-275</span>,<span class="number">205</span>,<span class="number">-548</span>,<span class="number">79</span>,<span class="number">258</span>,<span class="number">35</span>,<span class="number">233</span>,<span class="number">203</span>,<span class="number">20</span>,<span class="number">-936</span>,<span class="number">878</span>,<span class="number">-868</span>,<span class="number">-458</span>,<span class="number">-882</span>,<span class="number">867</span>,<span class="number">-664</span>,<span class="number">-892</span>,<span class="number">-687</span>,<span class="number">322</span>,<span class="number">844</span>,<span class="number">-745</span>,<span class="number">447</span>,<span class="number">-909</span>,<span class="number">-586</span>,<span class="number">69</span>,<span class="number">-88</span>,<span class="number">88</span>,<span class="number">445</span>,<span class="number">-553</span>,<span class="number">-666</span>,<span class="number">130</span>,<span class="number">-640</span>,<span class="number">-918</span>,<span class="number">-7</span>,<span class="number">-420</span>,<span class="number">-368</span>,<span class="number">250</span>,<span class="number">-786</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize= <span class="keyword">sizeof</span>(nums)/ <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,maximumProduct(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an integer array, find three numbers whose product is maximum an
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-268. Missing Number</title>
    <link href="https://aclihui.com/2018/09/03/leetcode-268-missing-number/"/>
    <id>https://aclihui.com/2018/09/03/leetcode-268-missing-number/</id>
    <published>2018-09-03T13:11:00.000Z</published>
    <updated>2018-12-03T01:38:07.792Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array containing n distinct numbers taken from 0, 1, 2, …, n, find the one that is missing from the array.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,0,1]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [9,6,4,2,3,5,7,0,1]</span><br><span class="line">Output: 8</span><br></pre></td></tr></table></figure></p><p>Note:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>思路：<br> 找出最大值，进行判断,看那一位数字缺少。</p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">missingNumber</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=numsSize+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//    计算出相对应的n</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;nums[i])</span><br><span class="line">        &#123;</span><br><span class="line">            n=nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    求所缺少的数值是那个</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(;j&lt;numsSize;j++)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            若存在 相对应的数值则 flag=1</span></span><br><span class="line">            <span class="keyword">if</span>(i==nums[j])</span><br><span class="line">            &#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>&amp;&amp;j==numsSize)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize= <span class="keyword">sizeof</span>(nums)/ <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,missingNumber(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array containing n distinct numbers taken from 0, 1, 2, …, n,
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-217. Contains Duplicate</title>
    <link href="https://aclihui.com/2018/09/01/leetcode-217-contains-duplicate/"/>
    <id>https://aclihui.com/2018/09/01/leetcode-217-contains-duplicate/</id>
    <published>2018-09-01T13:57:00.000Z</published>
    <updated>2018-12-03T01:36:56.878Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array of integers, find if the array contains any duplicates.</p><p>Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,1]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,2,3,4]</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure></p><p>Example 3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [1,1,1,3,3,4,3,2,4,2]</span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一个基础的问题 分析比较简单只要，当前的数组中的数值和后面的有相等的就返回true 知道最后一个都没有相同的返回false</p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">containsDuplicate</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(numsSize==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;numsSize;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]==nums[j])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=&#123;<span class="number">3</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize= <span class="keyword">sizeof</span>(nums)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,containsDuplicate(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array of integers, find if the array contains any duplicates.
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-231-power-of-two</title>
    <link href="https://aclihui.com/2018/09/01/leetcode-231-power-of-two/"/>
    <id>https://aclihui.com/2018/09/01/leetcode-231-power-of-two/</id>
    <published>2018-09-01T13:57:00.000Z</published>
    <updated>2018-12-03T01:35:53.752Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an integer, write a function to determine if it is a power of two.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 1</span><br><span class="line">Output: true </span><br><span class="line">Explanation: 20 = 1</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 16</span><br><span class="line">Output: true</span><br><span class="line">Explanation: 24 = 16</span><br></pre></td></tr></table></figure></p><p>Example 3:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: 218</span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一个求2的N次方的题目，较为基础.<br>第一种解题方法：直接求是不是即可（暴力判断）；<br>第二种解法：位运算，判断所有位数上仅有一位是1其他的是0即可求得。  </p><h4 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">bool isPowerOfTwo(int n) &#123;</span><br><span class="line">            if(n&lt;=0)</span><br><span class="line">            &#123;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">            else if(n==1||n==2)</span><br><span class="line">            &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;</span><br><span class="line">            while(n&gt;1)</span><br><span class="line">            &#123;</span><br><span class="line">                if(n%2==1)</span><br><span class="line">                &#123;</span><br><span class="line">                    return false;</span><br><span class="line">                &#125;</span><br><span class="line">                else n=n/2;</span><br><span class="line">            &#125;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n=218;</span><br><span class="line">    printf(&quot;%d&quot;,isPowerOfTwo(n));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an integer, write a function to determine if it is a power of tw
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-258. Add Digits</title>
    <link href="https://aclihui.com/2018/08/30/leetcode-258-add-digits/"/>
    <id>https://aclihui.com/2018/08/30/leetcode-258-add-digits/</id>
    <published>2018-08-30T12:51:00.000Z</published>
    <updated>2018-12-03T01:34:18.302Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: 38</span><br><span class="line">Output: 2 </span><br><span class="line">Explanation: The process is like: 3 + 8 = 11, 1 + 1 = 2. </span><br><span class="line">             Since 2 has only one digit, return it.</span><br></pre></td></tr></table></figure></p><p>Follow up:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could you do it without any loop/recursion in O(1) runtime?</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一个数字根的问题，此题的解法其实有很多，但是最后一句换你能在时间复杂度为1的qiang</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given a non-negative integer num, repeatedly add all its digits until 
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-283. Move Zeroes</title>
    <link href="https://aclihui.com/2018/08/30/leetcode-283-move-zeroes/"/>
    <id>https://aclihui.com/2018/08/30/leetcode-283-move-zeroes/</id>
    <published>2018-08-30T12:51:00.000Z</published>
    <updated>2018-12-03T01:31:46.229Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array nums, write a function to move all 0’s to the end of it while maintaining the relative order of the non-zero elements.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [0,1,0,3,12]</span><br><span class="line">Output: [1,3,12,0,0]</span><br></pre></td></tr></table></figure></p><p>Note:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">You must do this in-place without making a copy of the array.</span><br><span class="line">Minimize the total number of operations.</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>此题比较基础，这就是冒泡排序的变形版，题目的要求不能新开辟新的数组空间，将所有的操作的的操作步数最小化。   </p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">moveZeroes</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;numsSize ; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp=nums[i];</span><br><span class="line">                nums[i]=nums[j];</span><br><span class="line">                nums[j]=temp;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=&#123;<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize=<span class="keyword">sizeof</span>(nums)/ <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    输出为[1,3,12,0,0]</span></span><br><span class="line"><span class="comment">//    执行函数</span></span><br><span class="line">    moveZeroes(nums,numsSize);</span><br><span class="line"><span class="comment">//    输出每个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d,"</span>,nums[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array nums, write a function to move all 0’s to the end of it
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-292. Nim Game</title>
    <link href="https://aclihui.com/2018/08/29/leetcode-292-nim-game/"/>
    <id>https://aclihui.com/2018/08/29/leetcode-292-nim-game/</id>
    <published>2018-08-29T14:45:00.000Z</published>
    <updated>2018-12-03T01:29:37.853Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.</p><p>Both of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Input: 4</span><br><span class="line">Output: false </span><br><span class="line">Explanation: If there are 4 stones in the heap, then you will never win the game;</span><br><span class="line">             No matter 1, 2, or 3 stones you remove, the last stone will always be </span><br><span class="line">             removed by your friend.</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>此题目中的问题的解释可分为当问题可以被4整除的时候都无法赢得游戏，如果不能被4整除的时候只要最后将数字归的4以下就可以赢。</p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">canWinNim</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">canWinNim</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">4</span>==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="相关内容"><a href="#相关内容" class="headerlink" title="相关内容"></a>相关内容</h4><p><a href="https://www.topster.cn/take-off/" target="_blank" rel="noopener">小游戏</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;You are playing the following Nim Game with your friend: There is a he
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-191. Number of 1 Bits</title>
    <link href="https://aclihui.com/2018/08/28/leetcode-191-number-of-1-bits/"/>
    <id>https://aclihui.com/2018/08/28/leetcode-191-number-of-1-bits/</id>
    <published>2018-08-28T13:48:00.000Z</published>
    <updated>2018-12-03T01:27:15.234Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Write a function that takes an unsigned integer and returns the number of ‘1’ bits it has (also known as the Hamming weight).</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 11</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: Integer 11 has binary representation 00000000000000000000000000001011</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: 128</span><br><span class="line">Output: 1</span><br><span class="line">Explanation: Integer 128 has binary representation 00000000000000000000000010000000</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这是一个明显的位运算的问题，尤其是实例中的解释的问题，尤其显示为对位进行的操作，因此这里有一个简单的方法，时间复杂度比较的低，对最后一位进行按位与运算。</p><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">hammingWeight</span><span class="params">(<span class="keyword">uint32_t</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> normal=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        对n和1求位运算 指定最后一位为1的位运算</span></span><br><span class="line">        <span class="keyword">if</span>(n &amp; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ++normal;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        对n进行向右移动</span></span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> normal;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Write a function that takes an unsigned integer and returns the number
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-169. Majority Element</title>
    <link href="https://aclihui.com/2018/08/27/leetcode-169-majority-element/"/>
    <id>https://aclihui.com/2018/08/27/leetcode-169-majority-element/</id>
    <published>2018-08-27T06:57:00.000Z</published>
    <updated>2018-12-03T01:25:47.862Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.</p><p>You may assume that the array is non-empty and the majority element always exist in the array.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [3,2,3]</span><br><span class="line">Output: 3</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [2,2,1,1,1,2,2]</span><br><span class="line">Output: 2</span><br></pre></td></tr></table></figure></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>本来想强行暴力，解决问题，但无奈时间超限</p><h4 id="暴力法-run-time-error"><a href="#暴力法-run-time-error" class="headerlink" title="暴力法 run time error"></a>暴力法 run time error</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">int</span> *num= (<span class="keyword">int</span> *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;numsSize;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]==nums[j])</span><br><span class="line">            &#123;</span><br><span class="line">                num[i]++;</span><br><span class="line">            &#125; <span class="comment">//end if</span></span><br><span class="line">        &#125; <span class="comment">//end for</span></span><br><span class="line">    &#125;<span class="comment">// end for</span></span><br><span class="line"><span class="comment">//   判断最大值输出</span></span><br><span class="line">    <span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> imax=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(max&lt;num[i]) &#123;</span><br><span class="line">            max = num[i];</span><br><span class="line">            imax = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[imax];</span><br></pre></td></tr></table></figure><h4 id="时间简短版"><a href="#时间简短版" class="headerlink" title="时间简短版"></a>时间简短版</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmpfunc</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> * a, <span class="keyword">const</span> <span class="keyword">void</span> * b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ( *(<span class="keyword">int</span>*)a - *(<span class="keyword">int</span>*)b );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line"> qsort(nums,numsSize,<span class="keyword">sizeof</span>(<span class="keyword">int</span>),cmpfunc);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> nums[numsSize/<span class="number">2</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array of size n, find the majority element. The majority elem
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-167. Two Sum II - Input array is sorted</title>
    <link href="https://aclihui.com/2018/08/26/leetcode-167-two-sum-ii-input-array-is-sorted/"/>
    <id>https://aclihui.com/2018/08/26/leetcode-167-two-sum-ii-input-array-is-sorted/</id>
    <published>2018-08-26T13:29:00.000Z</published>
    <updated>2018-12-03T01:23:56.075Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an array of integers that is already sorted in ascending order, find two numbers such that they add up to a specific target number.</p><p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.</p><p>Note:</p><p>Your returned answers (both index1 and index2) are not zero-based.<br>You may assume that each input would have exactly one solution and you may not use the same element twice.<br>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: numbers = [2,7,11,15], target = 9</span><br><span class="line">Output: [1,2]</span><br><span class="line">Explanation: The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>较为简单<br>此题目只需保证 前后的两个目标值不重复，且后边的角标大于前面的，且从1开始计数。</p><h4 id="C代码"><a href="#C代码" class="headerlink" title="C代码"></a>C代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">twoSum</span><span class="params">(<span class="keyword">int</span>* numbers, <span class="keyword">int</span> numbersSize, <span class="keyword">int</span> target, <span class="keyword">int</span>* returnSize)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> *re=(<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="number">2</span>*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numbersSize;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;numbersSize;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(numbers[i]+numbers[j]==target)</span><br><span class="line">        &#123;</span><br><span class="line">            re[<span class="number">0</span>]=i+<span class="number">1</span>;</span><br><span class="line">            re[<span class="number">1</span>]=j+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">*returnSize=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> re;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an array of integers that is already sorted in ascending order, 
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-136-single-number</title>
    <link href="https://aclihui.com/2018/08/25/leetcode-136-single-number/"/>
    <id>https://aclihui.com/2018/08/25/leetcode-136-single-number/</id>
    <published>2018-08-25T15:23:00.000Z</published>
    <updated>2018-12-03T01:22:40.141Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given a non-empty array of integers, every element appears twice except for one. Find that single one.</p><p>Note:</p><p>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [2,2,1]</span><br><span class="line">Output: 1</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [4,1,2,1,2]</span><br><span class="line">Output: 4</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>此处为二维的表格构造<br>在开辟一个数组<br>判定当i!=j 的时候 在判定是否有相等元素<br>C代码如下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by YUGE on 2018/8/25.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdlib.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line"><span class="comment">//    int num[numsSize];</span></span><br><span class="line"><span class="comment">//    动态开辟数组</span></span><br><span class="line">    <span class="keyword">int</span>  *num=(<span class="keyword">int</span>*)<span class="built_in">malloc</span>(numsSize* <span class="keyword">sizeof</span>(<span class="keyword">int</span>)) ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        赋值给另一个数组，是两个数组一致</span></span><br><span class="line">        num[i]=nums[i];</span><br><span class="line">        <span class="comment">//printf("%d-%d\n",nums[i],num[i]);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;numsSize;j++)</span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//            if(i==j)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">////           如果相等则跳过不判断</span></span><br><span class="line"><span class="comment">//                continue;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//            两个数相等则这个数出现了两次 直接跳出下面的循环</span></span><br><span class="line">           <span class="keyword">if</span>(nums[i]==num[j]&amp;&amp;i!=j)</span><br><span class="line">           &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(j==(numsSize<span class="number">-1</span>))</span><br><span class="line">            &#123;</span><br><span class="line"><span class="comment">//                到最后如果没有找到相等的元素则直接可以返回值</span></span><br><span class="line">                <span class="comment">//printf("%d\n",nums[i]);</span></span><br><span class="line">                <span class="keyword">return</span> nums[i];</span><br><span class="line"></span><br><span class="line">            &#125; <span class="comment">//end if</span></span><br><span class="line">        &#125;<span class="comment">//end for</span></span><br><span class="line">    &#125; <span class="comment">//end for</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[] =&#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> numsSize = <span class="number">0</span>;</span><br><span class="line">    numsSize= <span class="keyword">sizeof</span>(nums)/ <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,numsSize);</span><br><span class="line">    singleNumber(nums,numsSize);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,singleNumber(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given a non-empty array of integers, every element appears twice excep
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-58. Length of Last Word求最后的单词的长度</title>
    <link href="https://aclihui.com/2018/08/24/leetcode-58-length-of-last-word/"/>
    <id>https://aclihui.com/2018/08/24/leetcode-58-length-of-last-word/</id>
    <published>2018-08-24T14:28:00.000Z</published>
    <updated>2018-12-03T01:21:35.864Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given a string s consists of upper/lower-case alphabets and empty space characters ‘ ‘, return the length of last word in the string.</p><p>If the last word does not exist, return 0.</p><p>Note: A word is defined as a character sequence consists of non-space characters only.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: &quot;Hello World&quot;</span><br><span class="line">Output: 5</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>由题目知道，这是求最后一个单词长度的问题 ，但是要考虑的为题是最后一个单词后面可能有无数的空格，因此如果只用空格判断单词之间间隔的话，会造成，最后一个单词不好进行判断。</p><h3 id="正确思路"><a href="#正确思路" class="headerlink" title="正确思路"></a>正确思路</h3><ol><li>判断最后一个是不是空格，如果是空格，直接遍历前面一个，直到找到最后一个单词位置。</li><li>对每个此时的单词进行技术，我这里因为只用了做下标的i计数，显得略带繁琐</li></ol><h4 id="C语言代码"><a href="#C语言代码" class="headerlink" title="C语言代码"></a>C语言代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lengthOfLastWord</span><span class="params">(<span class="keyword">char</span>* s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (sSize = <span class="number">0</span>; s[sSize] != <span class="string">'\0'</span>; sSize++);</span><br><span class="line">    <span class="keyword">int</span> i = sSize - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> space = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(s[i]!=<span class="string">' '</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">' '</span> &amp;&amp; flag == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//            最后边的空格的个数</span></span><br><span class="line">            space++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i] == <span class="string">' '</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sSize<span class="number">-1</span>-space-i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[]=<span class="string">"man is "</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,lengthOfLastWord(s));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given a string s consists of upper/lower-case alphabets and empty spac
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>笔记</title>
    <link href="https://aclihui.com/2018/08/24/note/"/>
    <id>https://aclihui.com/2018/08/24/note/</id>
    <published>2018-08-24T06:24:00.000Z</published>
    <updated>2018-12-03T01:20:28.948Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p>linux vi遇到 Press ENTER or type command to continue怎么办<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">解决方案:在命令行窗口输入q!退出即可</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux&quot;&gt;&lt;a href=&quot;#Linux&quot; class=&quot;headerlink&quot; title=&quot;Linux&quot;&gt;&lt;/a&gt;Linux&lt;/h1&gt;&lt;p&gt;linux vi遇到 Press ENTER or type command to continue怎么办&lt;br&gt;&lt;
      
    
    </summary>
    
      <category term="笔记" scheme="https://aclihui.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://aclihui.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-53-maximum-subarray</title>
    <link href="https://aclihui.com/2018/08/23/leetcode-53-maximum-subarray/"/>
    <id>https://aclihui.com/2018/08/23/leetcode-53-maximum-subarray/</id>
    <published>2018-08-23T14:28:00.000Z</published>
    <updated>2018-12-03T01:19:02.682Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.</p><p>Example:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: [-2,1,-3,4,-1,2,1,-5,4],</span><br><span class="line">Output: 6</span><br><span class="line">Explanation: [4,-1,2,1] has the largest sum = 6.</span><br></pre></td></tr></table></figure></p><p>Follow up:</p><p>If you have figured out the O(n) solution, try coding another solution using the divide and conquer approach, which is more subtle.</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这道题一开始的时候太大意了，忽略了很多的问题，当然这个</p><h4 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h4><p> 错误的理解题目的意思是求数组中的最大的和，因而答案就有点微妙了。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(numsSize==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;numsSize;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i]&lt;nums[j])</span><br><span class="line">                    temp=nums[i];</span><br><span class="line">                    nums[i]=nums[j];</span><br><span class="line">                    nums[j]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="comment">//end for</span></span><br><span class="line">              <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">              &#123;</span><br><span class="line">                  <span class="keyword">if</span>(nums[i]&gt;<span class="number">0</span>)</span><br><span class="line">                  &#123;</span><br><span class="line">                      sum+=nums[i];</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125; <span class="comment">//end for</span></span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> nums[]=[<span class="number">-2</span>,<span class="number">1</span>,<span class="number">-3</span>,<span class="number">4</span>,<span class="number">-1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-5</span>,<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">int</span> numsSize=<span class="number">9</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,maxSubArray(nums,numsSize));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="正确的题解"><a href="#正确的题解" class="headerlink" title="正确的题解"></a>正确的题解</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> i,j;</span><br><span class="line">            <span class="keyword">if</span>(numsSize&lt;=<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> realSum=nums[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;numsSize;i++)&#123;</span><br><span class="line">                sum+=nums[i];</span><br><span class="line"><span class="comment">//                if  sum is less than zero</span></span><br><span class="line">                <span class="keyword">if</span>(sum&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                    realSum = (realSum&gt;sum)?realSum:sum;</span><br><span class="line">                    sum = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="comment">//                sum&gt;0 判断当前数值和sum的大小，如果realSum 大则选择realSum 否则想下一个延伸</span></span><br><span class="line">                realSum = (realSum&gt;sum)?realSum:sum;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> realSum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;Given an integer array nums, find the contiguous subarray (containing 
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
  <entry>
    <title>常见的正则表达式</title>
    <link href="https://aclihui.com/2018/08/23/regular-expression/"/>
    <id>https://aclihui.com/2018/08/23/regular-expression/</id>
    <published>2018-08-23T00:39:00.000Z</published>
    <updated>2018-12-03T01:17:11.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见的正则表达式"><a href="#常见的正则表达式" class="headerlink" title="常见的正则表达式"></a>常见的正则表达式</h1><p>不知道是从哪里下载的了，如有侵权请直接留言。</p><h3 id="一、校验数字的表达式"><a href="#一、校验数字的表达式" class="headerlink" title="一、校验数字的表达式"></a>一、校验数字的表达式</h3><p> 1 数字：^[0-9]<em>$<br> 2 n位的数字：^\d{n}$<br> 3 至少n位的数字：^\d{n,}$<br> 4 m-n位的数字：^\d{m,n}$<br> 5 零和非零开头的数字：^(0|[1-9][0-9]</em>)$<br> 6 非零开头的最多带两位小数的数字：^([1-9][0-9]<em>)+(.[0-9]{1,2})?$<br> 7 带1-2位小数的正数或负数：^(-)?\d+(.\d{1,2})?$<br> 8 正数、负数、和小数：^(-|+)?\d+(.\d+)?$<br> 9 有两位小数的正实数：^[0-9]+(.[0-9]{2})?$<br>10 有1~3位小数的正实数：^[0-9]+(.[0-9]{1,3})?$<br>11 非零的正整数：^[1-9]\d</em>$ 或 ^([1-9][0-9]<em>){1,3}$ 或 ^+?[1-9][0-9]</em>$<br>12 非零的负整数：^-[1-9][]0-9”<em>$ 或 ^-[1-9]\d</em>$<br>13 非负整数：^\d+$ 或 ^[1-9]\d<em>|0$<br>14 非正整数：^-[1-9]\d</em>|0$ 或 ^((-\d+)|(0+))$<br>15 非负浮点数：^\d+(.\d+)?$ 或 ^[1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>|0?.0+|0$<br>16 非正浮点数：^((-\d+(.\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>))|0?.0+|0$<br>17 正浮点数：^[1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>$ 或 ^(([0-9]+.[0-9]<em>[1-9][0-9]</em>)|([0-9]<em>[1-9][0-9]</em>.[0-9]+)|([0-9]<em>[1-9][0-9]</em>))$<br>18 负浮点数：^-([1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>)$ 或 ^(-(([0-9]+.[0-9]<em>[1-9][0-9]</em>)|([0-9]<em>[1-9][0-9]</em>.[0-9]+)|([0-9]<em>[1-9][0-9]</em>)))$<br>19 浮点数：^(-?\d+)(.\d+)?$ 或 ^-?([1-9]\d<em>.\d</em>|0.\d<em>[1-9]\d</em>|0?.0+|0)$</p><h3 id="二、校验字符的表达式"><a href="#二、校验字符的表达式" class="headerlink" title="二、校验字符的表达式"></a>二、校验字符的表达式</h3><p> 1 汉字：^[\u4e00-\u9fa5]{0,}$<br> 2 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$<br> 3 长度为3-20的所有字符：^.{3,20}$<br> 4 由26个英文字母组成的字符串：^[A-Za-z]+$<br> 5 由26个大写英文字母组成的字符串：^[A-Z]+$<br> 6 由26个小写英文字母组成的字符串：^[a-z]+$<br> 7 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$<br> 8 由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w{3,20}$<br> 9 中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$<br>10 中文、英文、数字但不包括下划线等符号：^ [\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$<br>11 可以输入含有^%&amp;’,;=?$\”等字符：[^%&amp;’,;=?$\x22]+<br>12 禁止输入含有~的字符：[^~\x22]+  </p><h3 id="三、特殊需求表达式"><a href="#三、特殊需求表达式" class="headerlink" title="三、特殊需求表达式"></a>三、特殊需求表达式</h3><p> 1 Email地址：^\w+([-+.]\w+)<em>@\w+([-.]\w+)</em>.\w+([-.]\w+)<em>$<br> 2 域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?<br> 3 InternetURL：[a-zA-z]+://[^\s]</em> 或 ^http://([\w-]+.)+[\w-]+(/[\w-./?%&amp;=]<em>)?$<br> 4 手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$<br> 5 电话号码(“XXX-XXXXXXX”、”XXXX-XXXXXXXX”、”XXX-XXXXXXX”、”XXX-XXXXXXXX”、”XXXXXXX”和”XXXXXXXX)：^((\d{3,4}-)|\d{3.4}-)?\d{7,8}$<br> 6 国内电话号码(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7}<br> 7 身份证号：<br>    15或18位身份证：^\d{15}|\d{18}$<br>    15位身份证：^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$<br>    18位身份证：^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{4}$<br> 8 短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$<br> 9 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$<br>10 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w{5,17}$<br>11 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.</em>\d)(?=.<em>[a-z])(?=.</em>[A-Z]).{8,10}$<br>12 日期格式：^\d{4}-\d{1,2}-\d{1,2}<br>13 一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$<br>14 一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$<br>15 钱的输入格式：<br>16    1.有四种钱的表示形式我们可以接受:”10000.00” 和 “10,000.00”, 和没有 “分” 的 “10000” 和 “10,000”：^[1-9][0-9]<em>$<br>17    2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符”0”不通过,所以我们采用下面的形式：^(0|[1-9][0-9]</em>)$<br>18    3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]<em>)$<br>19    4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$<br>20    5.必须说明的是,小数点后面至少应该有1位数,所以”10.”是不通过的,但是 “10” 和 “10.2” 是通过的：^[0-9]+(.[0-9]{2})?$<br>21    6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]{1,2})?$<br>22    7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]{1,3}(,[0-9]{3})</em>(.[0-9]{1,2})?$<br>23    8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]{1,3}(,[0-9]{3})<em>)(.[0-9]{1,2})?$<br>24    备注：这就是最终结果了,别忘了”+”可以用”</em>“替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里<br>25 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\.[x|X][m|M][l|L]$<br>26 中文字符的正则表达式：[\u4e00-\u9fa5]<br>27 双字节字符：[^\x00-\xff]    (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))<br>28 空白行的正则表达式：\n\s<em>\r    (可以用来删除空白行)<br>29 HTML标记的正则表达式：&lt;(\S</em>?)[^&gt;]<em>&gt;.</em>?&lt;/\1&gt;|&lt;.<em>? /&gt;    (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)<br>30 首尾空白字符的正则表达式：^\s</em>|\s<em>$或(^\s</em>)|(\s*$)    (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)<br>31 腾讯QQ号：[1-9][0-9]{4,}    (腾讯QQ号从10000开始)<br>32 中国邮政编码：[1-9]\d{5}(?!\d)    (中国邮政编码为6位数字)<br>33 IP地址：\d+.\d+.\d+.\d+    (提取IP地址时有用)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常见的正则表达式&quot;&gt;&lt;a href=&quot;#常见的正则表达式&quot; class=&quot;headerlink&quot; title=&quot;常见的正则表达式&quot;&gt;&lt;/a&gt;常见的正则表达式&lt;/h1&gt;&lt;p&gt;不知道是从哪里下载的了，如有侵权请直接留言。&lt;/p&gt;
&lt;h3 id=&quot;一、校验数字的表达式&quot;
      
    
    </summary>
    
      <category term="正则表达式" scheme="https://aclihui.com/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="其他" scheme="https://aclihui.com/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="正则表达式" scheme="https://aclihui.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="其他" scheme="https://aclihui.com/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>leetcode-70-climbing-stairs爬楼梯</title>
    <link href="https://aclihui.com/2018/08/22/leetcode-70-climbing-stairs/"/>
    <id>https://aclihui.com/2018/08/22/leetcode-70-climbing-stairs/</id>
    <published>2018-08-22T14:15:00.000Z</published>
    <updated>2018-12-03T01:40:10.455Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>You are climbing a stair case. It takes n steps to reach to the top.</p><p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p><p>Note: Given n will be a positive integer.</p><p>Example 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input: 2</span><br><span class="line">Output: 2</span><br><span class="line">Explanation: There are two ways to climb to the top.</span><br><span class="line">1. 1 step + 1 step</span><br><span class="line">2. 2 steps</span><br></pre></td></tr></table></figure></p><p>Example 2:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input: 3</span><br><span class="line">Output: 3</span><br><span class="line">Explanation: There are three ways to climb to the top.</span><br><span class="line">1. 1 step + 1 step + 1 step</span><br><span class="line">2. 1 step + 2 steps</span><br><span class="line">3. 2 steps + 1 step</span><br></pre></td></tr></table></figure></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>这道题是利用了递归的一道问题，如果单纯的使用递归进行求解就会时间超限。因此必须用其他的方法求解。<br>在CPP中可以用vector动态的开辟数组，是一个比较好用的模板，用其解题可事半功倍。</p><h4 id="第一种，递归"><a href="#第一种，递归" class="headerlink" title="第一种，递归"></a>第一种，递归</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="comment">//    第一种解法递归</span></span><br><span class="line">     <span class="keyword">if</span> (n==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> climbStairs(n<span class="number">-1</span>)+climbStairs(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="第二种，vector方法"><a href="#第二种，vector方法" class="headerlink" title="第二种，vector方法"></a>第二种，vector方法</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//    第二种解法</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res(n+<span class="number">1</span>);</span><br><span class="line">    res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    res[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        res[i]=res[i<span class="number">-1</span>]+res[i<span class="number">-2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意要使用using namespace std 和#include&lt; vector &gt;</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;You are climbing a stair case. It takes n steps to reach to the top.&lt;/
      
    
    </summary>
    
      <category term="LeetCode" scheme="https://aclihui.com/categories/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/categories/LeetCode/ACM/"/>
    
    
      <category term="LeetCode" scheme="https://aclihui.com/tags/LeetCode/"/>
    
      <category term="ACM" scheme="https://aclihui.com/tags/ACM/"/>
    
  </entry>
  
</feed>
